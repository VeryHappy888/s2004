// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: def.proto

package waproto

import (
	encoding_binary "encoding/binary"
	fmt "fmt"
	github_com_golang_protobuf_proto "github.com/golang/protobuf/proto"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AdReplyInfo_AD_REPLY_INFO_MEDIATYPE int32

const (
	AdReplyInfo_NONE  AdReplyInfo_AD_REPLY_INFO_MEDIATYPE = 0
	AdReplyInfo_IMAGE AdReplyInfo_AD_REPLY_INFO_MEDIATYPE = 1
	AdReplyInfo_VIDEO AdReplyInfo_AD_REPLY_INFO_MEDIATYPE = 2
)

var AdReplyInfo_AD_REPLY_INFO_MEDIATYPE_name = map[int32]string{
	0: "NONE",
	1: "IMAGE",
	2: "VIDEO",
}

var AdReplyInfo_AD_REPLY_INFO_MEDIATYPE_value = map[string]int32{
	"NONE":  0,
	"IMAGE": 1,
	"VIDEO": 2,
}

func (x AdReplyInfo_AD_REPLY_INFO_MEDIATYPE) Enum() *AdReplyInfo_AD_REPLY_INFO_MEDIATYPE {
	p := new(AdReplyInfo_AD_REPLY_INFO_MEDIATYPE)
	*p = x
	return p
}

func (x AdReplyInfo_AD_REPLY_INFO_MEDIATYPE) String() string {
	return proto.EnumName(AdReplyInfo_AD_REPLY_INFO_MEDIATYPE_name, int32(x))
}

func (x *AdReplyInfo_AD_REPLY_INFO_MEDIATYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AdReplyInfo_AD_REPLY_INFO_MEDIATYPE_value, data, "AdReplyInfo_AD_REPLY_INFO_MEDIATYPE")
	if err != nil {
		return err
	}
	*x = AdReplyInfo_AD_REPLY_INFO_MEDIATYPE(value)
	return nil
}

func (AdReplyInfo_AD_REPLY_INFO_MEDIATYPE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{11, 0}
}

type ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_FONTTYPE int32

const (
	ExtendedTextMessage_SANS_SERIF        ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_FONTTYPE = 0
	ExtendedTextMessage_SERIF             ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_FONTTYPE = 1
	ExtendedTextMessage_NORICAN_REGULAR   ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_FONTTYPE = 2
	ExtendedTextMessage_BRYNDAN_WRITE     ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_FONTTYPE = 3
	ExtendedTextMessage_BEBASNEUE_REGULAR ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_FONTTYPE = 4
	ExtendedTextMessage_OSWALD_HEAVY      ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_FONTTYPE = 5
)

var ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_FONTTYPE_name = map[int32]string{
	0: "SANS_SERIF",
	1: "SERIF",
	2: "NORICAN_REGULAR",
	3: "BRYNDAN_WRITE",
	4: "BEBASNEUE_REGULAR",
	5: "OSWALD_HEAVY",
}

var ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_FONTTYPE_value = map[string]int32{
	"SANS_SERIF":        0,
	"SERIF":             1,
	"NORICAN_REGULAR":   2,
	"BRYNDAN_WRITE":     3,
	"BEBASNEUE_REGULAR": 4,
	"OSWALD_HEAVY":      5,
}

func (x ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_FONTTYPE) Enum() *ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_FONTTYPE {
	p := new(ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_FONTTYPE)
	*p = x
	return p
}

func (x ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_FONTTYPE) String() string {
	return proto.EnumName(ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_FONTTYPE_name, int32(x))
}

func (x *ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_FONTTYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_FONTTYPE_value, data, "ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_FONTTYPE")
	if err != nil {
		return err
	}
	*x = ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_FONTTYPE(value)
	return nil
}

func (ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_FONTTYPE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{17, 0}
}

type ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_PREVIEWTYPE int32

const (
	ExtendedTextMessage_NONE  ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_PREVIEWTYPE = 0
	ExtendedTextMessage_VIDEO ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_PREVIEWTYPE = 1
)

var ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_PREVIEWTYPE_name = map[int32]string{
	0: "NONE",
	1: "VIDEO",
}

var ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_PREVIEWTYPE_value = map[string]int32{
	"NONE":  0,
	"VIDEO": 1,
}

func (x ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_PREVIEWTYPE) Enum() *ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_PREVIEWTYPE {
	p := new(ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_PREVIEWTYPE)
	*p = x
	return p
}

func (x ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_PREVIEWTYPE) String() string {
	return proto.EnumName(ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_PREVIEWTYPE_name, int32(x))
}

func (x *ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_PREVIEWTYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_PREVIEWTYPE_value, data, "ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_PREVIEWTYPE")
	if err != nil {
		return err
	}
	*x = ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_PREVIEWTYPE(value)
	return nil
}

func (ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_PREVIEWTYPE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{17, 1}
}

type VideoMessage_VIDEO_MESSAGE_ATTRIBUTION int32

const (
	VideoMessage_NONE  VideoMessage_VIDEO_MESSAGE_ATTRIBUTION = 0
	VideoMessage_GIPHY VideoMessage_VIDEO_MESSAGE_ATTRIBUTION = 1
	VideoMessage_TENOR VideoMessage_VIDEO_MESSAGE_ATTRIBUTION = 2
)

var VideoMessage_VIDEO_MESSAGE_ATTRIBUTION_name = map[int32]string{
	0: "NONE",
	1: "GIPHY",
	2: "TENOR",
}

var VideoMessage_VIDEO_MESSAGE_ATTRIBUTION_value = map[string]int32{
	"NONE":  0,
	"GIPHY": 1,
	"TENOR": 2,
}

func (x VideoMessage_VIDEO_MESSAGE_ATTRIBUTION) Enum() *VideoMessage_VIDEO_MESSAGE_ATTRIBUTION {
	p := new(VideoMessage_VIDEO_MESSAGE_ATTRIBUTION)
	*p = x
	return p
}

func (x VideoMessage_VIDEO_MESSAGE_ATTRIBUTION) String() string {
	return proto.EnumName(VideoMessage_VIDEO_MESSAGE_ATTRIBUTION_name, int32(x))
}

func (x *VideoMessage_VIDEO_MESSAGE_ATTRIBUTION) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(VideoMessage_VIDEO_MESSAGE_ATTRIBUTION_value, data, "VideoMessage_VIDEO_MESSAGE_ATTRIBUTION")
	if err != nil {
		return err
	}
	*x = VideoMessage_VIDEO_MESSAGE_ATTRIBUTION(value)
	return nil
}

func (VideoMessage_VIDEO_MESSAGE_ATTRIBUTION) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{20, 0}
}

type ProtocolMessage_PROTOCOL_MESSAGE_TYPE int32

const (
	ProtocolMessage_REVOKE                    ProtocolMessage_PROTOCOL_MESSAGE_TYPE = 0
	ProtocolMessage_EPHEMERAL_SETTING         ProtocolMessage_PROTOCOL_MESSAGE_TYPE = 3
	ProtocolMessage_EPHEMERAL_SYNC_RESPONSE   ProtocolMessage_PROTOCOL_MESSAGE_TYPE = 4
	ProtocolMessage_HISTORY_SYNC_NOTIFICATION ProtocolMessage_PROTOCOL_MESSAGE_TYPE = 5
)

var ProtocolMessage_PROTOCOL_MESSAGE_TYPE_name = map[int32]string{
	0: "REVOKE",
	3: "EPHEMERAL_SETTING",
	4: "EPHEMERAL_SYNC_RESPONSE",
	5: "HISTORY_SYNC_NOTIFICATION",
}

var ProtocolMessage_PROTOCOL_MESSAGE_TYPE_value = map[string]int32{
	"REVOKE":                    0,
	"EPHEMERAL_SETTING":         3,
	"EPHEMERAL_SYNC_RESPONSE":   4,
	"HISTORY_SYNC_NOTIFICATION": 5,
}

func (x ProtocolMessage_PROTOCOL_MESSAGE_TYPE) Enum() *ProtocolMessage_PROTOCOL_MESSAGE_TYPE {
	p := new(ProtocolMessage_PROTOCOL_MESSAGE_TYPE)
	*p = x
	return p
}

func (x ProtocolMessage_PROTOCOL_MESSAGE_TYPE) String() string {
	return proto.EnumName(ProtocolMessage_PROTOCOL_MESSAGE_TYPE_name, int32(x))
}

func (x *ProtocolMessage_PROTOCOL_MESSAGE_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ProtocolMessage_PROTOCOL_MESSAGE_TYPE_value, data, "ProtocolMessage_PROTOCOL_MESSAGE_TYPE")
	if err != nil {
		return err
	}
	*x = ProtocolMessage_PROTOCOL_MESSAGE_TYPE(value)
	return nil
}

func (ProtocolMessage_PROTOCOL_MESSAGE_TYPE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{23, 0}
}

type HistorySyncNotification_HISTORY_SYNC_NOTIFICATION_HISTORYSYNCTYPE int32

const (
	HistorySyncNotification_INITIAL_BOOTSTRAP HistorySyncNotification_HISTORY_SYNC_NOTIFICATION_HISTORYSYNCTYPE = 0
	HistorySyncNotification_INITIAL_STATUS_V3 HistorySyncNotification_HISTORY_SYNC_NOTIFICATION_HISTORYSYNCTYPE = 1
	HistorySyncNotification_FULL              HistorySyncNotification_HISTORY_SYNC_NOTIFICATION_HISTORYSYNCTYPE = 2
	HistorySyncNotification_RECENT            HistorySyncNotification_HISTORY_SYNC_NOTIFICATION_HISTORYSYNCTYPE = 3
)

var HistorySyncNotification_HISTORY_SYNC_NOTIFICATION_HISTORYSYNCTYPE_name = map[int32]string{
	0: "INITIAL_BOOTSTRAP",
	1: "INITIAL_STATUS_V3",
	2: "FULL",
	3: "RECENT",
}

var HistorySyncNotification_HISTORY_SYNC_NOTIFICATION_HISTORYSYNCTYPE_value = map[string]int32{
	"INITIAL_BOOTSTRAP": 0,
	"INITIAL_STATUS_V3": 1,
	"FULL":              2,
	"RECENT":            3,
}

func (x HistorySyncNotification_HISTORY_SYNC_NOTIFICATION_HISTORYSYNCTYPE) Enum() *HistorySyncNotification_HISTORY_SYNC_NOTIFICATION_HISTORYSYNCTYPE {
	p := new(HistorySyncNotification_HISTORY_SYNC_NOTIFICATION_HISTORYSYNCTYPE)
	*p = x
	return p
}

func (x HistorySyncNotification_HISTORY_SYNC_NOTIFICATION_HISTORYSYNCTYPE) String() string {
	return proto.EnumName(HistorySyncNotification_HISTORY_SYNC_NOTIFICATION_HISTORYSYNCTYPE_name, int32(x))
}

func (x *HistorySyncNotification_HISTORY_SYNC_NOTIFICATION_HISTORYSYNCTYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(HistorySyncNotification_HISTORY_SYNC_NOTIFICATION_HISTORYSYNCTYPE_value, data, "HistorySyncNotification_HISTORY_SYNC_NOTIFICATION_HISTORYSYNCTYPE")
	if err != nil {
		return err
	}
	*x = HistorySyncNotification_HISTORY_SYNC_NOTIFICATION_HISTORYSYNCTYPE(value)
	return nil
}

func (HistorySyncNotification_HISTORY_SYNC_NOTIFICATION_HISTORYSYNCTYPE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{24, 0}
}

type HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_DAYOFWEEKTYPE int32

const (
	HSMDateTimeComponent_MONDAY    HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_DAYOFWEEKTYPE = 1
	HSMDateTimeComponent_TUESDAY   HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_DAYOFWEEKTYPE = 2
	HSMDateTimeComponent_WEDNESDAY HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_DAYOFWEEKTYPE = 3
	HSMDateTimeComponent_THURSDAY  HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_DAYOFWEEKTYPE = 4
	HSMDateTimeComponent_FRIDAY    HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_DAYOFWEEKTYPE = 5
	HSMDateTimeComponent_SATURDAY  HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_DAYOFWEEKTYPE = 6
	HSMDateTimeComponent_SUNDAY    HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_DAYOFWEEKTYPE = 7
)

var HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_DAYOFWEEKTYPE_name = map[int32]string{
	1: "MONDAY",
	2: "TUESDAY",
	3: "WEDNESDAY",
	4: "THURSDAY",
	5: "FRIDAY",
	6: "SATURDAY",
	7: "SUNDAY",
}

var HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_DAYOFWEEKTYPE_value = map[string]int32{
	"MONDAY":    1,
	"TUESDAY":   2,
	"WEDNESDAY": 3,
	"THURSDAY":  4,
	"FRIDAY":    5,
	"SATURDAY":  6,
	"SUNDAY":    7,
}

func (x HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_DAYOFWEEKTYPE) Enum() *HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_DAYOFWEEKTYPE {
	p := new(HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_DAYOFWEEKTYPE)
	*p = x
	return p
}

func (x HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_DAYOFWEEKTYPE) String() string {
	return proto.EnumName(HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_DAYOFWEEKTYPE_name, int32(x))
}

func (x *HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_DAYOFWEEKTYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_DAYOFWEEKTYPE_value, data, "HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_DAYOFWEEKTYPE")
	if err != nil {
		return err
	}
	*x = HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_DAYOFWEEKTYPE(value)
	return nil
}

func (HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_DAYOFWEEKTYPE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{27, 0}
}

type HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_CALENDARTYPE int32

const (
	HSMDateTimeComponent_GREGORIAN   HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_CALENDARTYPE = 1
	HSMDateTimeComponent_SOLAR_HIJRI HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_CALENDARTYPE = 2
)

var HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_CALENDARTYPE_name = map[int32]string{
	1: "GREGORIAN",
	2: "SOLAR_HIJRI",
}

var HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_CALENDARTYPE_value = map[string]int32{
	"GREGORIAN":   1,
	"SOLAR_HIJRI": 2,
}

func (x HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_CALENDARTYPE) Enum() *HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_CALENDARTYPE {
	p := new(HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_CALENDARTYPE)
	*p = x
	return p
}

func (x HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_CALENDARTYPE) String() string {
	return proto.EnumName(HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_CALENDARTYPE_name, int32(x))
}

func (x *HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_CALENDARTYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_CALENDARTYPE_value, data, "HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_CALENDARTYPE")
	if err != nil {
		return err
	}
	*x = HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_CALENDARTYPE(value)
	return nil
}

func (HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_CALENDARTYPE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{27, 1}
}

type WebFeatures_WEB_FEATURES_FLAG int32

const (
	WebFeatures_NOT_STARTED   WebFeatures_WEB_FEATURES_FLAG = 0
	WebFeatures_FORCE_UPGRADE WebFeatures_WEB_FEATURES_FLAG = 1
	WebFeatures_DEVELOPMENT   WebFeatures_WEB_FEATURES_FLAG = 2
	WebFeatures_PRODUCTION    WebFeatures_WEB_FEATURES_FLAG = 3
)

var WebFeatures_WEB_FEATURES_FLAG_name = map[int32]string{
	0: "NOT_STARTED",
	1: "FORCE_UPGRADE",
	2: "DEVELOPMENT",
	3: "PRODUCTION",
}

var WebFeatures_WEB_FEATURES_FLAG_value = map[string]int32{
	"NOT_STARTED":   0,
	"FORCE_UPGRADE": 1,
	"DEVELOPMENT":   2,
	"PRODUCTION":    3,
}

func (x WebFeatures_WEB_FEATURES_FLAG) Enum() *WebFeatures_WEB_FEATURES_FLAG {
	p := new(WebFeatures_WEB_FEATURES_FLAG)
	*p = x
	return p
}

func (x WebFeatures_WEB_FEATURES_FLAG) String() string {
	return proto.EnumName(WebFeatures_WEB_FEATURES_FLAG_name, int32(x))
}

func (x *WebFeatures_WEB_FEATURES_FLAG) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(WebFeatures_WEB_FEATURES_FLAG_value, data, "WebFeatures_WEB_FEATURES_FLAG")
	if err != nil {
		return err
	}
	*x = WebFeatures_WEB_FEATURES_FLAG(value)
	return nil
}

func (WebFeatures_WEB_FEATURES_FLAG) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{50, 0}
}

type PaymentInfo_PAYMENT_INFO_CURRENCY int32

const (
	PaymentInfo_UNKNOWN_CURRENCY PaymentInfo_PAYMENT_INFO_CURRENCY = 0
	PaymentInfo_INR              PaymentInfo_PAYMENT_INFO_CURRENCY = 1
)

var PaymentInfo_PAYMENT_INFO_CURRENCY_name = map[int32]string{
	0: "UNKNOWN_CURRENCY",
	1: "INR",
}

var PaymentInfo_PAYMENT_INFO_CURRENCY_value = map[string]int32{
	"UNKNOWN_CURRENCY": 0,
	"INR":              1,
}

func (x PaymentInfo_PAYMENT_INFO_CURRENCY) Enum() *PaymentInfo_PAYMENT_INFO_CURRENCY {
	p := new(PaymentInfo_PAYMENT_INFO_CURRENCY)
	*p = x
	return p
}

func (x PaymentInfo_PAYMENT_INFO_CURRENCY) String() string {
	return proto.EnumName(PaymentInfo_PAYMENT_INFO_CURRENCY_name, int32(x))
}

func (x *PaymentInfo_PAYMENT_INFO_CURRENCY) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PaymentInfo_PAYMENT_INFO_CURRENCY_value, data, "PaymentInfo_PAYMENT_INFO_CURRENCY")
	if err != nil {
		return err
	}
	*x = PaymentInfo_PAYMENT_INFO_CURRENCY(value)
	return nil
}

func (PaymentInfo_PAYMENT_INFO_CURRENCY) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{54, 0}
}

type PaymentInfo_PAYMENT_INFO_STATUS int32

const (
	PaymentInfo_UNKNOWN_STATUS     PaymentInfo_PAYMENT_INFO_STATUS = 0
	PaymentInfo_PROCESSING         PaymentInfo_PAYMENT_INFO_STATUS = 1
	PaymentInfo_SENT               PaymentInfo_PAYMENT_INFO_STATUS = 2
	PaymentInfo_NEED_TO_ACCEPT     PaymentInfo_PAYMENT_INFO_STATUS = 3
	PaymentInfo_COMPLETE           PaymentInfo_PAYMENT_INFO_STATUS = 4
	PaymentInfo_COULD_NOT_COMPLETE PaymentInfo_PAYMENT_INFO_STATUS = 5
	PaymentInfo_REFUNDED           PaymentInfo_PAYMENT_INFO_STATUS = 6
	PaymentInfo_EXPIRED            PaymentInfo_PAYMENT_INFO_STATUS = 7
	PaymentInfo_REJECTED           PaymentInfo_PAYMENT_INFO_STATUS = 8
	PaymentInfo_CANCELLED          PaymentInfo_PAYMENT_INFO_STATUS = 9
	PaymentInfo_WAITING_FOR_PAYER  PaymentInfo_PAYMENT_INFO_STATUS = 10
	PaymentInfo_WAITING            PaymentInfo_PAYMENT_INFO_STATUS = 11
)

var PaymentInfo_PAYMENT_INFO_STATUS_name = map[int32]string{
	0:  "UNKNOWN_STATUS",
	1:  "PROCESSING",
	2:  "SENT",
	3:  "NEED_TO_ACCEPT",
	4:  "COMPLETE",
	5:  "COULD_NOT_COMPLETE",
	6:  "REFUNDED",
	7:  "EXPIRED",
	8:  "REJECTED",
	9:  "CANCELLED",
	10: "WAITING_FOR_PAYER",
	11: "WAITING",
}

var PaymentInfo_PAYMENT_INFO_STATUS_value = map[string]int32{
	"UNKNOWN_STATUS":     0,
	"PROCESSING":         1,
	"SENT":               2,
	"NEED_TO_ACCEPT":     3,
	"COMPLETE":           4,
	"COULD_NOT_COMPLETE": 5,
	"REFUNDED":           6,
	"EXPIRED":            7,
	"REJECTED":           8,
	"CANCELLED":          9,
	"WAITING_FOR_PAYER":  10,
	"WAITING":            11,
}

func (x PaymentInfo_PAYMENT_INFO_STATUS) Enum() *PaymentInfo_PAYMENT_INFO_STATUS {
	p := new(PaymentInfo_PAYMENT_INFO_STATUS)
	*p = x
	return p
}

func (x PaymentInfo_PAYMENT_INFO_STATUS) String() string {
	return proto.EnumName(PaymentInfo_PAYMENT_INFO_STATUS_name, int32(x))
}

func (x *PaymentInfo_PAYMENT_INFO_STATUS) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PaymentInfo_PAYMENT_INFO_STATUS_value, data, "PaymentInfo_PAYMENT_INFO_STATUS")
	if err != nil {
		return err
	}
	*x = PaymentInfo_PAYMENT_INFO_STATUS(value)
	return nil
}

func (PaymentInfo_PAYMENT_INFO_STATUS) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{54, 1}
}

type PaymentInfo_PAYMENT_INFO_TXNSTATUS int32

const (
	PaymentInfo_UNKNOWN                       PaymentInfo_PAYMENT_INFO_TXNSTATUS = 0
	PaymentInfo_PENDING_SETUP                 PaymentInfo_PAYMENT_INFO_TXNSTATUS = 1
	PaymentInfo_PENDING_RECEIVER_SETUP        PaymentInfo_PAYMENT_INFO_TXNSTATUS = 2
	PaymentInfo_INIT                          PaymentInfo_PAYMENT_INFO_TXNSTATUS = 3
	PaymentInfo_SUCCESS                       PaymentInfo_PAYMENT_INFO_TXNSTATUS = 4
	PaymentInfo_COMPLETED                     PaymentInfo_PAYMENT_INFO_TXNSTATUS = 5
	PaymentInfo_FAILED                        PaymentInfo_PAYMENT_INFO_TXNSTATUS = 6
	PaymentInfo_FAILED_RISK                   PaymentInfo_PAYMENT_INFO_TXNSTATUS = 7
	PaymentInfo_FAILED_PROCESSING             PaymentInfo_PAYMENT_INFO_TXNSTATUS = 8
	PaymentInfo_FAILED_RECEIVER_PROCESSING    PaymentInfo_PAYMENT_INFO_TXNSTATUS = 9
	PaymentInfo_FAILED_DA                     PaymentInfo_PAYMENT_INFO_TXNSTATUS = 10
	PaymentInfo_FAILED_DA_FINAL               PaymentInfo_PAYMENT_INFO_TXNSTATUS = 11
	PaymentInfo_REFUNDED_TXN                  PaymentInfo_PAYMENT_INFO_TXNSTATUS = 12
	PaymentInfo_REFUND_FAILED                 PaymentInfo_PAYMENT_INFO_TXNSTATUS = 13
	PaymentInfo_REFUND_FAILED_PROCESSING      PaymentInfo_PAYMENT_INFO_TXNSTATUS = 14
	PaymentInfo_REFUND_FAILED_DA              PaymentInfo_PAYMENT_INFO_TXNSTATUS = 15
	PaymentInfo_EXPIRED_TXN                   PaymentInfo_PAYMENT_INFO_TXNSTATUS = 16
	PaymentInfo_AUTH_CANCELED                 PaymentInfo_PAYMENT_INFO_TXNSTATUS = 17
	PaymentInfo_AUTH_CANCEL_FAILED_PROCESSING PaymentInfo_PAYMENT_INFO_TXNSTATUS = 18
	PaymentInfo_AUTH_CANCEL_FAILED            PaymentInfo_PAYMENT_INFO_TXNSTATUS = 19
	PaymentInfo_COLLECT_INIT                  PaymentInfo_PAYMENT_INFO_TXNSTATUS = 20
	PaymentInfo_COLLECT_SUCCESS               PaymentInfo_PAYMENT_INFO_TXNSTATUS = 21
	PaymentInfo_COLLECT_FAILED                PaymentInfo_PAYMENT_INFO_TXNSTATUS = 22
	PaymentInfo_COLLECT_FAILED_RISK           PaymentInfo_PAYMENT_INFO_TXNSTATUS = 23
	PaymentInfo_COLLECT_REJECTED              PaymentInfo_PAYMENT_INFO_TXNSTATUS = 24
	PaymentInfo_COLLECT_EXPIRED               PaymentInfo_PAYMENT_INFO_TXNSTATUS = 25
	PaymentInfo_COLLECT_CANCELED              PaymentInfo_PAYMENT_INFO_TXNSTATUS = 26
	PaymentInfo_COLLECT_CANCELLING            PaymentInfo_PAYMENT_INFO_TXNSTATUS = 27
)

var PaymentInfo_PAYMENT_INFO_TXNSTATUS_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "PENDING_SETUP",
	2:  "PENDING_RECEIVER_SETUP",
	3:  "INIT",
	4:  "SUCCESS",
	5:  "COMPLETED",
	6:  "FAILED",
	7:  "FAILED_RISK",
	8:  "FAILED_PROCESSING",
	9:  "FAILED_RECEIVER_PROCESSING",
	10: "FAILED_DA",
	11: "FAILED_DA_FINAL",
	12: "REFUNDED_TXN",
	13: "REFUND_FAILED",
	14: "REFUND_FAILED_PROCESSING",
	15: "REFUND_FAILED_DA",
	16: "EXPIRED_TXN",
	17: "AUTH_CANCELED",
	18: "AUTH_CANCEL_FAILED_PROCESSING",
	19: "AUTH_CANCEL_FAILED",
	20: "COLLECT_INIT",
	21: "COLLECT_SUCCESS",
	22: "COLLECT_FAILED",
	23: "COLLECT_FAILED_RISK",
	24: "COLLECT_REJECTED",
	25: "COLLECT_EXPIRED",
	26: "COLLECT_CANCELED",
	27: "COLLECT_CANCELLING",
}

var PaymentInfo_PAYMENT_INFO_TXNSTATUS_value = map[string]int32{
	"UNKNOWN":                       0,
	"PENDING_SETUP":                 1,
	"PENDING_RECEIVER_SETUP":        2,
	"INIT":                          3,
	"SUCCESS":                       4,
	"COMPLETED":                     5,
	"FAILED":                        6,
	"FAILED_RISK":                   7,
	"FAILED_PROCESSING":             8,
	"FAILED_RECEIVER_PROCESSING":    9,
	"FAILED_DA":                     10,
	"FAILED_DA_FINAL":               11,
	"REFUNDED_TXN":                  12,
	"REFUND_FAILED":                 13,
	"REFUND_FAILED_PROCESSING":      14,
	"REFUND_FAILED_DA":              15,
	"EXPIRED_TXN":                   16,
	"AUTH_CANCELED":                 17,
	"AUTH_CANCEL_FAILED_PROCESSING": 18,
	"AUTH_CANCEL_FAILED":            19,
	"COLLECT_INIT":                  20,
	"COLLECT_SUCCESS":               21,
	"COLLECT_FAILED":                22,
	"COLLECT_FAILED_RISK":           23,
	"COLLECT_REJECTED":              24,
	"COLLECT_EXPIRED":               25,
	"COLLECT_CANCELED":              26,
	"COLLECT_CANCELLING":            27,
}

func (x PaymentInfo_PAYMENT_INFO_TXNSTATUS) Enum() *PaymentInfo_PAYMENT_INFO_TXNSTATUS {
	p := new(PaymentInfo_PAYMENT_INFO_TXNSTATUS)
	*p = x
	return p
}

func (x PaymentInfo_PAYMENT_INFO_TXNSTATUS) String() string {
	return proto.EnumName(PaymentInfo_PAYMENT_INFO_TXNSTATUS_name, int32(x))
}

func (x *PaymentInfo_PAYMENT_INFO_TXNSTATUS) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PaymentInfo_PAYMENT_INFO_TXNSTATUS_value, data, "PaymentInfo_PAYMENT_INFO_TXNSTATUS")
	if err != nil {
		return err
	}
	*x = PaymentInfo_PAYMENT_INFO_TXNSTATUS(value)
	return nil
}

func (PaymentInfo_PAYMENT_INFO_TXNSTATUS) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{54, 2}
}

type WebMessageInfo_WEB_MESSAGE_INFO_STATUS int32

const (
	WebMessageInfo_ERROR        WebMessageInfo_WEB_MESSAGE_INFO_STATUS = 0
	WebMessageInfo_PENDING      WebMessageInfo_WEB_MESSAGE_INFO_STATUS = 1
	WebMessageInfo_SERVER_ACK   WebMessageInfo_WEB_MESSAGE_INFO_STATUS = 2
	WebMessageInfo_DELIVERY_ACK WebMessageInfo_WEB_MESSAGE_INFO_STATUS = 3
	WebMessageInfo_READ         WebMessageInfo_WEB_MESSAGE_INFO_STATUS = 4
	WebMessageInfo_PLAYED       WebMessageInfo_WEB_MESSAGE_INFO_STATUS = 5
)

var WebMessageInfo_WEB_MESSAGE_INFO_STATUS_name = map[int32]string{
	0: "ERROR",
	1: "PENDING",
	2: "SERVER_ACK",
	3: "DELIVERY_ACK",
	4: "READ",
	5: "PLAYED",
}

var WebMessageInfo_WEB_MESSAGE_INFO_STATUS_value = map[string]int32{
	"ERROR":        0,
	"PENDING":      1,
	"SERVER_ACK":   2,
	"DELIVERY_ACK": 3,
	"READ":         4,
	"PLAYED":       5,
}

func (x WebMessageInfo_WEB_MESSAGE_INFO_STATUS) Enum() *WebMessageInfo_WEB_MESSAGE_INFO_STATUS {
	p := new(WebMessageInfo_WEB_MESSAGE_INFO_STATUS)
	*p = x
	return p
}

func (x WebMessageInfo_WEB_MESSAGE_INFO_STATUS) String() string {
	return proto.EnumName(WebMessageInfo_WEB_MESSAGE_INFO_STATUS_name, int32(x))
}

func (x *WebMessageInfo_WEB_MESSAGE_INFO_STATUS) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(WebMessageInfo_WEB_MESSAGE_INFO_STATUS_value, data, "WebMessageInfo_WEB_MESSAGE_INFO_STATUS")
	if err != nil {
		return err
	}
	*x = WebMessageInfo_WEB_MESSAGE_INFO_STATUS(value)
	return nil
}

func (WebMessageInfo_WEB_MESSAGE_INFO_STATUS) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{55, 0}
}

type WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE int32

const (
	WebMessageInfo_UNKNOWN                                                  WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 0
	WebMessageInfo_REVOKE                                                   WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 1
	WebMessageInfo_CIPHERTEXT                                               WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 2
	WebMessageInfo_FUTUREPROOF                                              WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 3
	WebMessageInfo_NON_VERIFIED_TRANSITION                                  WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 4
	WebMessageInfo_UNVERIFIED_TRANSITION                                    WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 5
	WebMessageInfo_VERIFIED_TRANSITION                                      WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 6
	WebMessageInfo_VERIFIED_LOW_UNKNOWN                                     WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 7
	WebMessageInfo_VERIFIED_HIGH                                            WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 8
	WebMessageInfo_VERIFIED_INITIAL_UNKNOWN                                 WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 9
	WebMessageInfo_VERIFIED_INITIAL_LOW                                     WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 10
	WebMessageInfo_VERIFIED_INITIAL_HIGH                                    WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 11
	WebMessageInfo_VERIFIED_TRANSITION_ANY_TO_NONE                          WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 12
	WebMessageInfo_VERIFIED_TRANSITION_ANY_TO_HIGH                          WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 13
	WebMessageInfo_VERIFIED_TRANSITION_HIGH_TO_LOW                          WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 14
	WebMessageInfo_VERIFIED_TRANSITION_HIGH_TO_UNKNOWN                      WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 15
	WebMessageInfo_VERIFIED_TRANSITION_UNKNOWN_TO_LOW                       WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 16
	WebMessageInfo_VERIFIED_TRANSITION_LOW_TO_UNKNOWN                       WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 17
	WebMessageInfo_VERIFIED_TRANSITION_NONE_TO_LOW                          WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 18
	WebMessageInfo_VERIFIED_TRANSITION_NONE_TO_UNKNOWN                      WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 19
	WebMessageInfo_GROUP_CREATE                                             WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 20
	WebMessageInfo_GROUP_CHANGE_SUBJECT                                     WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 21
	WebMessageInfo_GROUP_CHANGE_ICON                                        WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 22
	WebMessageInfo_GROUP_CHANGE_INVITE_LINK                                 WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 23
	WebMessageInfo_GROUP_CHANGE_DESCRIPTION                                 WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 24
	WebMessageInfo_GROUP_CHANGE_RESTRICT                                    WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 25
	WebMessageInfo_GROUP_CHANGE_ANNOUNCE                                    WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 26
	WebMessageInfo_GROUP_PARTICIPANT_ADD                                    WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 27
	WebMessageInfo_GROUP_PARTICIPANT_REMOVE                                 WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 28
	WebMessageInfo_GROUP_PARTICIPANT_PROMOTE                                WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 29
	WebMessageInfo_GROUP_PARTICIPANT_DEMOTE                                 WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 30
	WebMessageInfo_GROUP_PARTICIPANT_INVITE                                 WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 31
	WebMessageInfo_GROUP_PARTICIPANT_LEAVE                                  WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 32
	WebMessageInfo_GROUP_PARTICIPANT_CHANGE_NUMBER                          WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 33
	WebMessageInfo_BROADCAST_CREATE                                         WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 34
	WebMessageInfo_BROADCAST_ADD                                            WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 35
	WebMessageInfo_BROADCAST_REMOVE                                         WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 36
	WebMessageInfo_GENERIC_NOTIFICATION                                     WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 37
	WebMessageInfo_E2E_IDENTITY_CHANGED                                     WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 38
	WebMessageInfo_E2E_ENCRYPTED                                            WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 39
	WebMessageInfo_CALL_MISSED_VOICE                                        WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 40
	WebMessageInfo_CALL_MISSED_VIDEO                                        WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 41
	WebMessageInfo_INDIVIDUAL_CHANGE_NUMBER                                 WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 42
	WebMessageInfo_GROUP_DELETE                                             WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 43
	WebMessageInfo_GROUP_ANNOUNCE_MODE_MESSAGE_BOUNCE                       WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 44
	WebMessageInfo_CALL_MISSED_GROUP_VOICE                                  WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 45
	WebMessageInfo_CALL_MISSED_GROUP_VIDEO                                  WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 46
	WebMessageInfo_PAYMENT_CIPHERTEXT                                       WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 47
	WebMessageInfo_PAYMENT_FUTUREPROOF                                      WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 48
	WebMessageInfo_PAYMENT_TRANSACTION_STATUS_UPDATE_FAILED                 WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 49
	WebMessageInfo_PAYMENT_TRANSACTION_STATUS_UPDATE_REFUNDED               WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 50
	WebMessageInfo_PAYMENT_TRANSACTION_STATUS_UPDATE_REFUND_FAILED          WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 51
	WebMessageInfo_PAYMENT_TRANSACTION_STATUS_RECEIVER_PENDING_SETUP        WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 52
	WebMessageInfo_PAYMENT_TRANSACTION_STATUS_RECEIVER_SUCCESS_AFTER_HICCUP WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 53
	WebMessageInfo_PAYMENT_ACTION_ACCOUNT_SETUP_REMINDER                    WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 54
	WebMessageInfo_PAYMENT_ACTION_SEND_PAYMENT_REMINDER                     WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 55
	WebMessageInfo_PAYMENT_ACTION_SEND_PAYMENT_INVITATION                   WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 56
	WebMessageInfo_PAYMENT_ACTION_REQUEST_DECLINED                          WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 57
	WebMessageInfo_PAYMENT_ACTION_REQUEST_EXPIRED                           WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 58
	WebMessageInfo_PAYMENT_ACTION_REQUEST_CANCELLED                         WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 59
	WebMessageInfo_BIZ_VERIFIED_TRANSITION_TOP_TO_BOTTOM                    WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 60
	WebMessageInfo_BIZ_VERIFIED_TRANSITION_BOTTOM_TO_TOP                    WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 61
	WebMessageInfo_BIZ_INTRO_TOP                                            WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 62
	WebMessageInfo_BIZ_INTRO_BOTTOM                                         WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 63
	WebMessageInfo_BIZ_NAME_CHANGE                                          WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 64
	WebMessageInfo_BIZ_MOVE_TO_CONSUMER_APP                                 WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 65
	WebMessageInfo_BIZ_TWO_TIER_MIGRATION_TOP                               WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 66
	WebMessageInfo_BIZ_TWO_TIER_MIGRATION_BOTTOM                            WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 67
	WebMessageInfo_OVERSIZED                                                WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 68
	WebMessageInfo_GROUP_CHANGE_NO_FREQUENTLY_FORWARDED                     WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 69
	WebMessageInfo_GROUP_V4_ADD_INVITE_SENT                                 WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 70
	WebMessageInfo_GROUP_PARTICIPANT_ADD_REQUEST_JOIN                       WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 71
	WebMessageInfo_CHANGE_EPHEMERAL_SETTING                                 WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE = 72
)

var WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "REVOKE",
	2:  "CIPHERTEXT",
	3:  "FUTUREPROOF",
	4:  "NON_VERIFIED_TRANSITION",
	5:  "UNVERIFIED_TRANSITION",
	6:  "VERIFIED_TRANSITION",
	7:  "VERIFIED_LOW_UNKNOWN",
	8:  "VERIFIED_HIGH",
	9:  "VERIFIED_INITIAL_UNKNOWN",
	10: "VERIFIED_INITIAL_LOW",
	11: "VERIFIED_INITIAL_HIGH",
	12: "VERIFIED_TRANSITION_ANY_TO_NONE",
	13: "VERIFIED_TRANSITION_ANY_TO_HIGH",
	14: "VERIFIED_TRANSITION_HIGH_TO_LOW",
	15: "VERIFIED_TRANSITION_HIGH_TO_UNKNOWN",
	16: "VERIFIED_TRANSITION_UNKNOWN_TO_LOW",
	17: "VERIFIED_TRANSITION_LOW_TO_UNKNOWN",
	18: "VERIFIED_TRANSITION_NONE_TO_LOW",
	19: "VERIFIED_TRANSITION_NONE_TO_UNKNOWN",
	20: "GROUP_CREATE",
	21: "GROUP_CHANGE_SUBJECT",
	22: "GROUP_CHANGE_ICON",
	23: "GROUP_CHANGE_INVITE_LINK",
	24: "GROUP_CHANGE_DESCRIPTION",
	25: "GROUP_CHANGE_RESTRICT",
	26: "GROUP_CHANGE_ANNOUNCE",
	27: "GROUP_PARTICIPANT_ADD",
	28: "GROUP_PARTICIPANT_REMOVE",
	29: "GROUP_PARTICIPANT_PROMOTE",
	30: "GROUP_PARTICIPANT_DEMOTE",
	31: "GROUP_PARTICIPANT_INVITE",
	32: "GROUP_PARTICIPANT_LEAVE",
	33: "GROUP_PARTICIPANT_CHANGE_NUMBER",
	34: "BROADCAST_CREATE",
	35: "BROADCAST_ADD",
	36: "BROADCAST_REMOVE",
	37: "GENERIC_NOTIFICATION",
	38: "E2E_IDENTITY_CHANGED",
	39: "E2E_ENCRYPTED",
	40: "CALL_MISSED_VOICE",
	41: "CALL_MISSED_VIDEO",
	42: "INDIVIDUAL_CHANGE_NUMBER",
	43: "GROUP_DELETE",
	44: "GROUP_ANNOUNCE_MODE_MESSAGE_BOUNCE",
	45: "CALL_MISSED_GROUP_VOICE",
	46: "CALL_MISSED_GROUP_VIDEO",
	47: "PAYMENT_CIPHERTEXT",
	48: "PAYMENT_FUTUREPROOF",
	49: "PAYMENT_TRANSACTION_STATUS_UPDATE_FAILED",
	50: "PAYMENT_TRANSACTION_STATUS_UPDATE_REFUNDED",
	51: "PAYMENT_TRANSACTION_STATUS_UPDATE_REFUND_FAILED",
	52: "PAYMENT_TRANSACTION_STATUS_RECEIVER_PENDING_SETUP",
	53: "PAYMENT_TRANSACTION_STATUS_RECEIVER_SUCCESS_AFTER_HICCUP",
	54: "PAYMENT_ACTION_ACCOUNT_SETUP_REMINDER",
	55: "PAYMENT_ACTION_SEND_PAYMENT_REMINDER",
	56: "PAYMENT_ACTION_SEND_PAYMENT_INVITATION",
	57: "PAYMENT_ACTION_REQUEST_DECLINED",
	58: "PAYMENT_ACTION_REQUEST_EXPIRED",
	59: "PAYMENT_ACTION_REQUEST_CANCELLED",
	60: "BIZ_VERIFIED_TRANSITION_TOP_TO_BOTTOM",
	61: "BIZ_VERIFIED_TRANSITION_BOTTOM_TO_TOP",
	62: "BIZ_INTRO_TOP",
	63: "BIZ_INTRO_BOTTOM",
	64: "BIZ_NAME_CHANGE",
	65: "BIZ_MOVE_TO_CONSUMER_APP",
	66: "BIZ_TWO_TIER_MIGRATION_TOP",
	67: "BIZ_TWO_TIER_MIGRATION_BOTTOM",
	68: "OVERSIZED",
	69: "GROUP_CHANGE_NO_FREQUENTLY_FORWARDED",
	70: "GROUP_V4_ADD_INVITE_SENT",
	71: "GROUP_PARTICIPANT_ADD_REQUEST_JOIN",
	72: "CHANGE_EPHEMERAL_SETTING",
}

var WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE_value = map[string]int32{
	"UNKNOWN":                                                  0,
	"REVOKE":                                                   1,
	"CIPHERTEXT":                                               2,
	"FUTUREPROOF":                                              3,
	"NON_VERIFIED_TRANSITION":                                  4,
	"UNVERIFIED_TRANSITION":                                    5,
	"VERIFIED_TRANSITION":                                      6,
	"VERIFIED_LOW_UNKNOWN":                                     7,
	"VERIFIED_HIGH":                                            8,
	"VERIFIED_INITIAL_UNKNOWN":                                 9,
	"VERIFIED_INITIAL_LOW":                                     10,
	"VERIFIED_INITIAL_HIGH":                                    11,
	"VERIFIED_TRANSITION_ANY_TO_NONE":                          12,
	"VERIFIED_TRANSITION_ANY_TO_HIGH":                          13,
	"VERIFIED_TRANSITION_HIGH_TO_LOW":                          14,
	"VERIFIED_TRANSITION_HIGH_TO_UNKNOWN":                      15,
	"VERIFIED_TRANSITION_UNKNOWN_TO_LOW":                       16,
	"VERIFIED_TRANSITION_LOW_TO_UNKNOWN":                       17,
	"VERIFIED_TRANSITION_NONE_TO_LOW":                          18,
	"VERIFIED_TRANSITION_NONE_TO_UNKNOWN":                      19,
	"GROUP_CREATE":                                             20,
	"GROUP_CHANGE_SUBJECT":                                     21,
	"GROUP_CHANGE_ICON":                                        22,
	"GROUP_CHANGE_INVITE_LINK":                                 23,
	"GROUP_CHANGE_DESCRIPTION":                                 24,
	"GROUP_CHANGE_RESTRICT":                                    25,
	"GROUP_CHANGE_ANNOUNCE":                                    26,
	"GROUP_PARTICIPANT_ADD":                                    27,
	"GROUP_PARTICIPANT_REMOVE":                                 28,
	"GROUP_PARTICIPANT_PROMOTE":                                29,
	"GROUP_PARTICIPANT_DEMOTE":                                 30,
	"GROUP_PARTICIPANT_INVITE":                                 31,
	"GROUP_PARTICIPANT_LEAVE":                                  32,
	"GROUP_PARTICIPANT_CHANGE_NUMBER":                          33,
	"BROADCAST_CREATE":                                         34,
	"BROADCAST_ADD":                                            35,
	"BROADCAST_REMOVE":                                         36,
	"GENERIC_NOTIFICATION":                                     37,
	"E2E_IDENTITY_CHANGED":                                     38,
	"E2E_ENCRYPTED":                                            39,
	"CALL_MISSED_VOICE":                                        40,
	"CALL_MISSED_VIDEO":                                        41,
	"INDIVIDUAL_CHANGE_NUMBER":                                 42,
	"GROUP_DELETE":                                             43,
	"GROUP_ANNOUNCE_MODE_MESSAGE_BOUNCE":                       44,
	"CALL_MISSED_GROUP_VOICE":                                  45,
	"CALL_MISSED_GROUP_VIDEO":                                  46,
	"PAYMENT_CIPHERTEXT":                                       47,
	"PAYMENT_FUTUREPROOF":                                      48,
	"PAYMENT_TRANSACTION_STATUS_UPDATE_FAILED":                 49,
	"PAYMENT_TRANSACTION_STATUS_UPDATE_REFUNDED":               50,
	"PAYMENT_TRANSACTION_STATUS_UPDATE_REFUND_FAILED":          51,
	"PAYMENT_TRANSACTION_STATUS_RECEIVER_PENDING_SETUP":        52,
	"PAYMENT_TRANSACTION_STATUS_RECEIVER_SUCCESS_AFTER_HICCUP": 53,
	"PAYMENT_ACTION_ACCOUNT_SETUP_REMINDER":                    54,
	"PAYMENT_ACTION_SEND_PAYMENT_REMINDER":                     55,
	"PAYMENT_ACTION_SEND_PAYMENT_INVITATION":                   56,
	"PAYMENT_ACTION_REQUEST_DECLINED":                          57,
	"PAYMENT_ACTION_REQUEST_EXPIRED":                           58,
	"PAYMENT_ACTION_REQUEST_CANCELLED":                         59,
	"BIZ_VERIFIED_TRANSITION_TOP_TO_BOTTOM":                    60,
	"BIZ_VERIFIED_TRANSITION_BOTTOM_TO_TOP":                    61,
	"BIZ_INTRO_TOP":                                            62,
	"BIZ_INTRO_BOTTOM":                                         63,
	"BIZ_NAME_CHANGE":                                          64,
	"BIZ_MOVE_TO_CONSUMER_APP":                                 65,
	"BIZ_TWO_TIER_MIGRATION_TOP":                               66,
	"BIZ_TWO_TIER_MIGRATION_BOTTOM":                            67,
	"OVERSIZED":                                                68,
	"GROUP_CHANGE_NO_FREQUENTLY_FORWARDED":                     69,
	"GROUP_V4_ADD_INVITE_SENT":                                 70,
	"GROUP_PARTICIPANT_ADD_REQUEST_JOIN":                       71,
	"CHANGE_EPHEMERAL_SETTING":                                 72,
}

func (x WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE) Enum() *WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE {
	p := new(WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE)
	*p = x
	return p
}

func (x WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE) String() string {
	return proto.EnumName(WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE_name, int32(x))
}

func (x *WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE_value, data, "WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE")
	if err != nil {
		return err
	}
	*x = WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE(value)
	return nil
}

func (WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{55, 1}
}

type HydratedQuickReplyButton struct {
	DisplayText          *string  `protobuf:"bytes,1,opt,name=displayText" json:"displayText,omitempty"`
	Id                   *string  `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HydratedQuickReplyButton) Reset()         { *m = HydratedQuickReplyButton{} }
func (m *HydratedQuickReplyButton) String() string { return proto.CompactTextString(m) }
func (*HydratedQuickReplyButton) ProtoMessage()    {}
func (*HydratedQuickReplyButton) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{0}
}
func (m *HydratedQuickReplyButton) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *HydratedQuickReplyButton) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_HydratedQuickReplyButton.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *HydratedQuickReplyButton) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HydratedQuickReplyButton.Merge(m, src)
}
func (m *HydratedQuickReplyButton) XXX_Size() int {
	return m.Size()
}
func (m *HydratedQuickReplyButton) XXX_DiscardUnknown() {
	xxx_messageInfo_HydratedQuickReplyButton.DiscardUnknown(m)
}

var xxx_messageInfo_HydratedQuickReplyButton proto.InternalMessageInfo

func (m *HydratedQuickReplyButton) GetDisplayText() string {
	if m != nil && m.DisplayText != nil {
		return *m.DisplayText
	}
	return ""
}

func (m *HydratedQuickReplyButton) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

type HydratedURLButton struct {
	DisplayText          *string  `protobuf:"bytes,1,opt,name=displayText" json:"displayText,omitempty"`
	Url                  *string  `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HydratedURLButton) Reset()         { *m = HydratedURLButton{} }
func (m *HydratedURLButton) String() string { return proto.CompactTextString(m) }
func (*HydratedURLButton) ProtoMessage()    {}
func (*HydratedURLButton) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{1}
}
func (m *HydratedURLButton) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *HydratedURLButton) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_HydratedURLButton.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *HydratedURLButton) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HydratedURLButton.Merge(m, src)
}
func (m *HydratedURLButton) XXX_Size() int {
	return m.Size()
}
func (m *HydratedURLButton) XXX_DiscardUnknown() {
	xxx_messageInfo_HydratedURLButton.DiscardUnknown(m)
}

var xxx_messageInfo_HydratedURLButton proto.InternalMessageInfo

func (m *HydratedURLButton) GetDisplayText() string {
	if m != nil && m.DisplayText != nil {
		return *m.DisplayText
	}
	return ""
}

func (m *HydratedURLButton) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

type HydratedCallButton struct {
	DisplayText          *string  `protobuf:"bytes,1,opt,name=displayText" json:"displayText,omitempty"`
	PhoneNumber          *string  `protobuf:"bytes,2,opt,name=phoneNumber" json:"phoneNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HydratedCallButton) Reset()         { *m = HydratedCallButton{} }
func (m *HydratedCallButton) String() string { return proto.CompactTextString(m) }
func (*HydratedCallButton) ProtoMessage()    {}
func (*HydratedCallButton) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{2}
}
func (m *HydratedCallButton) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *HydratedCallButton) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_HydratedCallButton.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *HydratedCallButton) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HydratedCallButton.Merge(m, src)
}
func (m *HydratedCallButton) XXX_Size() int {
	return m.Size()
}
func (m *HydratedCallButton) XXX_DiscardUnknown() {
	xxx_messageInfo_HydratedCallButton.DiscardUnknown(m)
}

var xxx_messageInfo_HydratedCallButton proto.InternalMessageInfo

func (m *HydratedCallButton) GetDisplayText() string {
	if m != nil && m.DisplayText != nil {
		return *m.DisplayText
	}
	return ""
}

func (m *HydratedCallButton) GetPhoneNumber() string {
	if m != nil && m.PhoneNumber != nil {
		return *m.PhoneNumber
	}
	return ""
}

type HydratedTemplateButton struct {
	Index *uint32 `protobuf:"varint,4,opt,name=index" json:"index,omitempty"`
	// Types that are valid to be assigned to HydratedButton:
	//	*HydratedTemplateButton_QuickReplyButton
	//	*HydratedTemplateButton_UrlButton
	//	*HydratedTemplateButton_CallButton
	HydratedButton       isHydratedTemplateButton_HydratedButton `protobuf_oneof:"hydratedButton"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *HydratedTemplateButton) Reset()         { *m = HydratedTemplateButton{} }
func (m *HydratedTemplateButton) String() string { return proto.CompactTextString(m) }
func (*HydratedTemplateButton) ProtoMessage()    {}
func (*HydratedTemplateButton) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{3}
}
func (m *HydratedTemplateButton) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *HydratedTemplateButton) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_HydratedTemplateButton.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *HydratedTemplateButton) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HydratedTemplateButton.Merge(m, src)
}
func (m *HydratedTemplateButton) XXX_Size() int {
	return m.Size()
}
func (m *HydratedTemplateButton) XXX_DiscardUnknown() {
	xxx_messageInfo_HydratedTemplateButton.DiscardUnknown(m)
}

var xxx_messageInfo_HydratedTemplateButton proto.InternalMessageInfo

type isHydratedTemplateButton_HydratedButton interface {
	isHydratedTemplateButton_HydratedButton()
	MarshalTo([]byte) (int, error)
	Size() int
}

type HydratedTemplateButton_QuickReplyButton struct {
	QuickReplyButton *HydratedQuickReplyButton `protobuf:"bytes,1,opt,name=quickReplyButton,oneof" json:"quickReplyButton,omitempty"`
}
type HydratedTemplateButton_UrlButton struct {
	UrlButton *HydratedURLButton `protobuf:"bytes,2,opt,name=urlButton,oneof" json:"urlButton,omitempty"`
}
type HydratedTemplateButton_CallButton struct {
	CallButton *HydratedCallButton `protobuf:"bytes,3,opt,name=callButton,oneof" json:"callButton,omitempty"`
}

func (*HydratedTemplateButton_QuickReplyButton) isHydratedTemplateButton_HydratedButton() {}
func (*HydratedTemplateButton_UrlButton) isHydratedTemplateButton_HydratedButton()        {}
func (*HydratedTemplateButton_CallButton) isHydratedTemplateButton_HydratedButton()       {}

func (m *HydratedTemplateButton) GetHydratedButton() isHydratedTemplateButton_HydratedButton {
	if m != nil {
		return m.HydratedButton
	}
	return nil
}

func (m *HydratedTemplateButton) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *HydratedTemplateButton) GetQuickReplyButton() *HydratedQuickReplyButton {
	if x, ok := m.GetHydratedButton().(*HydratedTemplateButton_QuickReplyButton); ok {
		return x.QuickReplyButton
	}
	return nil
}

func (m *HydratedTemplateButton) GetUrlButton() *HydratedURLButton {
	if x, ok := m.GetHydratedButton().(*HydratedTemplateButton_UrlButton); ok {
		return x.UrlButton
	}
	return nil
}

func (m *HydratedTemplateButton) GetCallButton() *HydratedCallButton {
	if x, ok := m.GetHydratedButton().(*HydratedTemplateButton_CallButton); ok {
		return x.CallButton
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*HydratedTemplateButton) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*HydratedTemplateButton_QuickReplyButton)(nil),
		(*HydratedTemplateButton_UrlButton)(nil),
		(*HydratedTemplateButton_CallButton)(nil),
	}
}

type QuickReplyButton struct {
	DisplayText          *HighlyStructuredMessage `protobuf:"bytes,1,opt,name=displayText" json:"displayText,omitempty"`
	Id                   *string                  `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *QuickReplyButton) Reset()         { *m = QuickReplyButton{} }
func (m *QuickReplyButton) String() string { return proto.CompactTextString(m) }
func (*QuickReplyButton) ProtoMessage()    {}
func (*QuickReplyButton) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{4}
}
func (m *QuickReplyButton) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QuickReplyButton) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QuickReplyButton.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QuickReplyButton) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuickReplyButton.Merge(m, src)
}
func (m *QuickReplyButton) XXX_Size() int {
	return m.Size()
}
func (m *QuickReplyButton) XXX_DiscardUnknown() {
	xxx_messageInfo_QuickReplyButton.DiscardUnknown(m)
}

var xxx_messageInfo_QuickReplyButton proto.InternalMessageInfo

func (m *QuickReplyButton) GetDisplayText() *HighlyStructuredMessage {
	if m != nil {
		return m.DisplayText
	}
	return nil
}

func (m *QuickReplyButton) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

type URLButton struct {
	DisplayText          *HighlyStructuredMessage `protobuf:"bytes,1,opt,name=displayText" json:"displayText,omitempty"`
	Url                  *HighlyStructuredMessage `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *URLButton) Reset()         { *m = URLButton{} }
func (m *URLButton) String() string { return proto.CompactTextString(m) }
func (*URLButton) ProtoMessage()    {}
func (*URLButton) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{5}
}
func (m *URLButton) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *URLButton) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_URLButton.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *URLButton) XXX_Merge(src proto.Message) {
	xxx_messageInfo_URLButton.Merge(m, src)
}
func (m *URLButton) XXX_Size() int {
	return m.Size()
}
func (m *URLButton) XXX_DiscardUnknown() {
	xxx_messageInfo_URLButton.DiscardUnknown(m)
}

var xxx_messageInfo_URLButton proto.InternalMessageInfo

func (m *URLButton) GetDisplayText() *HighlyStructuredMessage {
	if m != nil {
		return m.DisplayText
	}
	return nil
}

func (m *URLButton) GetUrl() *HighlyStructuredMessage {
	if m != nil {
		return m.Url
	}
	return nil
}

type CallButton struct {
	DisplayText          *HighlyStructuredMessage `protobuf:"bytes,1,opt,name=displayText" json:"displayText,omitempty"`
	PhoneNumber          *HighlyStructuredMessage `protobuf:"bytes,2,opt,name=phoneNumber" json:"phoneNumber,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *CallButton) Reset()         { *m = CallButton{} }
func (m *CallButton) String() string { return proto.CompactTextString(m) }
func (*CallButton) ProtoMessage()    {}
func (*CallButton) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{6}
}
func (m *CallButton) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CallButton) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CallButton.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CallButton) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallButton.Merge(m, src)
}
func (m *CallButton) XXX_Size() int {
	return m.Size()
}
func (m *CallButton) XXX_DiscardUnknown() {
	xxx_messageInfo_CallButton.DiscardUnknown(m)
}

var xxx_messageInfo_CallButton proto.InternalMessageInfo

func (m *CallButton) GetDisplayText() *HighlyStructuredMessage {
	if m != nil {
		return m.DisplayText
	}
	return nil
}

func (m *CallButton) GetPhoneNumber() *HighlyStructuredMessage {
	if m != nil {
		return m.PhoneNumber
	}
	return nil
}

type TemplateButton struct {
	Index *uint32 `protobuf:"varint,4,opt,name=index" json:"index,omitempty"`
	// Types that are valid to be assigned to Button:
	//	*TemplateButton_QuickReplyButton
	//	*TemplateButton_UrlButton
	//	*TemplateButton_CallButton
	Button               isTemplateButton_Button `protobuf_oneof:"button"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *TemplateButton) Reset()         { *m = TemplateButton{} }
func (m *TemplateButton) String() string { return proto.CompactTextString(m) }
func (*TemplateButton) ProtoMessage()    {}
func (*TemplateButton) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{7}
}
func (m *TemplateButton) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TemplateButton) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TemplateButton.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TemplateButton) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TemplateButton.Merge(m, src)
}
func (m *TemplateButton) XXX_Size() int {
	return m.Size()
}
func (m *TemplateButton) XXX_DiscardUnknown() {
	xxx_messageInfo_TemplateButton.DiscardUnknown(m)
}

var xxx_messageInfo_TemplateButton proto.InternalMessageInfo

type isTemplateButton_Button interface {
	isTemplateButton_Button()
	MarshalTo([]byte) (int, error)
	Size() int
}

type TemplateButton_QuickReplyButton struct {
	QuickReplyButton *QuickReplyButton `protobuf:"bytes,1,opt,name=quickReplyButton,oneof" json:"quickReplyButton,omitempty"`
}
type TemplateButton_UrlButton struct {
	UrlButton *URLButton `protobuf:"bytes,2,opt,name=urlButton,oneof" json:"urlButton,omitempty"`
}
type TemplateButton_CallButton struct {
	CallButton *CallButton `protobuf:"bytes,3,opt,name=callButton,oneof" json:"callButton,omitempty"`
}

func (*TemplateButton_QuickReplyButton) isTemplateButton_Button() {}
func (*TemplateButton_UrlButton) isTemplateButton_Button()        {}
func (*TemplateButton_CallButton) isTemplateButton_Button()       {}

func (m *TemplateButton) GetButton() isTemplateButton_Button {
	if m != nil {
		return m.Button
	}
	return nil
}

func (m *TemplateButton) GetIndex() uint32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *TemplateButton) GetQuickReplyButton() *QuickReplyButton {
	if x, ok := m.GetButton().(*TemplateButton_QuickReplyButton); ok {
		return x.QuickReplyButton
	}
	return nil
}

func (m *TemplateButton) GetUrlButton() *URLButton {
	if x, ok := m.GetButton().(*TemplateButton_UrlButton); ok {
		return x.UrlButton
	}
	return nil
}

func (m *TemplateButton) GetCallButton() *CallButton {
	if x, ok := m.GetButton().(*TemplateButton_CallButton); ok {
		return x.CallButton
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*TemplateButton) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*TemplateButton_QuickReplyButton)(nil),
		(*TemplateButton_UrlButton)(nil),
		(*TemplateButton_CallButton)(nil),
	}
}

type Location struct {
	DegreesLatitude      *float64 `protobuf:"fixed64,1,opt,name=degreesLatitude" json:"degreesLatitude,omitempty"`
	DegreesLongitude     *float64 `protobuf:"fixed64,2,opt,name=degreesLongitude" json:"degreesLongitude,omitempty"`
	Name                 *string  `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Location) Reset()         { *m = Location{} }
func (m *Location) String() string { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()    {}
func (*Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{8}
}
func (m *Location) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Location.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Location.Merge(m, src)
}
func (m *Location) XXX_Size() int {
	return m.Size()
}
func (m *Location) XXX_DiscardUnknown() {
	xxx_messageInfo_Location.DiscardUnknown(m)
}

var xxx_messageInfo_Location proto.InternalMessageInfo

func (m *Location) GetDegreesLatitude() float64 {
	if m != nil && m.DegreesLatitude != nil {
		return *m.DegreesLatitude
	}
	return 0
}

func (m *Location) GetDegreesLongitude() float64 {
	if m != nil && m.DegreesLongitude != nil {
		return *m.DegreesLongitude
	}
	return 0
}

func (m *Location) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type Point struct {
	XDeprecated          *int32   `protobuf:"varint,1,opt,name=xDeprecated" json:"xDeprecated,omitempty"`
	YDeprecated          *int32   `protobuf:"varint,2,opt,name=yDeprecated" json:"yDeprecated,omitempty"`
	X                    *float64 `protobuf:"fixed64,3,opt,name=x" json:"x,omitempty"`
	Y                    *float64 `protobuf:"fixed64,4,opt,name=y" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Point) Reset()         { *m = Point{} }
func (m *Point) String() string { return proto.CompactTextString(m) }
func (*Point) ProtoMessage()    {}
func (*Point) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{9}
}
func (m *Point) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Point) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Point.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Point) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Point.Merge(m, src)
}
func (m *Point) XXX_Size() int {
	return m.Size()
}
func (m *Point) XXX_DiscardUnknown() {
	xxx_messageInfo_Point.DiscardUnknown(m)
}

var xxx_messageInfo_Point proto.InternalMessageInfo

func (m *Point) GetXDeprecated() int32 {
	if m != nil && m.XDeprecated != nil {
		return *m.XDeprecated
	}
	return 0
}

func (m *Point) GetYDeprecated() int32 {
	if m != nil && m.YDeprecated != nil {
		return *m.YDeprecated
	}
	return 0
}

func (m *Point) GetX() float64 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *Point) GetY() float64 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

type InteractiveAnnotation struct {
	PolygonVertices []*Point `protobuf:"bytes,1,rep,name=polygonVertices" json:"polygonVertices,omitempty"`
	// Types that are valid to be assigned to Action:
	//	*InteractiveAnnotation_Location
	Action               isInteractiveAnnotation_Action `protobuf_oneof:"action"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *InteractiveAnnotation) Reset()         { *m = InteractiveAnnotation{} }
func (m *InteractiveAnnotation) String() string { return proto.CompactTextString(m) }
func (*InteractiveAnnotation) ProtoMessage()    {}
func (*InteractiveAnnotation) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{10}
}
func (m *InteractiveAnnotation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *InteractiveAnnotation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_InteractiveAnnotation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *InteractiveAnnotation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InteractiveAnnotation.Merge(m, src)
}
func (m *InteractiveAnnotation) XXX_Size() int {
	return m.Size()
}
func (m *InteractiveAnnotation) XXX_DiscardUnknown() {
	xxx_messageInfo_InteractiveAnnotation.DiscardUnknown(m)
}

var xxx_messageInfo_InteractiveAnnotation proto.InternalMessageInfo

type isInteractiveAnnotation_Action interface {
	isInteractiveAnnotation_Action()
	MarshalTo([]byte) (int, error)
	Size() int
}

type InteractiveAnnotation_Location struct {
	Location *Location `protobuf:"bytes,2,opt,name=location,oneof" json:"location,omitempty"`
}

func (*InteractiveAnnotation_Location) isInteractiveAnnotation_Action() {}

func (m *InteractiveAnnotation) GetAction() isInteractiveAnnotation_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *InteractiveAnnotation) GetPolygonVertices() []*Point {
	if m != nil {
		return m.PolygonVertices
	}
	return nil
}

func (m *InteractiveAnnotation) GetLocation() *Location {
	if x, ok := m.GetAction().(*InteractiveAnnotation_Location); ok {
		return x.Location
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*InteractiveAnnotation) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*InteractiveAnnotation_Location)(nil),
	}
}

type AdReplyInfo struct {
	AdvertiserName       *string                              `protobuf:"bytes,1,opt,name=advertiserName" json:"advertiserName,omitempty"`
	MediaType            *AdReplyInfo_AD_REPLY_INFO_MEDIATYPE `protobuf:"varint,2,opt,name=mediaType,enum=proto.AdReplyInfo_AD_REPLY_INFO_MEDIATYPE" json:"mediaType,omitempty"`
	JpegThumbnail        []byte                               `protobuf:"bytes,16,opt,name=jpegThumbnail" json:"jpegThumbnail,omitempty"`
	Caption              *string                              `protobuf:"bytes,17,opt,name=caption" json:"caption,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *AdReplyInfo) Reset()         { *m = AdReplyInfo{} }
func (m *AdReplyInfo) String() string { return proto.CompactTextString(m) }
func (*AdReplyInfo) ProtoMessage()    {}
func (*AdReplyInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{11}
}
func (m *AdReplyInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AdReplyInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AdReplyInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AdReplyInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdReplyInfo.Merge(m, src)
}
func (m *AdReplyInfo) XXX_Size() int {
	return m.Size()
}
func (m *AdReplyInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AdReplyInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AdReplyInfo proto.InternalMessageInfo

func (m *AdReplyInfo) GetAdvertiserName() string {
	if m != nil && m.AdvertiserName != nil {
		return *m.AdvertiserName
	}
	return ""
}

func (m *AdReplyInfo) GetMediaType() AdReplyInfo_AD_REPLY_INFO_MEDIATYPE {
	if m != nil && m.MediaType != nil {
		return *m.MediaType
	}
	return AdReplyInfo_NONE
}

func (m *AdReplyInfo) GetJpegThumbnail() []byte {
	if m != nil {
		return m.JpegThumbnail
	}
	return nil
}

func (m *AdReplyInfo) GetCaption() string {
	if m != nil && m.Caption != nil {
		return *m.Caption
	}
	return ""
}

type ContextInfo struct {
	StanzaId                  *string      `protobuf:"bytes,1,opt,name=stanzaId" json:"stanzaId,omitempty"`
	Participant               *string      `protobuf:"bytes,2,opt,name=participant" json:"participant,omitempty"`
	QuotedMessage             *Message     `protobuf:"bytes,3,opt,name=quotedMessage" json:"quotedMessage,omitempty"`
	RemoteJid                 *string      `protobuf:"bytes,4,opt,name=remoteJid" json:"remoteJid,omitempty"`
	MentionedJid              []string     `protobuf:"bytes,15,rep,name=mentionedJid" json:"mentionedJid,omitempty"`
	ConversionSource          *string      `protobuf:"bytes,18,opt,name=conversionSource" json:"conversionSource,omitempty"`
	ConversionData            []byte       `protobuf:"bytes,19,opt,name=conversionData" json:"conversionData,omitempty"`
	ConversionDelaySeconds    *uint32      `protobuf:"varint,20,opt,name=conversionDelaySeconds" json:"conversionDelaySeconds,omitempty"`
	ForwardingScore           *uint32      `protobuf:"varint,21,opt,name=forwardingScore" json:"forwardingScore,omitempty"`
	IsForwarded               *bool        `protobuf:"varint,22,opt,name=isForwarded" json:"isForwarded,omitempty"`
	QuotedAd                  *AdReplyInfo `protobuf:"bytes,23,opt,name=quotedAd" json:"quotedAd,omitempty"`
	PlaceholderKey            *MessageKey  `protobuf:"bytes,24,opt,name=placeholderKey" json:"placeholderKey,omitempty"`
	Expiration                *uint32      `protobuf:"varint,25,opt,name=expiration" json:"expiration,omitempty"`
	EphemeralSettingTimestamp *int64       `protobuf:"varint,26,opt,name=ephemeralSettingTimestamp" json:"ephemeralSettingTimestamp,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}     `json:"-"`
	XXX_unrecognized          []byte       `json:"-"`
	XXX_sizecache             int32        `json:"-"`
}

func (m *ContextInfo) Reset()         { *m = ContextInfo{} }
func (m *ContextInfo) String() string { return proto.CompactTextString(m) }
func (*ContextInfo) ProtoMessage()    {}
func (*ContextInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{12}
}
func (m *ContextInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContextInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ContextInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ContextInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContextInfo.Merge(m, src)
}
func (m *ContextInfo) XXX_Size() int {
	return m.Size()
}
func (m *ContextInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ContextInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ContextInfo proto.InternalMessageInfo

func (m *ContextInfo) GetStanzaId() string {
	if m != nil && m.StanzaId != nil {
		return *m.StanzaId
	}
	return ""
}

func (m *ContextInfo) GetParticipant() string {
	if m != nil && m.Participant != nil {
		return *m.Participant
	}
	return ""
}

func (m *ContextInfo) GetQuotedMessage() *Message {
	if m != nil {
		return m.QuotedMessage
	}
	return nil
}

func (m *ContextInfo) GetRemoteJid() string {
	if m != nil && m.RemoteJid != nil {
		return *m.RemoteJid
	}
	return ""
}

func (m *ContextInfo) GetMentionedJid() []string {
	if m != nil {
		return m.MentionedJid
	}
	return nil
}

func (m *ContextInfo) GetConversionSource() string {
	if m != nil && m.ConversionSource != nil {
		return *m.ConversionSource
	}
	return ""
}

func (m *ContextInfo) GetConversionData() []byte {
	if m != nil {
		return m.ConversionData
	}
	return nil
}

func (m *ContextInfo) GetConversionDelaySeconds() uint32 {
	if m != nil && m.ConversionDelaySeconds != nil {
		return *m.ConversionDelaySeconds
	}
	return 0
}

func (m *ContextInfo) GetForwardingScore() uint32 {
	if m != nil && m.ForwardingScore != nil {
		return *m.ForwardingScore
	}
	return 0
}

func (m *ContextInfo) GetIsForwarded() bool {
	if m != nil && m.IsForwarded != nil {
		return *m.IsForwarded
	}
	return false
}

func (m *ContextInfo) GetQuotedAd() *AdReplyInfo {
	if m != nil {
		return m.QuotedAd
	}
	return nil
}

func (m *ContextInfo) GetPlaceholderKey() *MessageKey {
	if m != nil {
		return m.PlaceholderKey
	}
	return nil
}

func (m *ContextInfo) GetExpiration() uint32 {
	if m != nil && m.Expiration != nil {
		return *m.Expiration
	}
	return 0
}

func (m *ContextInfo) GetEphemeralSettingTimestamp() int64 {
	if m != nil && m.EphemeralSettingTimestamp != nil {
		return *m.EphemeralSettingTimestamp
	}
	return 0
}

type SenderKeyDistributionMessage struct {
	GroupId                             *string  `protobuf:"bytes,1,opt,name=groupId" json:"groupId,omitempty"`
	AxolotlSenderKeyDistributionMessage []byte   `protobuf:"bytes,2,opt,name=axolotlSenderKeyDistributionMessage" json:"axolotlSenderKeyDistributionMessage,omitempty"`
	XXX_NoUnkeyedLiteral                struct{} `json:"-"`
	XXX_unrecognized                    []byte   `json:"-"`
	XXX_sizecache                       int32    `json:"-"`
}

func (m *SenderKeyDistributionMessage) Reset()         { *m = SenderKeyDistributionMessage{} }
func (m *SenderKeyDistributionMessage) String() string { return proto.CompactTextString(m) }
func (*SenderKeyDistributionMessage) ProtoMessage()    {}
func (*SenderKeyDistributionMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{13}
}
func (m *SenderKeyDistributionMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SenderKeyDistributionMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SenderKeyDistributionMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SenderKeyDistributionMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SenderKeyDistributionMessage.Merge(m, src)
}
func (m *SenderKeyDistributionMessage) XXX_Size() int {
	return m.Size()
}
func (m *SenderKeyDistributionMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_SenderKeyDistributionMessage.DiscardUnknown(m)
}

var xxx_messageInfo_SenderKeyDistributionMessage proto.InternalMessageInfo

func (m *SenderKeyDistributionMessage) GetGroupId() string {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return ""
}

func (m *SenderKeyDistributionMessage) GetAxolotlSenderKeyDistributionMessage() []byte {
	if m != nil {
		return m.AxolotlSenderKeyDistributionMessage
	}
	return nil
}

type ImageMessage struct {
	Url                     *string                  `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	Mimetype                *string                  `protobuf:"bytes,2,opt,name=mimetype" json:"mimetype,omitempty"`
	Caption                 *string                  `protobuf:"bytes,3,opt,name=caption" json:"caption,omitempty"`
	FileSha256              []byte                   `protobuf:"bytes,4,opt,name=fileSha256" json:"fileSha256,omitempty"`
	FileLength              *uint64                  `protobuf:"varint,5,opt,name=fileLength" json:"fileLength,omitempty"`
	Height                  *uint32                  `protobuf:"varint,6,opt,name=height" json:"height,omitempty"`
	Width                   *uint32                  `protobuf:"varint,7,opt,name=width" json:"width,omitempty"`
	MediaKey                []byte                   `protobuf:"bytes,8,opt,name=mediaKey" json:"mediaKey,omitempty"`
	FileEncSha256           []byte                   `protobuf:"bytes,9,opt,name=fileEncSha256" json:"fileEncSha256,omitempty"`
	InteractiveAnnotations  []*InteractiveAnnotation `protobuf:"bytes,10,rep,name=interactiveAnnotations" json:"interactiveAnnotations,omitempty"`
	DirectPath              *string                  `protobuf:"bytes,11,opt,name=directPath" json:"directPath,omitempty"`
	MediaKeyTimestamp       *int64                   `protobuf:"varint,12,opt,name=mediaKeyTimestamp" json:"mediaKeyTimestamp,omitempty"`
	JpegThumbnail           []byte                   `protobuf:"bytes,16,opt,name=jpegThumbnail" json:"jpegThumbnail,omitempty"`
	ContextInfo             *ContextInfo             `protobuf:"bytes,17,opt,name=contextInfo" json:"contextInfo,omitempty"`
	FirstScanSidecar        []byte                   `protobuf:"bytes,18,opt,name=firstScanSidecar" json:"firstScanSidecar,omitempty"`
	FirstScanLength         *uint32                  `protobuf:"varint,19,opt,name=firstScanLength" json:"firstScanLength,omitempty"`
	ExperimentGroupId       *uint32                  `protobuf:"varint,20,opt,name=experimentGroupId" json:"experimentGroupId,omitempty"`
	ScansSidecar            []byte                   `protobuf:"bytes,21,opt,name=scansSidecar" json:"scansSidecar,omitempty"`
	ScanLengths             []uint32                 `protobuf:"varint,22,rep,name=scanLengths" json:"scanLengths,omitempty"`
	MidQualityFileSha256    []byte                   `protobuf:"bytes,23,opt,name=midQualityFileSha256" json:"midQualityFileSha256,omitempty"`
	MidQualityFileEncSha256 []byte                   `protobuf:"bytes,24,opt,name=midQualityFileEncSha256" json:"midQualityFileEncSha256,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                 `json:"-"`
	XXX_unrecognized        []byte                   `json:"-"`
	XXX_sizecache           int32                    `json:"-"`
}

func (m *ImageMessage) Reset()         { *m = ImageMessage{} }
func (m *ImageMessage) String() string { return proto.CompactTextString(m) }
func (*ImageMessage) ProtoMessage()    {}
func (*ImageMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{14}
}
func (m *ImageMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ImageMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ImageMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ImageMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageMessage.Merge(m, src)
}
func (m *ImageMessage) XXX_Size() int {
	return m.Size()
}
func (m *ImageMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ImageMessage proto.InternalMessageInfo

func (m *ImageMessage) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *ImageMessage) GetMimetype() string {
	if m != nil && m.Mimetype != nil {
		return *m.Mimetype
	}
	return ""
}

func (m *ImageMessage) GetCaption() string {
	if m != nil && m.Caption != nil {
		return *m.Caption
	}
	return ""
}

func (m *ImageMessage) GetFileSha256() []byte {
	if m != nil {
		return m.FileSha256
	}
	return nil
}

func (m *ImageMessage) GetFileLength() uint64 {
	if m != nil && m.FileLength != nil {
		return *m.FileLength
	}
	return 0
}

func (m *ImageMessage) GetHeight() uint32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

func (m *ImageMessage) GetWidth() uint32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

func (m *ImageMessage) GetMediaKey() []byte {
	if m != nil {
		return m.MediaKey
	}
	return nil
}

func (m *ImageMessage) GetFileEncSha256() []byte {
	if m != nil {
		return m.FileEncSha256
	}
	return nil
}

func (m *ImageMessage) GetInteractiveAnnotations() []*InteractiveAnnotation {
	if m != nil {
		return m.InteractiveAnnotations
	}
	return nil
}

func (m *ImageMessage) GetDirectPath() string {
	if m != nil && m.DirectPath != nil {
		return *m.DirectPath
	}
	return ""
}

func (m *ImageMessage) GetMediaKeyTimestamp() int64 {
	if m != nil && m.MediaKeyTimestamp != nil {
		return *m.MediaKeyTimestamp
	}
	return 0
}

func (m *ImageMessage) GetJpegThumbnail() []byte {
	if m != nil {
		return m.JpegThumbnail
	}
	return nil
}

func (m *ImageMessage) GetContextInfo() *ContextInfo {
	if m != nil {
		return m.ContextInfo
	}
	return nil
}

func (m *ImageMessage) GetFirstScanSidecar() []byte {
	if m != nil {
		return m.FirstScanSidecar
	}
	return nil
}

func (m *ImageMessage) GetFirstScanLength() uint32 {
	if m != nil && m.FirstScanLength != nil {
		return *m.FirstScanLength
	}
	return 0
}

func (m *ImageMessage) GetExperimentGroupId() uint32 {
	if m != nil && m.ExperimentGroupId != nil {
		return *m.ExperimentGroupId
	}
	return 0
}

func (m *ImageMessage) GetScansSidecar() []byte {
	if m != nil {
		return m.ScansSidecar
	}
	return nil
}

func (m *ImageMessage) GetScanLengths() []uint32 {
	if m != nil {
		return m.ScanLengths
	}
	return nil
}

func (m *ImageMessage) GetMidQualityFileSha256() []byte {
	if m != nil {
		return m.MidQualityFileSha256
	}
	return nil
}

func (m *ImageMessage) GetMidQualityFileEncSha256() []byte {
	if m != nil {
		return m.MidQualityFileEncSha256
	}
	return nil
}

type ContactMessage struct {
	DisplayName          *string      `protobuf:"bytes,1,opt,name=displayName" json:"displayName,omitempty"`
	Vcard                *string      `protobuf:"bytes,16,opt,name=vcard" json:"vcard,omitempty"`
	ContextInfo          *ContextInfo `protobuf:"bytes,17,opt,name=contextInfo" json:"contextInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ContactMessage) Reset()         { *m = ContactMessage{} }
func (m *ContactMessage) String() string { return proto.CompactTextString(m) }
func (*ContactMessage) ProtoMessage()    {}
func (*ContactMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{15}
}
func (m *ContactMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContactMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ContactMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ContactMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactMessage.Merge(m, src)
}
func (m *ContactMessage) XXX_Size() int {
	return m.Size()
}
func (m *ContactMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ContactMessage proto.InternalMessageInfo

func (m *ContactMessage) GetDisplayName() string {
	if m != nil && m.DisplayName != nil {
		return *m.DisplayName
	}
	return ""
}

func (m *ContactMessage) GetVcard() string {
	if m != nil && m.Vcard != nil {
		return *m.Vcard
	}
	return ""
}

func (m *ContactMessage) GetContextInfo() *ContextInfo {
	if m != nil {
		return m.ContextInfo
	}
	return nil
}

type LocationMessage struct {
	DegreesLatitude                   *float64     `protobuf:"fixed64,1,opt,name=degreesLatitude" json:"degreesLatitude,omitempty"`
	DegreesLongitude                  *float64     `protobuf:"fixed64,2,opt,name=degreesLongitude" json:"degreesLongitude,omitempty"`
	Name                              *string      `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Address                           *string      `protobuf:"bytes,4,opt,name=address" json:"address,omitempty"`
	Url                               *string      `protobuf:"bytes,5,opt,name=url" json:"url,omitempty"`
	IsLive                            *bool        `protobuf:"varint,6,opt,name=isLive" json:"isLive,omitempty"`
	AccuracyInMeters                  *uint32      `protobuf:"varint,7,opt,name=accuracyInMeters" json:"accuracyInMeters,omitempty"`
	SpeedInMps                        *float32     `protobuf:"fixed32,8,opt,name=speedInMps" json:"speedInMps,omitempty"`
	DegreesClockwiseFromMagneticNorth *uint32      `protobuf:"varint,9,opt,name=degreesClockwiseFromMagneticNorth" json:"degreesClockwiseFromMagneticNorth,omitempty"`
	Comment                           *string      `protobuf:"bytes,11,opt,name=comment" json:"comment,omitempty"`
	JpegThumbnail                     []byte       `protobuf:"bytes,16,opt,name=jpegThumbnail" json:"jpegThumbnail,omitempty"`
	ContextInfo                       *ContextInfo `protobuf:"bytes,17,opt,name=contextInfo" json:"contextInfo,omitempty"`
	XXX_NoUnkeyedLiteral              struct{}     `json:"-"`
	XXX_unrecognized                  []byte       `json:"-"`
	XXX_sizecache                     int32        `json:"-"`
}

func (m *LocationMessage) Reset()         { *m = LocationMessage{} }
func (m *LocationMessage) String() string { return proto.CompactTextString(m) }
func (*LocationMessage) ProtoMessage()    {}
func (*LocationMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{16}
}
func (m *LocationMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LocationMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LocationMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LocationMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocationMessage.Merge(m, src)
}
func (m *LocationMessage) XXX_Size() int {
	return m.Size()
}
func (m *LocationMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_LocationMessage.DiscardUnknown(m)
}

var xxx_messageInfo_LocationMessage proto.InternalMessageInfo

func (m *LocationMessage) GetDegreesLatitude() float64 {
	if m != nil && m.DegreesLatitude != nil {
		return *m.DegreesLatitude
	}
	return 0
}

func (m *LocationMessage) GetDegreesLongitude() float64 {
	if m != nil && m.DegreesLongitude != nil {
		return *m.DegreesLongitude
	}
	return 0
}

func (m *LocationMessage) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *LocationMessage) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *LocationMessage) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *LocationMessage) GetIsLive() bool {
	if m != nil && m.IsLive != nil {
		return *m.IsLive
	}
	return false
}

func (m *LocationMessage) GetAccuracyInMeters() uint32 {
	if m != nil && m.AccuracyInMeters != nil {
		return *m.AccuracyInMeters
	}
	return 0
}

func (m *LocationMessage) GetSpeedInMps() float32 {
	if m != nil && m.SpeedInMps != nil {
		return *m.SpeedInMps
	}
	return 0
}

func (m *LocationMessage) GetDegreesClockwiseFromMagneticNorth() uint32 {
	if m != nil && m.DegreesClockwiseFromMagneticNorth != nil {
		return *m.DegreesClockwiseFromMagneticNorth
	}
	return 0
}

func (m *LocationMessage) GetComment() string {
	if m != nil && m.Comment != nil {
		return *m.Comment
	}
	return ""
}

func (m *LocationMessage) GetJpegThumbnail() []byte {
	if m != nil {
		return m.JpegThumbnail
	}
	return nil
}

func (m *LocationMessage) GetContextInfo() *ContextInfo {
	if m != nil {
		return m.ContextInfo
	}
	return nil
}

type ExtendedTextMessage struct {
	Text                 *string                                                `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	MatchedText          *string                                                `protobuf:"bytes,2,opt,name=matchedText" json:"matchedText,omitempty"`
	CanonicalUrl         *string                                                `protobuf:"bytes,4,opt,name=canonicalUrl" json:"canonicalUrl,omitempty"`
	Description          *string                                                `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	Title                *string                                                `protobuf:"bytes,6,opt,name=title" json:"title,omitempty"`
	TextArgb             *uint32                                                `protobuf:"fixed32,7,opt,name=textArgb" json:"textArgb,omitempty"`
	BackgroundArgb       *uint32                                                `protobuf:"fixed32,8,opt,name=backgroundArgb" json:"backgroundArgb,omitempty"`
	Font                 *ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_FONTTYPE    `protobuf:"varint,9,opt,name=font,enum=proto.ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_FONTTYPE" json:"font,omitempty"`
	PreviewType          *ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_PREVIEWTYPE `protobuf:"varint,10,opt,name=previewType,enum=proto.ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_PREVIEWTYPE" json:"previewType,omitempty"`
	JpegThumbnail        []byte                                                 `protobuf:"bytes,16,opt,name=jpegThumbnail" json:"jpegThumbnail,omitempty"`
	ContextInfo          *ContextInfo                                           `protobuf:"bytes,17,opt,name=contextInfo" json:"contextInfo,omitempty"`
	DoNotPlayInline      *bool                                                  `protobuf:"varint,18,opt,name=doNotPlayInline" json:"doNotPlayInline,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                               `json:"-"`
	XXX_unrecognized     []byte                                                 `json:"-"`
	XXX_sizecache        int32                                                  `json:"-"`
}

func (m *ExtendedTextMessage) Reset()         { *m = ExtendedTextMessage{} }
func (m *ExtendedTextMessage) String() string { return proto.CompactTextString(m) }
func (*ExtendedTextMessage) ProtoMessage()    {}
func (*ExtendedTextMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{17}
}
func (m *ExtendedTextMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ExtendedTextMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ExtendedTextMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ExtendedTextMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExtendedTextMessage.Merge(m, src)
}
func (m *ExtendedTextMessage) XXX_Size() int {
	return m.Size()
}
func (m *ExtendedTextMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ExtendedTextMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ExtendedTextMessage proto.InternalMessageInfo

func (m *ExtendedTextMessage) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *ExtendedTextMessage) GetMatchedText() string {
	if m != nil && m.MatchedText != nil {
		return *m.MatchedText
	}
	return ""
}

func (m *ExtendedTextMessage) GetCanonicalUrl() string {
	if m != nil && m.CanonicalUrl != nil {
		return *m.CanonicalUrl
	}
	return ""
}

func (m *ExtendedTextMessage) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *ExtendedTextMessage) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *ExtendedTextMessage) GetTextArgb() uint32 {
	if m != nil && m.TextArgb != nil {
		return *m.TextArgb
	}
	return 0
}

func (m *ExtendedTextMessage) GetBackgroundArgb() uint32 {
	if m != nil && m.BackgroundArgb != nil {
		return *m.BackgroundArgb
	}
	return 0
}

func (m *ExtendedTextMessage) GetFont() ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_FONTTYPE {
	if m != nil && m.Font != nil {
		return *m.Font
	}
	return ExtendedTextMessage_SANS_SERIF
}

func (m *ExtendedTextMessage) GetPreviewType() ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_PREVIEWTYPE {
	if m != nil && m.PreviewType != nil {
		return *m.PreviewType
	}
	return ExtendedTextMessage_NONE
}

func (m *ExtendedTextMessage) GetJpegThumbnail() []byte {
	if m != nil {
		return m.JpegThumbnail
	}
	return nil
}

func (m *ExtendedTextMessage) GetContextInfo() *ContextInfo {
	if m != nil {
		return m.ContextInfo
	}
	return nil
}

func (m *ExtendedTextMessage) GetDoNotPlayInline() bool {
	if m != nil && m.DoNotPlayInline != nil {
		return *m.DoNotPlayInline
	}
	return false
}

type DocumentMessage struct {
	Url                  *string      `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	Mimetype             *string      `protobuf:"bytes,2,opt,name=mimetype" json:"mimetype,omitempty"`
	Title                *string      `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	FileSha256           []byte       `protobuf:"bytes,4,opt,name=fileSha256" json:"fileSha256,omitempty"`
	FileLength           *uint64      `protobuf:"varint,5,opt,name=fileLength" json:"fileLength,omitempty"`
	PageCount            *uint32      `protobuf:"varint,6,opt,name=pageCount" json:"pageCount,omitempty"`
	MediaKey             []byte       `protobuf:"bytes,7,opt,name=mediaKey" json:"mediaKey,omitempty"`
	FileName             *string      `protobuf:"bytes,8,opt,name=fileName" json:"fileName,omitempty"`
	FileEncSha256        []byte       `protobuf:"bytes,9,opt,name=fileEncSha256" json:"fileEncSha256,omitempty"`
	DirectPath           *string      `protobuf:"bytes,10,opt,name=directPath" json:"directPath,omitempty"`
	MediaKeyTimestamp    *int64       `protobuf:"varint,11,opt,name=mediaKeyTimestamp" json:"mediaKeyTimestamp,omitempty"`
	JpegThumbnail        []byte       `protobuf:"bytes,16,opt,name=jpegThumbnail" json:"jpegThumbnail,omitempty"`
	ContextInfo          *ContextInfo `protobuf:"bytes,17,opt,name=contextInfo" json:"contextInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DocumentMessage) Reset()         { *m = DocumentMessage{} }
func (m *DocumentMessage) String() string { return proto.CompactTextString(m) }
func (*DocumentMessage) ProtoMessage()    {}
func (*DocumentMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{18}
}
func (m *DocumentMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DocumentMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DocumentMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DocumentMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DocumentMessage.Merge(m, src)
}
func (m *DocumentMessage) XXX_Size() int {
	return m.Size()
}
func (m *DocumentMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_DocumentMessage.DiscardUnknown(m)
}

var xxx_messageInfo_DocumentMessage proto.InternalMessageInfo

func (m *DocumentMessage) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *DocumentMessage) GetMimetype() string {
	if m != nil && m.Mimetype != nil {
		return *m.Mimetype
	}
	return ""
}

func (m *DocumentMessage) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *DocumentMessage) GetFileSha256() []byte {
	if m != nil {
		return m.FileSha256
	}
	return nil
}

func (m *DocumentMessage) GetFileLength() uint64 {
	if m != nil && m.FileLength != nil {
		return *m.FileLength
	}
	return 0
}

func (m *DocumentMessage) GetPageCount() uint32 {
	if m != nil && m.PageCount != nil {
		return *m.PageCount
	}
	return 0
}

func (m *DocumentMessage) GetMediaKey() []byte {
	if m != nil {
		return m.MediaKey
	}
	return nil
}

func (m *DocumentMessage) GetFileName() string {
	if m != nil && m.FileName != nil {
		return *m.FileName
	}
	return ""
}

func (m *DocumentMessage) GetFileEncSha256() []byte {
	if m != nil {
		return m.FileEncSha256
	}
	return nil
}

func (m *DocumentMessage) GetDirectPath() string {
	if m != nil && m.DirectPath != nil {
		return *m.DirectPath
	}
	return ""
}

func (m *DocumentMessage) GetMediaKeyTimestamp() int64 {
	if m != nil && m.MediaKeyTimestamp != nil {
		return *m.MediaKeyTimestamp
	}
	return 0
}

func (m *DocumentMessage) GetJpegThumbnail() []byte {
	if m != nil {
		return m.JpegThumbnail
	}
	return nil
}

func (m *DocumentMessage) GetContextInfo() *ContextInfo {
	if m != nil {
		return m.ContextInfo
	}
	return nil
}

type AudioMessage struct {
	Url                  *string      `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	Mimetype             *string      `protobuf:"bytes,2,opt,name=mimetype" json:"mimetype,omitempty"`
	FileSha256           []byte       `protobuf:"bytes,3,opt,name=fileSha256" json:"fileSha256,omitempty"`
	FileLength           *uint64      `protobuf:"varint,4,opt,name=fileLength" json:"fileLength,omitempty"`
	Seconds              *uint32      `protobuf:"varint,5,opt,name=seconds" json:"seconds,omitempty"`
	Ptt                  *bool        `protobuf:"varint,6,opt,name=ptt" json:"ptt,omitempty"`
	MediaKey             []byte       `protobuf:"bytes,7,opt,name=mediaKey" json:"mediaKey,omitempty"`
	FileEncSha256        []byte       `protobuf:"bytes,8,opt,name=fileEncSha256" json:"fileEncSha256,omitempty"`
	DirectPath           *string      `protobuf:"bytes,9,opt,name=directPath" json:"directPath,omitempty"`
	MediaKeyTimestamp    *int64       `protobuf:"varint,10,opt,name=mediaKeyTimestamp" json:"mediaKeyTimestamp,omitempty"`
	ContextInfo          *ContextInfo `protobuf:"bytes,17,opt,name=contextInfo" json:"contextInfo,omitempty"`
	StreamingSidecar     []byte       `protobuf:"bytes,18,opt,name=streamingSidecar" json:"streamingSidecar,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *AudioMessage) Reset()         { *m = AudioMessage{} }
func (m *AudioMessage) String() string { return proto.CompactTextString(m) }
func (*AudioMessage) ProtoMessage()    {}
func (*AudioMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{19}
}
func (m *AudioMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AudioMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AudioMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AudioMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AudioMessage.Merge(m, src)
}
func (m *AudioMessage) XXX_Size() int {
	return m.Size()
}
func (m *AudioMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_AudioMessage.DiscardUnknown(m)
}

var xxx_messageInfo_AudioMessage proto.InternalMessageInfo

func (m *AudioMessage) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *AudioMessage) GetMimetype() string {
	if m != nil && m.Mimetype != nil {
		return *m.Mimetype
	}
	return ""
}

func (m *AudioMessage) GetFileSha256() []byte {
	if m != nil {
		return m.FileSha256
	}
	return nil
}

func (m *AudioMessage) GetFileLength() uint64 {
	if m != nil && m.FileLength != nil {
		return *m.FileLength
	}
	return 0
}

func (m *AudioMessage) GetSeconds() uint32 {
	if m != nil && m.Seconds != nil {
		return *m.Seconds
	}
	return 0
}

func (m *AudioMessage) GetPtt() bool {
	if m != nil && m.Ptt != nil {
		return *m.Ptt
	}
	return false
}

func (m *AudioMessage) GetMediaKey() []byte {
	if m != nil {
		return m.MediaKey
	}
	return nil
}

func (m *AudioMessage) GetFileEncSha256() []byte {
	if m != nil {
		return m.FileEncSha256
	}
	return nil
}

func (m *AudioMessage) GetDirectPath() string {
	if m != nil && m.DirectPath != nil {
		return *m.DirectPath
	}
	return ""
}

func (m *AudioMessage) GetMediaKeyTimestamp() int64 {
	if m != nil && m.MediaKeyTimestamp != nil {
		return *m.MediaKeyTimestamp
	}
	return 0
}

func (m *AudioMessage) GetContextInfo() *ContextInfo {
	if m != nil {
		return m.ContextInfo
	}
	return nil
}

func (m *AudioMessage) GetStreamingSidecar() []byte {
	if m != nil {
		return m.StreamingSidecar
	}
	return nil
}

type VideoMessage struct {
	Url                    *string                                 `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	Mimetype               *string                                 `protobuf:"bytes,2,opt,name=mimetype" json:"mimetype,omitempty"`
	FileSha256             []byte                                  `protobuf:"bytes,3,opt,name=fileSha256" json:"fileSha256,omitempty"`
	FileLength             *uint64                                 `protobuf:"varint,4,opt,name=fileLength" json:"fileLength,omitempty"`
	Seconds                *uint32                                 `protobuf:"varint,5,opt,name=seconds" json:"seconds,omitempty"`
	MediaKey               []byte                                  `protobuf:"bytes,6,opt,name=mediaKey" json:"mediaKey,omitempty"`
	Caption                *string                                 `protobuf:"bytes,7,opt,name=caption" json:"caption,omitempty"`
	GifPlayback            *bool                                   `protobuf:"varint,8,opt,name=gifPlayback" json:"gifPlayback,omitempty"`
	Height                 *uint32                                 `protobuf:"varint,9,opt,name=height" json:"height,omitempty"`
	Width                  *uint32                                 `protobuf:"varint,10,opt,name=width" json:"width,omitempty"`
	FileEncSha256          []byte                                  `protobuf:"bytes,11,opt,name=fileEncSha256" json:"fileEncSha256,omitempty"`
	InteractiveAnnotations []*InteractiveAnnotation                `protobuf:"bytes,12,rep,name=interactiveAnnotations" json:"interactiveAnnotations,omitempty"`
	DirectPath             *string                                 `protobuf:"bytes,13,opt,name=directPath" json:"directPath,omitempty"`
	MediaKeyTimestamp      *int64                                  `protobuf:"varint,14,opt,name=mediaKeyTimestamp" json:"mediaKeyTimestamp,omitempty"`
	JpegThumbnail          []byte                                  `protobuf:"bytes,16,opt,name=jpegThumbnail" json:"jpegThumbnail,omitempty"`
	ContextInfo            *ContextInfo                            `protobuf:"bytes,17,opt,name=contextInfo" json:"contextInfo,omitempty"`
	StreamingSidecar       []byte                                  `protobuf:"bytes,18,opt,name=streamingSidecar" json:"streamingSidecar,omitempty"`
	GifAttribution         *VideoMessage_VIDEO_MESSAGE_ATTRIBUTION `protobuf:"varint,19,opt,name=gifAttribution,enum=proto.VideoMessage_VIDEO_MESSAGE_ATTRIBUTION" json:"gifAttribution,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                                `json:"-"`
	XXX_unrecognized       []byte                                  `json:"-"`
	XXX_sizecache          int32                                   `json:"-"`
}

func (m *VideoMessage) Reset()         { *m = VideoMessage{} }
func (m *VideoMessage) String() string { return proto.CompactTextString(m) }
func (*VideoMessage) ProtoMessage()    {}
func (*VideoMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{20}
}
func (m *VideoMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VideoMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_VideoMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *VideoMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoMessage.Merge(m, src)
}
func (m *VideoMessage) XXX_Size() int {
	return m.Size()
}
func (m *VideoMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoMessage.DiscardUnknown(m)
}

var xxx_messageInfo_VideoMessage proto.InternalMessageInfo

func (m *VideoMessage) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *VideoMessage) GetMimetype() string {
	if m != nil && m.Mimetype != nil {
		return *m.Mimetype
	}
	return ""
}

func (m *VideoMessage) GetFileSha256() []byte {
	if m != nil {
		return m.FileSha256
	}
	return nil
}

func (m *VideoMessage) GetFileLength() uint64 {
	if m != nil && m.FileLength != nil {
		return *m.FileLength
	}
	return 0
}

func (m *VideoMessage) GetSeconds() uint32 {
	if m != nil && m.Seconds != nil {
		return *m.Seconds
	}
	return 0
}

func (m *VideoMessage) GetMediaKey() []byte {
	if m != nil {
		return m.MediaKey
	}
	return nil
}

func (m *VideoMessage) GetCaption() string {
	if m != nil && m.Caption != nil {
		return *m.Caption
	}
	return ""
}

func (m *VideoMessage) GetGifPlayback() bool {
	if m != nil && m.GifPlayback != nil {
		return *m.GifPlayback
	}
	return false
}

func (m *VideoMessage) GetHeight() uint32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

func (m *VideoMessage) GetWidth() uint32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

func (m *VideoMessage) GetFileEncSha256() []byte {
	if m != nil {
		return m.FileEncSha256
	}
	return nil
}

func (m *VideoMessage) GetInteractiveAnnotations() []*InteractiveAnnotation {
	if m != nil {
		return m.InteractiveAnnotations
	}
	return nil
}

func (m *VideoMessage) GetDirectPath() string {
	if m != nil && m.DirectPath != nil {
		return *m.DirectPath
	}
	return ""
}

func (m *VideoMessage) GetMediaKeyTimestamp() int64 {
	if m != nil && m.MediaKeyTimestamp != nil {
		return *m.MediaKeyTimestamp
	}
	return 0
}

func (m *VideoMessage) GetJpegThumbnail() []byte {
	if m != nil {
		return m.JpegThumbnail
	}
	return nil
}

func (m *VideoMessage) GetContextInfo() *ContextInfo {
	if m != nil {
		return m.ContextInfo
	}
	return nil
}

func (m *VideoMessage) GetStreamingSidecar() []byte {
	if m != nil {
		return m.StreamingSidecar
	}
	return nil
}

func (m *VideoMessage) GetGifAttribution() VideoMessage_VIDEO_MESSAGE_ATTRIBUTION {
	if m != nil && m.GifAttribution != nil {
		return *m.GifAttribution
	}
	return VideoMessage_NONE
}

type Call struct {
	CallKey              []byte   `protobuf:"bytes,1,opt,name=callKey" json:"callKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Call) Reset()         { *m = Call{} }
func (m *Call) String() string { return proto.CompactTextString(m) }
func (*Call) ProtoMessage()    {}
func (*Call) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{21}
}
func (m *Call) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Call) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Call.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Call) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Call.Merge(m, src)
}
func (m *Call) XXX_Size() int {
	return m.Size()
}
func (m *Call) XXX_DiscardUnknown() {
	xxx_messageInfo_Call.DiscardUnknown(m)
}

var xxx_messageInfo_Call proto.InternalMessageInfo

func (m *Call) GetCallKey() []byte {
	if m != nil {
		return m.CallKey
	}
	return nil
}

type Chat struct {
	DisplayName          *string  `protobuf:"bytes,1,opt,name=displayName" json:"displayName,omitempty"`
	Id                   *string  `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Chat) Reset()         { *m = Chat{} }
func (m *Chat) String() string { return proto.CompactTextString(m) }
func (*Chat) ProtoMessage()    {}
func (*Chat) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{22}
}
func (m *Chat) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Chat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Chat.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Chat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chat.Merge(m, src)
}
func (m *Chat) XXX_Size() int {
	return m.Size()
}
func (m *Chat) XXX_DiscardUnknown() {
	xxx_messageInfo_Chat.DiscardUnknown(m)
}

var xxx_messageInfo_Chat proto.InternalMessageInfo

func (m *Chat) GetDisplayName() string {
	if m != nil && m.DisplayName != nil {
		return *m.DisplayName
	}
	return ""
}

func (m *Chat) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

type ProtocolMessage struct {
	Key                       *MessageKey                            `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Type                      *ProtocolMessage_PROTOCOL_MESSAGE_TYPE `protobuf:"varint,2,opt,name=type,enum=proto.ProtocolMessage_PROTOCOL_MESSAGE_TYPE" json:"type,omitempty"`
	EphemeralExpiration       *uint32                                `protobuf:"varint,4,opt,name=ephemeralExpiration" json:"ephemeralExpiration,omitempty"`
	EphemeralSettingTimestamp *int64                                 `protobuf:"varint,5,opt,name=ephemeralSettingTimestamp" json:"ephemeralSettingTimestamp,omitempty"`
	HistorySyncNotification   *HistorySyncNotification               `protobuf:"bytes,6,opt,name=historySyncNotification" json:"historySyncNotification,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                               `json:"-"`
	XXX_unrecognized          []byte                                 `json:"-"`
	XXX_sizecache             int32                                  `json:"-"`
}

func (m *ProtocolMessage) Reset()         { *m = ProtocolMessage{} }
func (m *ProtocolMessage) String() string { return proto.CompactTextString(m) }
func (*ProtocolMessage) ProtoMessage()    {}
func (*ProtocolMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{23}
}
func (m *ProtocolMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProtocolMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProtocolMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProtocolMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtocolMessage.Merge(m, src)
}
func (m *ProtocolMessage) XXX_Size() int {
	return m.Size()
}
func (m *ProtocolMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtocolMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ProtocolMessage proto.InternalMessageInfo

func (m *ProtocolMessage) GetKey() *MessageKey {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *ProtocolMessage) GetType() ProtocolMessage_PROTOCOL_MESSAGE_TYPE {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ProtocolMessage_REVOKE
}

func (m *ProtocolMessage) GetEphemeralExpiration() uint32 {
	if m != nil && m.EphemeralExpiration != nil {
		return *m.EphemeralExpiration
	}
	return 0
}

func (m *ProtocolMessage) GetEphemeralSettingTimestamp() int64 {
	if m != nil && m.EphemeralSettingTimestamp != nil {
		return *m.EphemeralSettingTimestamp
	}
	return 0
}

func (m *ProtocolMessage) GetHistorySyncNotification() *HistorySyncNotification {
	if m != nil {
		return m.HistorySyncNotification
	}
	return nil
}

type HistorySyncNotification struct {
	FileSha256           []byte                                                             `protobuf:"bytes,1,opt,name=fileSha256" json:"fileSha256,omitempty"`
	FileLength           *uint64                                                            `protobuf:"varint,2,opt,name=fileLength" json:"fileLength,omitempty"`
	MediaKey             []byte                                                             `protobuf:"bytes,3,opt,name=mediaKey" json:"mediaKey,omitempty"`
	FileEncSha256        []byte                                                             `protobuf:"bytes,4,opt,name=fileEncSha256" json:"fileEncSha256,omitempty"`
	DirectPath           *string                                                            `protobuf:"bytes,5,opt,name=directPath" json:"directPath,omitempty"`
	SyncType             *HistorySyncNotification_HISTORY_SYNC_NOTIFICATION_HISTORYSYNCTYPE `protobuf:"varint,6,opt,name=syncType,enum=proto.HistorySyncNotification_HISTORY_SYNC_NOTIFICATION_HISTORYSYNCTYPE" json:"syncType,omitempty"`
	ChunkOrder           *uint32                                                            `protobuf:"varint,7,opt,name=chunkOrder" json:"chunkOrder,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                           `json:"-"`
	XXX_unrecognized     []byte                                                             `json:"-"`
	XXX_sizecache        int32                                                              `json:"-"`
}

func (m *HistorySyncNotification) Reset()         { *m = HistorySyncNotification{} }
func (m *HistorySyncNotification) String() string { return proto.CompactTextString(m) }
func (*HistorySyncNotification) ProtoMessage()    {}
func (*HistorySyncNotification) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{24}
}
func (m *HistorySyncNotification) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *HistorySyncNotification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_HistorySyncNotification.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *HistorySyncNotification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HistorySyncNotification.Merge(m, src)
}
func (m *HistorySyncNotification) XXX_Size() int {
	return m.Size()
}
func (m *HistorySyncNotification) XXX_DiscardUnknown() {
	xxx_messageInfo_HistorySyncNotification.DiscardUnknown(m)
}

var xxx_messageInfo_HistorySyncNotification proto.InternalMessageInfo

func (m *HistorySyncNotification) GetFileSha256() []byte {
	if m != nil {
		return m.FileSha256
	}
	return nil
}

func (m *HistorySyncNotification) GetFileLength() uint64 {
	if m != nil && m.FileLength != nil {
		return *m.FileLength
	}
	return 0
}

func (m *HistorySyncNotification) GetMediaKey() []byte {
	if m != nil {
		return m.MediaKey
	}
	return nil
}

func (m *HistorySyncNotification) GetFileEncSha256() []byte {
	if m != nil {
		return m.FileEncSha256
	}
	return nil
}

func (m *HistorySyncNotification) GetDirectPath() string {
	if m != nil && m.DirectPath != nil {
		return *m.DirectPath
	}
	return ""
}

func (m *HistorySyncNotification) GetSyncType() HistorySyncNotification_HISTORY_SYNC_NOTIFICATION_HISTORYSYNCTYPE {
	if m != nil && m.SyncType != nil {
		return *m.SyncType
	}
	return HistorySyncNotification_INITIAL_BOOTSTRAP
}

func (m *HistorySyncNotification) GetChunkOrder() uint32 {
	if m != nil && m.ChunkOrder != nil {
		return *m.ChunkOrder
	}
	return 0
}

type ContactsArrayMessage struct {
	DisplayName          *string           `protobuf:"bytes,1,opt,name=displayName" json:"displayName,omitempty"`
	Contacts             []*ContactMessage `protobuf:"bytes,2,rep,name=contacts" json:"contacts,omitempty"`
	ContextInfo          *ContextInfo      `protobuf:"bytes,17,opt,name=contextInfo" json:"contextInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ContactsArrayMessage) Reset()         { *m = ContactsArrayMessage{} }
func (m *ContactsArrayMessage) String() string { return proto.CompactTextString(m) }
func (*ContactsArrayMessage) ProtoMessage()    {}
func (*ContactsArrayMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{25}
}
func (m *ContactsArrayMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ContactsArrayMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ContactsArrayMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ContactsArrayMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContactsArrayMessage.Merge(m, src)
}
func (m *ContactsArrayMessage) XXX_Size() int {
	return m.Size()
}
func (m *ContactsArrayMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ContactsArrayMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ContactsArrayMessage proto.InternalMessageInfo

func (m *ContactsArrayMessage) GetDisplayName() string {
	if m != nil && m.DisplayName != nil {
		return *m.DisplayName
	}
	return ""
}

func (m *ContactsArrayMessage) GetContacts() []*ContactMessage {
	if m != nil {
		return m.Contacts
	}
	return nil
}

func (m *ContactsArrayMessage) GetContextInfo() *ContextInfo {
	if m != nil {
		return m.ContextInfo
	}
	return nil
}

type HSMCurrency struct {
	CurrencyCode         *string  `protobuf:"bytes,1,opt,name=currencyCode" json:"currencyCode,omitempty"`
	Amount1000           *int64   `protobuf:"varint,2,opt,name=amount1000" json:"amount1000,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HSMCurrency) Reset()         { *m = HSMCurrency{} }
func (m *HSMCurrency) String() string { return proto.CompactTextString(m) }
func (*HSMCurrency) ProtoMessage()    {}
func (*HSMCurrency) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{26}
}
func (m *HSMCurrency) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *HSMCurrency) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_HSMCurrency.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *HSMCurrency) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HSMCurrency.Merge(m, src)
}
func (m *HSMCurrency) XXX_Size() int {
	return m.Size()
}
func (m *HSMCurrency) XXX_DiscardUnknown() {
	xxx_messageInfo_HSMCurrency.DiscardUnknown(m)
}

var xxx_messageInfo_HSMCurrency proto.InternalMessageInfo

func (m *HSMCurrency) GetCurrencyCode() string {
	if m != nil && m.CurrencyCode != nil {
		return *m.CurrencyCode
	}
	return ""
}

func (m *HSMCurrency) GetAmount1000() int64 {
	if m != nil && m.Amount1000 != nil {
		return *m.Amount1000
	}
	return 0
}

type HSMDateTimeComponent struct {
	DayOfWeek            *HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_DAYOFWEEKTYPE `protobuf:"varint,1,opt,name=dayOfWeek,enum=proto.HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_DAYOFWEEKTYPE" json:"dayOfWeek,omitempty"`
	Year                 *uint32                                                     `protobuf:"varint,2,opt,name=year" json:"year,omitempty"`
	Month                *uint32                                                     `protobuf:"varint,3,opt,name=month" json:"month,omitempty"`
	DayOfMonth           *uint32                                                     `protobuf:"varint,4,opt,name=dayOfMonth" json:"dayOfMonth,omitempty"`
	Hour                 *uint32                                                     `protobuf:"varint,5,opt,name=hour" json:"hour,omitempty"`
	Minute               *uint32                                                     `protobuf:"varint,6,opt,name=minute" json:"minute,omitempty"`
	Calendar             *HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_CALENDARTYPE  `protobuf:"varint,7,opt,name=calendar,enum=proto.HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_CALENDARTYPE" json:"calendar,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                    `json:"-"`
	XXX_unrecognized     []byte                                                      `json:"-"`
	XXX_sizecache        int32                                                       `json:"-"`
}

func (m *HSMDateTimeComponent) Reset()         { *m = HSMDateTimeComponent{} }
func (m *HSMDateTimeComponent) String() string { return proto.CompactTextString(m) }
func (*HSMDateTimeComponent) ProtoMessage()    {}
func (*HSMDateTimeComponent) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{27}
}
func (m *HSMDateTimeComponent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *HSMDateTimeComponent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_HSMDateTimeComponent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *HSMDateTimeComponent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HSMDateTimeComponent.Merge(m, src)
}
func (m *HSMDateTimeComponent) XXX_Size() int {
	return m.Size()
}
func (m *HSMDateTimeComponent) XXX_DiscardUnknown() {
	xxx_messageInfo_HSMDateTimeComponent.DiscardUnknown(m)
}

var xxx_messageInfo_HSMDateTimeComponent proto.InternalMessageInfo

func (m *HSMDateTimeComponent) GetDayOfWeek() HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_DAYOFWEEKTYPE {
	if m != nil && m.DayOfWeek != nil {
		return *m.DayOfWeek
	}
	return HSMDateTimeComponent_MONDAY
}

func (m *HSMDateTimeComponent) GetYear() uint32 {
	if m != nil && m.Year != nil {
		return *m.Year
	}
	return 0
}

func (m *HSMDateTimeComponent) GetMonth() uint32 {
	if m != nil && m.Month != nil {
		return *m.Month
	}
	return 0
}

func (m *HSMDateTimeComponent) GetDayOfMonth() uint32 {
	if m != nil && m.DayOfMonth != nil {
		return *m.DayOfMonth
	}
	return 0
}

func (m *HSMDateTimeComponent) GetHour() uint32 {
	if m != nil && m.Hour != nil {
		return *m.Hour
	}
	return 0
}

func (m *HSMDateTimeComponent) GetMinute() uint32 {
	if m != nil && m.Minute != nil {
		return *m.Minute
	}
	return 0
}

func (m *HSMDateTimeComponent) GetCalendar() HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_CALENDARTYPE {
	if m != nil && m.Calendar != nil {
		return *m.Calendar
	}
	return HSMDateTimeComponent_GREGORIAN
}

type HSMDateTimeUnixEpoch struct {
	Timestamp            *int64   `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HSMDateTimeUnixEpoch) Reset()         { *m = HSMDateTimeUnixEpoch{} }
func (m *HSMDateTimeUnixEpoch) String() string { return proto.CompactTextString(m) }
func (*HSMDateTimeUnixEpoch) ProtoMessage()    {}
func (*HSMDateTimeUnixEpoch) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{28}
}
func (m *HSMDateTimeUnixEpoch) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *HSMDateTimeUnixEpoch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_HSMDateTimeUnixEpoch.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *HSMDateTimeUnixEpoch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HSMDateTimeUnixEpoch.Merge(m, src)
}
func (m *HSMDateTimeUnixEpoch) XXX_Size() int {
	return m.Size()
}
func (m *HSMDateTimeUnixEpoch) XXX_DiscardUnknown() {
	xxx_messageInfo_HSMDateTimeUnixEpoch.DiscardUnknown(m)
}

var xxx_messageInfo_HSMDateTimeUnixEpoch proto.InternalMessageInfo

func (m *HSMDateTimeUnixEpoch) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

type HSMDateTime struct {
	// Types that are valid to be assigned to DatetimeOneof:
	//	*HSMDateTime_Component
	//	*HSMDateTime_UnixEpoch
	DatetimeOneof        isHSMDateTime_DatetimeOneof `protobuf_oneof:"datetimeOneof"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *HSMDateTime) Reset()         { *m = HSMDateTime{} }
func (m *HSMDateTime) String() string { return proto.CompactTextString(m) }
func (*HSMDateTime) ProtoMessage()    {}
func (*HSMDateTime) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{29}
}
func (m *HSMDateTime) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *HSMDateTime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_HSMDateTime.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *HSMDateTime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HSMDateTime.Merge(m, src)
}
func (m *HSMDateTime) XXX_Size() int {
	return m.Size()
}
func (m *HSMDateTime) XXX_DiscardUnknown() {
	xxx_messageInfo_HSMDateTime.DiscardUnknown(m)
}

var xxx_messageInfo_HSMDateTime proto.InternalMessageInfo

type isHSMDateTime_DatetimeOneof interface {
	isHSMDateTime_DatetimeOneof()
	MarshalTo([]byte) (int, error)
	Size() int
}

type HSMDateTime_Component struct {
	Component *HSMDateTimeComponent `protobuf:"bytes,1,opt,name=component,oneof" json:"component,omitempty"`
}
type HSMDateTime_UnixEpoch struct {
	UnixEpoch *HSMDateTimeUnixEpoch `protobuf:"bytes,2,opt,name=unixEpoch,oneof" json:"unixEpoch,omitempty"`
}

func (*HSMDateTime_Component) isHSMDateTime_DatetimeOneof() {}
func (*HSMDateTime_UnixEpoch) isHSMDateTime_DatetimeOneof() {}

func (m *HSMDateTime) GetDatetimeOneof() isHSMDateTime_DatetimeOneof {
	if m != nil {
		return m.DatetimeOneof
	}
	return nil
}

func (m *HSMDateTime) GetComponent() *HSMDateTimeComponent {
	if x, ok := m.GetDatetimeOneof().(*HSMDateTime_Component); ok {
		return x.Component
	}
	return nil
}

func (m *HSMDateTime) GetUnixEpoch() *HSMDateTimeUnixEpoch {
	if x, ok := m.GetDatetimeOneof().(*HSMDateTime_UnixEpoch); ok {
		return x.UnixEpoch
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*HSMDateTime) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*HSMDateTime_Component)(nil),
		(*HSMDateTime_UnixEpoch)(nil),
	}
}

type HSMLocalizableParameter struct {
	Default *string `protobuf:"bytes,1,opt,name=default" json:"default,omitempty"`
	// Types that are valid to be assigned to ParamOneof:
	//	*HSMLocalizableParameter_Currency
	//	*HSMLocalizableParameter_DateTime
	ParamOneof           isHSMLocalizableParameter_ParamOneof `protobuf_oneof:"paramOneof"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *HSMLocalizableParameter) Reset()         { *m = HSMLocalizableParameter{} }
func (m *HSMLocalizableParameter) String() string { return proto.CompactTextString(m) }
func (*HSMLocalizableParameter) ProtoMessage()    {}
func (*HSMLocalizableParameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{30}
}
func (m *HSMLocalizableParameter) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *HSMLocalizableParameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_HSMLocalizableParameter.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *HSMLocalizableParameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HSMLocalizableParameter.Merge(m, src)
}
func (m *HSMLocalizableParameter) XXX_Size() int {
	return m.Size()
}
func (m *HSMLocalizableParameter) XXX_DiscardUnknown() {
	xxx_messageInfo_HSMLocalizableParameter.DiscardUnknown(m)
}

var xxx_messageInfo_HSMLocalizableParameter proto.InternalMessageInfo

type isHSMLocalizableParameter_ParamOneof interface {
	isHSMLocalizableParameter_ParamOneof()
	MarshalTo([]byte) (int, error)
	Size() int
}

type HSMLocalizableParameter_Currency struct {
	Currency *HSMCurrency `protobuf:"bytes,2,opt,name=currency,oneof" json:"currency,omitempty"`
}
type HSMLocalizableParameter_DateTime struct {
	DateTime *HSMDateTime `protobuf:"bytes,3,opt,name=dateTime,oneof" json:"dateTime,omitempty"`
}

func (*HSMLocalizableParameter_Currency) isHSMLocalizableParameter_ParamOneof() {}
func (*HSMLocalizableParameter_DateTime) isHSMLocalizableParameter_ParamOneof() {}

func (m *HSMLocalizableParameter) GetParamOneof() isHSMLocalizableParameter_ParamOneof {
	if m != nil {
		return m.ParamOneof
	}
	return nil
}

func (m *HSMLocalizableParameter) GetDefault() string {
	if m != nil && m.Default != nil {
		return *m.Default
	}
	return ""
}

func (m *HSMLocalizableParameter) GetCurrency() *HSMCurrency {
	if x, ok := m.GetParamOneof().(*HSMLocalizableParameter_Currency); ok {
		return x.Currency
	}
	return nil
}

func (m *HSMLocalizableParameter) GetDateTime() *HSMDateTime {
	if x, ok := m.GetParamOneof().(*HSMLocalizableParameter_DateTime); ok {
		return x.DateTime
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*HSMLocalizableParameter) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*HSMLocalizableParameter_Currency)(nil),
		(*HSMLocalizableParameter_DateTime)(nil),
	}
}

type HighlyStructuredMessage struct {
	Namespace            *string                    `protobuf:"bytes,1,opt,name=namespace" json:"namespace,omitempty"`
	ElementName          *string                    `protobuf:"bytes,2,opt,name=elementName" json:"elementName,omitempty"`
	Params               []string                   `protobuf:"bytes,3,rep,name=params" json:"params,omitempty"`
	FallbackLg           *string                    `protobuf:"bytes,4,opt,name=fallbackLg" json:"fallbackLg,omitempty"`
	FallbackLc           *string                    `protobuf:"bytes,5,opt,name=fallbackLc" json:"fallbackLc,omitempty"`
	LocalizableParams    []*HSMLocalizableParameter `protobuf:"bytes,6,rep,name=localizableParams" json:"localizableParams,omitempty"`
	DeterministicLg      *string                    `protobuf:"bytes,7,opt,name=deterministicLg" json:"deterministicLg,omitempty"`
	DeterministicLc      *string                    `protobuf:"bytes,8,opt,name=deterministicLc" json:"deterministicLc,omitempty"`
	HydratedHsm          *TemplateMessage           `protobuf:"bytes,9,opt,name=hydratedHsm" json:"hydratedHsm,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *HighlyStructuredMessage) Reset()         { *m = HighlyStructuredMessage{} }
func (m *HighlyStructuredMessage) String() string { return proto.CompactTextString(m) }
func (*HighlyStructuredMessage) ProtoMessage()    {}
func (*HighlyStructuredMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{31}
}
func (m *HighlyStructuredMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *HighlyStructuredMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_HighlyStructuredMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *HighlyStructuredMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HighlyStructuredMessage.Merge(m, src)
}
func (m *HighlyStructuredMessage) XXX_Size() int {
	return m.Size()
}
func (m *HighlyStructuredMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_HighlyStructuredMessage.DiscardUnknown(m)
}

var xxx_messageInfo_HighlyStructuredMessage proto.InternalMessageInfo

func (m *HighlyStructuredMessage) GetNamespace() string {
	if m != nil && m.Namespace != nil {
		return *m.Namespace
	}
	return ""
}

func (m *HighlyStructuredMessage) GetElementName() string {
	if m != nil && m.ElementName != nil {
		return *m.ElementName
	}
	return ""
}

func (m *HighlyStructuredMessage) GetParams() []string {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *HighlyStructuredMessage) GetFallbackLg() string {
	if m != nil && m.FallbackLg != nil {
		return *m.FallbackLg
	}
	return ""
}

func (m *HighlyStructuredMessage) GetFallbackLc() string {
	if m != nil && m.FallbackLc != nil {
		return *m.FallbackLc
	}
	return ""
}

func (m *HighlyStructuredMessage) GetLocalizableParams() []*HSMLocalizableParameter {
	if m != nil {
		return m.LocalizableParams
	}
	return nil
}

func (m *HighlyStructuredMessage) GetDeterministicLg() string {
	if m != nil && m.DeterministicLg != nil {
		return *m.DeterministicLg
	}
	return ""
}

func (m *HighlyStructuredMessage) GetDeterministicLc() string {
	if m != nil && m.DeterministicLc != nil {
		return *m.DeterministicLc
	}
	return ""
}

func (m *HighlyStructuredMessage) GetHydratedHsm() *TemplateMessage {
	if m != nil {
		return m.HydratedHsm
	}
	return nil
}

type SendPaymentMessage struct {
	NoteMessage          *Message    `protobuf:"bytes,2,opt,name=noteMessage" json:"noteMessage,omitempty"`
	RequestMessageKey    *MessageKey `protobuf:"bytes,3,opt,name=requestMessageKey" json:"requestMessageKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SendPaymentMessage) Reset()         { *m = SendPaymentMessage{} }
func (m *SendPaymentMessage) String() string { return proto.CompactTextString(m) }
func (*SendPaymentMessage) ProtoMessage()    {}
func (*SendPaymentMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{32}
}
func (m *SendPaymentMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SendPaymentMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SendPaymentMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SendPaymentMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendPaymentMessage.Merge(m, src)
}
func (m *SendPaymentMessage) XXX_Size() int {
	return m.Size()
}
func (m *SendPaymentMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_SendPaymentMessage.DiscardUnknown(m)
}

var xxx_messageInfo_SendPaymentMessage proto.InternalMessageInfo

func (m *SendPaymentMessage) GetNoteMessage() *Message {
	if m != nil {
		return m.NoteMessage
	}
	return nil
}

func (m *SendPaymentMessage) GetRequestMessageKey() *MessageKey {
	if m != nil {
		return m.RequestMessageKey
	}
	return nil
}

type RequestPaymentMessage struct {
	NoteMessage          *Message `protobuf:"bytes,4,opt,name=noteMessage" json:"noteMessage,omitempty"`
	CurrencyCodeIso4217  *string  `protobuf:"bytes,1,opt,name=currencyCodeIso4217" json:"currencyCodeIso4217,omitempty"`
	Amount1000           *uint64  `protobuf:"varint,2,opt,name=amount1000" json:"amount1000,omitempty"`
	RequestFrom          *string  `protobuf:"bytes,3,opt,name=requestFrom" json:"requestFrom,omitempty"`
	ExpiryTimestamp      *int64   `protobuf:"varint,5,opt,name=expiryTimestamp" json:"expiryTimestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestPaymentMessage) Reset()         { *m = RequestPaymentMessage{} }
func (m *RequestPaymentMessage) String() string { return proto.CompactTextString(m) }
func (*RequestPaymentMessage) ProtoMessage()    {}
func (*RequestPaymentMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{33}
}
func (m *RequestPaymentMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RequestPaymentMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RequestPaymentMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RequestPaymentMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestPaymentMessage.Merge(m, src)
}
func (m *RequestPaymentMessage) XXX_Size() int {
	return m.Size()
}
func (m *RequestPaymentMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestPaymentMessage.DiscardUnknown(m)
}

var xxx_messageInfo_RequestPaymentMessage proto.InternalMessageInfo

func (m *RequestPaymentMessage) GetNoteMessage() *Message {
	if m != nil {
		return m.NoteMessage
	}
	return nil
}

func (m *RequestPaymentMessage) GetCurrencyCodeIso4217() string {
	if m != nil && m.CurrencyCodeIso4217 != nil {
		return *m.CurrencyCodeIso4217
	}
	return ""
}

func (m *RequestPaymentMessage) GetAmount1000() uint64 {
	if m != nil && m.Amount1000 != nil {
		return *m.Amount1000
	}
	return 0
}

func (m *RequestPaymentMessage) GetRequestFrom() string {
	if m != nil && m.RequestFrom != nil {
		return *m.RequestFrom
	}
	return ""
}

func (m *RequestPaymentMessage) GetExpiryTimestamp() int64 {
	if m != nil && m.ExpiryTimestamp != nil {
		return *m.ExpiryTimestamp
	}
	return 0
}

type DeclinePaymentRequestMessage struct {
	Key                  *MessageKey `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *DeclinePaymentRequestMessage) Reset()         { *m = DeclinePaymentRequestMessage{} }
func (m *DeclinePaymentRequestMessage) String() string { return proto.CompactTextString(m) }
func (*DeclinePaymentRequestMessage) ProtoMessage()    {}
func (*DeclinePaymentRequestMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{34}
}
func (m *DeclinePaymentRequestMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeclinePaymentRequestMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeclinePaymentRequestMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeclinePaymentRequestMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeclinePaymentRequestMessage.Merge(m, src)
}
func (m *DeclinePaymentRequestMessage) XXX_Size() int {
	return m.Size()
}
func (m *DeclinePaymentRequestMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_DeclinePaymentRequestMessage.DiscardUnknown(m)
}

var xxx_messageInfo_DeclinePaymentRequestMessage proto.InternalMessageInfo

func (m *DeclinePaymentRequestMessage) GetKey() *MessageKey {
	if m != nil {
		return m.Key
	}
	return nil
}

type CancelPaymentRequestMessage struct {
	Key                  *MessageKey `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CancelPaymentRequestMessage) Reset()         { *m = CancelPaymentRequestMessage{} }
func (m *CancelPaymentRequestMessage) String() string { return proto.CompactTextString(m) }
func (*CancelPaymentRequestMessage) ProtoMessage()    {}
func (*CancelPaymentRequestMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{35}
}
func (m *CancelPaymentRequestMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CancelPaymentRequestMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CancelPaymentRequestMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CancelPaymentRequestMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelPaymentRequestMessage.Merge(m, src)
}
func (m *CancelPaymentRequestMessage) XXX_Size() int {
	return m.Size()
}
func (m *CancelPaymentRequestMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelPaymentRequestMessage.DiscardUnknown(m)
}

var xxx_messageInfo_CancelPaymentRequestMessage proto.InternalMessageInfo

func (m *CancelPaymentRequestMessage) GetKey() *MessageKey {
	if m != nil {
		return m.Key
	}
	return nil
}

type LiveLocationMessage struct {
	DegreesLatitude                   *float64     `protobuf:"fixed64,1,opt,name=degreesLatitude" json:"degreesLatitude,omitempty"`
	DegreesLongitude                  *float64     `protobuf:"fixed64,2,opt,name=degreesLongitude" json:"degreesLongitude,omitempty"`
	AccuracyInMeters                  *uint32      `protobuf:"varint,3,opt,name=accuracyInMeters" json:"accuracyInMeters,omitempty"`
	SpeedInMps                        *float32     `protobuf:"fixed32,4,opt,name=speedInMps" json:"speedInMps,omitempty"`
	DegreesClockwiseFromMagneticNorth *uint32      `protobuf:"varint,5,opt,name=degreesClockwiseFromMagneticNorth" json:"degreesClockwiseFromMagneticNorth,omitempty"`
	Caption                           *string      `protobuf:"bytes,6,opt,name=caption" json:"caption,omitempty"`
	SequenceNumber                    *int64       `protobuf:"varint,7,opt,name=sequenceNumber" json:"sequenceNumber,omitempty"`
	TimeOffset                        *uint32      `protobuf:"varint,8,opt,name=timeOffset" json:"timeOffset,omitempty"`
	JpegThumbnail                     []byte       `protobuf:"bytes,16,opt,name=jpegThumbnail" json:"jpegThumbnail,omitempty"`
	ContextInfo                       *ContextInfo `protobuf:"bytes,17,opt,name=contextInfo" json:"contextInfo,omitempty"`
	XXX_NoUnkeyedLiteral              struct{}     `json:"-"`
	XXX_unrecognized                  []byte       `json:"-"`
	XXX_sizecache                     int32        `json:"-"`
}

func (m *LiveLocationMessage) Reset()         { *m = LiveLocationMessage{} }
func (m *LiveLocationMessage) String() string { return proto.CompactTextString(m) }
func (*LiveLocationMessage) ProtoMessage()    {}
func (*LiveLocationMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{36}
}
func (m *LiveLocationMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LiveLocationMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LiveLocationMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LiveLocationMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LiveLocationMessage.Merge(m, src)
}
func (m *LiveLocationMessage) XXX_Size() int {
	return m.Size()
}
func (m *LiveLocationMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_LiveLocationMessage.DiscardUnknown(m)
}

var xxx_messageInfo_LiveLocationMessage proto.InternalMessageInfo

func (m *LiveLocationMessage) GetDegreesLatitude() float64 {
	if m != nil && m.DegreesLatitude != nil {
		return *m.DegreesLatitude
	}
	return 0
}

func (m *LiveLocationMessage) GetDegreesLongitude() float64 {
	if m != nil && m.DegreesLongitude != nil {
		return *m.DegreesLongitude
	}
	return 0
}

func (m *LiveLocationMessage) GetAccuracyInMeters() uint32 {
	if m != nil && m.AccuracyInMeters != nil {
		return *m.AccuracyInMeters
	}
	return 0
}

func (m *LiveLocationMessage) GetSpeedInMps() float32 {
	if m != nil && m.SpeedInMps != nil {
		return *m.SpeedInMps
	}
	return 0
}

func (m *LiveLocationMessage) GetDegreesClockwiseFromMagneticNorth() uint32 {
	if m != nil && m.DegreesClockwiseFromMagneticNorth != nil {
		return *m.DegreesClockwiseFromMagneticNorth
	}
	return 0
}

func (m *LiveLocationMessage) GetCaption() string {
	if m != nil && m.Caption != nil {
		return *m.Caption
	}
	return ""
}

func (m *LiveLocationMessage) GetSequenceNumber() int64 {
	if m != nil && m.SequenceNumber != nil {
		return *m.SequenceNumber
	}
	return 0
}

func (m *LiveLocationMessage) GetTimeOffset() uint32 {
	if m != nil && m.TimeOffset != nil {
		return *m.TimeOffset
	}
	return 0
}

func (m *LiveLocationMessage) GetJpegThumbnail() []byte {
	if m != nil {
		return m.JpegThumbnail
	}
	return nil
}

func (m *LiveLocationMessage) GetContextInfo() *ContextInfo {
	if m != nil {
		return m.ContextInfo
	}
	return nil
}

type StickerMessage struct {
	Url                  *string      `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	FileSha256           []byte       `protobuf:"bytes,2,opt,name=fileSha256" json:"fileSha256,omitempty"`
	FileEncSha256        []byte       `protobuf:"bytes,3,opt,name=fileEncSha256" json:"fileEncSha256,omitempty"`
	MediaKey             []byte       `protobuf:"bytes,4,opt,name=mediaKey" json:"mediaKey,omitempty"`
	Mimetype             *string      `protobuf:"bytes,5,opt,name=mimetype" json:"mimetype,omitempty"`
	Height               *uint32      `protobuf:"varint,6,opt,name=height" json:"height,omitempty"`
	Width                *uint32      `protobuf:"varint,7,opt,name=width" json:"width,omitempty"`
	DirectPath           *string      `protobuf:"bytes,8,opt,name=directPath" json:"directPath,omitempty"`
	FileLength           *uint64      `protobuf:"varint,9,opt,name=fileLength" json:"fileLength,omitempty"`
	MediaKeyTimestamp    *int64       `protobuf:"varint,10,opt,name=mediaKeyTimestamp" json:"mediaKeyTimestamp,omitempty"`
	FirstFrameLength     *uint32      `protobuf:"varint,11,opt,name=firstFrameLength" json:"firstFrameLength,omitempty"`
	FirstFrameSidecar    []byte       `protobuf:"bytes,12,opt,name=firstFrameSidecar" json:"firstFrameSidecar,omitempty"`
	IsAnimated           *bool        `protobuf:"varint,13,opt,name=isAnimated" json:"isAnimated,omitempty"`
	PngThumbnail         []byte       `protobuf:"bytes,16,opt,name=pngThumbnail" json:"pngThumbnail,omitempty"`
	ContextInfo          *ContextInfo `protobuf:"bytes,17,opt,name=contextInfo" json:"contextInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *StickerMessage) Reset()         { *m = StickerMessage{} }
func (m *StickerMessage) String() string { return proto.CompactTextString(m) }
func (*StickerMessage) ProtoMessage()    {}
func (*StickerMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{37}
}
func (m *StickerMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StickerMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StickerMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StickerMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StickerMessage.Merge(m, src)
}
func (m *StickerMessage) XXX_Size() int {
	return m.Size()
}
func (m *StickerMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_StickerMessage.DiscardUnknown(m)
}

var xxx_messageInfo_StickerMessage proto.InternalMessageInfo

func (m *StickerMessage) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *StickerMessage) GetFileSha256() []byte {
	if m != nil {
		return m.FileSha256
	}
	return nil
}

func (m *StickerMessage) GetFileEncSha256() []byte {
	if m != nil {
		return m.FileEncSha256
	}
	return nil
}

func (m *StickerMessage) GetMediaKey() []byte {
	if m != nil {
		return m.MediaKey
	}
	return nil
}

func (m *StickerMessage) GetMimetype() string {
	if m != nil && m.Mimetype != nil {
		return *m.Mimetype
	}
	return ""
}

func (m *StickerMessage) GetHeight() uint32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

func (m *StickerMessage) GetWidth() uint32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

func (m *StickerMessage) GetDirectPath() string {
	if m != nil && m.DirectPath != nil {
		return *m.DirectPath
	}
	return ""
}

func (m *StickerMessage) GetFileLength() uint64 {
	if m != nil && m.FileLength != nil {
		return *m.FileLength
	}
	return 0
}

func (m *StickerMessage) GetMediaKeyTimestamp() int64 {
	if m != nil && m.MediaKeyTimestamp != nil {
		return *m.MediaKeyTimestamp
	}
	return 0
}

func (m *StickerMessage) GetFirstFrameLength() uint32 {
	if m != nil && m.FirstFrameLength != nil {
		return *m.FirstFrameLength
	}
	return 0
}

func (m *StickerMessage) GetFirstFrameSidecar() []byte {
	if m != nil {
		return m.FirstFrameSidecar
	}
	return nil
}

func (m *StickerMessage) GetIsAnimated() bool {
	if m != nil && m.IsAnimated != nil {
		return *m.IsAnimated
	}
	return false
}

func (m *StickerMessage) GetPngThumbnail() []byte {
	if m != nil {
		return m.PngThumbnail
	}
	return nil
}

func (m *StickerMessage) GetContextInfo() *ContextInfo {
	if m != nil {
		return m.ContextInfo
	}
	return nil
}

type FourRowTemplate struct {
	Content *HighlyStructuredMessage `protobuf:"bytes,6,opt,name=content" json:"content,omitempty"`
	Footer  *HighlyStructuredMessage `protobuf:"bytes,7,opt,name=footer" json:"footer,omitempty"`
	Buttons []*TemplateButton        `protobuf:"bytes,8,rep,name=buttons" json:"buttons,omitempty"`
	// Types that are valid to be assigned to Title:
	//	*FourRowTemplate_DocumentMessage
	//	*FourRowTemplate_HighlyStructuredMessage
	//	*FourRowTemplate_ImageMessage
	//	*FourRowTemplate_VideoMessage
	//	*FourRowTemplate_LocationMessage
	Title                isFourRowTemplate_Title `protobuf_oneof:"title"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *FourRowTemplate) Reset()         { *m = FourRowTemplate{} }
func (m *FourRowTemplate) String() string { return proto.CompactTextString(m) }
func (*FourRowTemplate) ProtoMessage()    {}
func (*FourRowTemplate) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{38}
}
func (m *FourRowTemplate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *FourRowTemplate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_FourRowTemplate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *FourRowTemplate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FourRowTemplate.Merge(m, src)
}
func (m *FourRowTemplate) XXX_Size() int {
	return m.Size()
}
func (m *FourRowTemplate) XXX_DiscardUnknown() {
	xxx_messageInfo_FourRowTemplate.DiscardUnknown(m)
}

var xxx_messageInfo_FourRowTemplate proto.InternalMessageInfo

type isFourRowTemplate_Title interface {
	isFourRowTemplate_Title()
	MarshalTo([]byte) (int, error)
	Size() int
}

type FourRowTemplate_DocumentMessage struct {
	DocumentMessage *DocumentMessage `protobuf:"bytes,1,opt,name=documentMessage,oneof" json:"documentMessage,omitempty"`
}
type FourRowTemplate_HighlyStructuredMessage struct {
	HighlyStructuredMessage *HighlyStructuredMessage `protobuf:"bytes,2,opt,name=highlyStructuredMessage,oneof" json:"highlyStructuredMessage,omitempty"`
}
type FourRowTemplate_ImageMessage struct {
	ImageMessage *ImageMessage `protobuf:"bytes,3,opt,name=imageMessage,oneof" json:"imageMessage,omitempty"`
}
type FourRowTemplate_VideoMessage struct {
	VideoMessage *VideoMessage `protobuf:"bytes,4,opt,name=videoMessage,oneof" json:"videoMessage,omitempty"`
}
type FourRowTemplate_LocationMessage struct {
	LocationMessage *LocationMessage `protobuf:"bytes,5,opt,name=locationMessage,oneof" json:"locationMessage,omitempty"`
}

func (*FourRowTemplate_DocumentMessage) isFourRowTemplate_Title()         {}
func (*FourRowTemplate_HighlyStructuredMessage) isFourRowTemplate_Title() {}
func (*FourRowTemplate_ImageMessage) isFourRowTemplate_Title()            {}
func (*FourRowTemplate_VideoMessage) isFourRowTemplate_Title()            {}
func (*FourRowTemplate_LocationMessage) isFourRowTemplate_Title()         {}

func (m *FourRowTemplate) GetTitle() isFourRowTemplate_Title {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *FourRowTemplate) GetContent() *HighlyStructuredMessage {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *FourRowTemplate) GetFooter() *HighlyStructuredMessage {
	if m != nil {
		return m.Footer
	}
	return nil
}

func (m *FourRowTemplate) GetButtons() []*TemplateButton {
	if m != nil {
		return m.Buttons
	}
	return nil
}

func (m *FourRowTemplate) GetDocumentMessage() *DocumentMessage {
	if x, ok := m.GetTitle().(*FourRowTemplate_DocumentMessage); ok {
		return x.DocumentMessage
	}
	return nil
}

func (m *FourRowTemplate) GetHighlyStructuredMessage() *HighlyStructuredMessage {
	if x, ok := m.GetTitle().(*FourRowTemplate_HighlyStructuredMessage); ok {
		return x.HighlyStructuredMessage
	}
	return nil
}

func (m *FourRowTemplate) GetImageMessage() *ImageMessage {
	if x, ok := m.GetTitle().(*FourRowTemplate_ImageMessage); ok {
		return x.ImageMessage
	}
	return nil
}

func (m *FourRowTemplate) GetVideoMessage() *VideoMessage {
	if x, ok := m.GetTitle().(*FourRowTemplate_VideoMessage); ok {
		return x.VideoMessage
	}
	return nil
}

func (m *FourRowTemplate) GetLocationMessage() *LocationMessage {
	if x, ok := m.GetTitle().(*FourRowTemplate_LocationMessage); ok {
		return x.LocationMessage
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*FourRowTemplate) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*FourRowTemplate_DocumentMessage)(nil),
		(*FourRowTemplate_HighlyStructuredMessage)(nil),
		(*FourRowTemplate_ImageMessage)(nil),
		(*FourRowTemplate_VideoMessage)(nil),
		(*FourRowTemplate_LocationMessage)(nil),
	}
}

type HydratedFourRowTemplate struct {
	HydratedContentText *string                   `protobuf:"bytes,6,opt,name=hydratedContentText" json:"hydratedContentText,omitempty"`
	HydratedFooterText  *string                   `protobuf:"bytes,7,opt,name=hydratedFooterText" json:"hydratedFooterText,omitempty"`
	HydratedButtons     []*HydratedTemplateButton `protobuf:"bytes,8,rep,name=hydratedButtons" json:"hydratedButtons,omitempty"`
	TemplateId          *string                   `protobuf:"bytes,9,opt,name=templateId" json:"templateId,omitempty"`
	// Types that are valid to be assigned to Title:
	//	*HydratedFourRowTemplate_DocumentMessage
	//	*HydratedFourRowTemplate_HydratedTitleText
	//	*HydratedFourRowTemplate_ImageMessage
	//	*HydratedFourRowTemplate_VideoMessage
	//	*HydratedFourRowTemplate_LocationMessage
	Title                isHydratedFourRowTemplate_Title `protobuf_oneof:"title"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *HydratedFourRowTemplate) Reset()         { *m = HydratedFourRowTemplate{} }
func (m *HydratedFourRowTemplate) String() string { return proto.CompactTextString(m) }
func (*HydratedFourRowTemplate) ProtoMessage()    {}
func (*HydratedFourRowTemplate) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{39}
}
func (m *HydratedFourRowTemplate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *HydratedFourRowTemplate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_HydratedFourRowTemplate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *HydratedFourRowTemplate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HydratedFourRowTemplate.Merge(m, src)
}
func (m *HydratedFourRowTemplate) XXX_Size() int {
	return m.Size()
}
func (m *HydratedFourRowTemplate) XXX_DiscardUnknown() {
	xxx_messageInfo_HydratedFourRowTemplate.DiscardUnknown(m)
}

var xxx_messageInfo_HydratedFourRowTemplate proto.InternalMessageInfo

type isHydratedFourRowTemplate_Title interface {
	isHydratedFourRowTemplate_Title()
	MarshalTo([]byte) (int, error)
	Size() int
}

type HydratedFourRowTemplate_DocumentMessage struct {
	DocumentMessage *DocumentMessage `protobuf:"bytes,1,opt,name=documentMessage,oneof" json:"documentMessage,omitempty"`
}
type HydratedFourRowTemplate_HydratedTitleText struct {
	HydratedTitleText string `protobuf:"bytes,2,opt,name=hydratedTitleText,oneof" json:"hydratedTitleText,omitempty"`
}
type HydratedFourRowTemplate_ImageMessage struct {
	ImageMessage *ImageMessage `protobuf:"bytes,3,opt,name=imageMessage,oneof" json:"imageMessage,omitempty"`
}
type HydratedFourRowTemplate_VideoMessage struct {
	VideoMessage *VideoMessage `protobuf:"bytes,4,opt,name=videoMessage,oneof" json:"videoMessage,omitempty"`
}
type HydratedFourRowTemplate_LocationMessage struct {
	LocationMessage *LocationMessage `protobuf:"bytes,5,opt,name=locationMessage,oneof" json:"locationMessage,omitempty"`
}

func (*HydratedFourRowTemplate_DocumentMessage) isHydratedFourRowTemplate_Title()   {}
func (*HydratedFourRowTemplate_HydratedTitleText) isHydratedFourRowTemplate_Title() {}
func (*HydratedFourRowTemplate_ImageMessage) isHydratedFourRowTemplate_Title()      {}
func (*HydratedFourRowTemplate_VideoMessage) isHydratedFourRowTemplate_Title()      {}
func (*HydratedFourRowTemplate_LocationMessage) isHydratedFourRowTemplate_Title()   {}

func (m *HydratedFourRowTemplate) GetTitle() isHydratedFourRowTemplate_Title {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *HydratedFourRowTemplate) GetHydratedContentText() string {
	if m != nil && m.HydratedContentText != nil {
		return *m.HydratedContentText
	}
	return ""
}

func (m *HydratedFourRowTemplate) GetHydratedFooterText() string {
	if m != nil && m.HydratedFooterText != nil {
		return *m.HydratedFooterText
	}
	return ""
}

func (m *HydratedFourRowTemplate) GetHydratedButtons() []*HydratedTemplateButton {
	if m != nil {
		return m.HydratedButtons
	}
	return nil
}

func (m *HydratedFourRowTemplate) GetTemplateId() string {
	if m != nil && m.TemplateId != nil {
		return *m.TemplateId
	}
	return ""
}

func (m *HydratedFourRowTemplate) GetDocumentMessage() *DocumentMessage {
	if x, ok := m.GetTitle().(*HydratedFourRowTemplate_DocumentMessage); ok {
		return x.DocumentMessage
	}
	return nil
}

func (m *HydratedFourRowTemplate) GetHydratedTitleText() string {
	if x, ok := m.GetTitle().(*HydratedFourRowTemplate_HydratedTitleText); ok {
		return x.HydratedTitleText
	}
	return ""
}

func (m *HydratedFourRowTemplate) GetImageMessage() *ImageMessage {
	if x, ok := m.GetTitle().(*HydratedFourRowTemplate_ImageMessage); ok {
		return x.ImageMessage
	}
	return nil
}

func (m *HydratedFourRowTemplate) GetVideoMessage() *VideoMessage {
	if x, ok := m.GetTitle().(*HydratedFourRowTemplate_VideoMessage); ok {
		return x.VideoMessage
	}
	return nil
}

func (m *HydratedFourRowTemplate) GetLocationMessage() *LocationMessage {
	if x, ok := m.GetTitle().(*HydratedFourRowTemplate_LocationMessage); ok {
		return x.LocationMessage
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*HydratedFourRowTemplate) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*HydratedFourRowTemplate_DocumentMessage)(nil),
		(*HydratedFourRowTemplate_HydratedTitleText)(nil),
		(*HydratedFourRowTemplate_ImageMessage)(nil),
		(*HydratedFourRowTemplate_VideoMessage)(nil),
		(*HydratedFourRowTemplate_LocationMessage)(nil),
	}
}

type TemplateMessage struct {
	ContextInfo      *ContextInfo             `protobuf:"bytes,3,opt,name=contextInfo" json:"contextInfo,omitempty"`
	HydratedTemplate *HydratedFourRowTemplate `protobuf:"bytes,4,opt,name=hydratedTemplate" json:"hydratedTemplate,omitempty"`
	// Types that are valid to be assigned to Format:
	//	*TemplateMessage_FourRowTemplate
	//	*TemplateMessage_HydratedFourRowTemplate
	Format               isTemplateMessage_Format `protobuf_oneof:"format"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *TemplateMessage) Reset()         { *m = TemplateMessage{} }
func (m *TemplateMessage) String() string { return proto.CompactTextString(m) }
func (*TemplateMessage) ProtoMessage()    {}
func (*TemplateMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{40}
}
func (m *TemplateMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TemplateMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TemplateMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TemplateMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TemplateMessage.Merge(m, src)
}
func (m *TemplateMessage) XXX_Size() int {
	return m.Size()
}
func (m *TemplateMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TemplateMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TemplateMessage proto.InternalMessageInfo

type isTemplateMessage_Format interface {
	isTemplateMessage_Format()
	MarshalTo([]byte) (int, error)
	Size() int
}

type TemplateMessage_FourRowTemplate struct {
	FourRowTemplate *FourRowTemplate `protobuf:"bytes,1,opt,name=fourRowTemplate,oneof" json:"fourRowTemplate,omitempty"`
}
type TemplateMessage_HydratedFourRowTemplate struct {
	HydratedFourRowTemplate *HydratedFourRowTemplate `protobuf:"bytes,2,opt,name=hydratedFourRowTemplate,oneof" json:"hydratedFourRowTemplate,omitempty"`
}

func (*TemplateMessage_FourRowTemplate) isTemplateMessage_Format()         {}
func (*TemplateMessage_HydratedFourRowTemplate) isTemplateMessage_Format() {}

func (m *TemplateMessage) GetFormat() isTemplateMessage_Format {
	if m != nil {
		return m.Format
	}
	return nil
}

func (m *TemplateMessage) GetContextInfo() *ContextInfo {
	if m != nil {
		return m.ContextInfo
	}
	return nil
}

func (m *TemplateMessage) GetHydratedTemplate() *HydratedFourRowTemplate {
	if m != nil {
		return m.HydratedTemplate
	}
	return nil
}

func (m *TemplateMessage) GetFourRowTemplate() *FourRowTemplate {
	if x, ok := m.GetFormat().(*TemplateMessage_FourRowTemplate); ok {
		return x.FourRowTemplate
	}
	return nil
}

func (m *TemplateMessage) GetHydratedFourRowTemplate() *HydratedFourRowTemplate {
	if x, ok := m.GetFormat().(*TemplateMessage_HydratedFourRowTemplate); ok {
		return x.HydratedFourRowTemplate
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*TemplateMessage) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*TemplateMessage_FourRowTemplate)(nil),
		(*TemplateMessage_HydratedFourRowTemplate)(nil),
	}
}

type TemplateButtonReplyMessage struct {
	SelectedId           *string      `protobuf:"bytes,1,opt,name=selectedId" json:"selectedId,omitempty"`
	SelectedDisplayText  *string      `protobuf:"bytes,2,opt,name=selectedDisplayText" json:"selectedDisplayText,omitempty"`
	ContextInfo          *ContextInfo `protobuf:"bytes,3,opt,name=contextInfo" json:"contextInfo,omitempty"`
	SelectedIndex        *uint32      `protobuf:"varint,4,opt,name=selectedIndex" json:"selectedIndex,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TemplateButtonReplyMessage) Reset()         { *m = TemplateButtonReplyMessage{} }
func (m *TemplateButtonReplyMessage) String() string { return proto.CompactTextString(m) }
func (*TemplateButtonReplyMessage) ProtoMessage()    {}
func (*TemplateButtonReplyMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{41}
}
func (m *TemplateButtonReplyMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TemplateButtonReplyMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TemplateButtonReplyMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TemplateButtonReplyMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TemplateButtonReplyMessage.Merge(m, src)
}
func (m *TemplateButtonReplyMessage) XXX_Size() int {
	return m.Size()
}
func (m *TemplateButtonReplyMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TemplateButtonReplyMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TemplateButtonReplyMessage proto.InternalMessageInfo

func (m *TemplateButtonReplyMessage) GetSelectedId() string {
	if m != nil && m.SelectedId != nil {
		return *m.SelectedId
	}
	return ""
}

func (m *TemplateButtonReplyMessage) GetSelectedDisplayText() string {
	if m != nil && m.SelectedDisplayText != nil {
		return *m.SelectedDisplayText
	}
	return ""
}

func (m *TemplateButtonReplyMessage) GetContextInfo() *ContextInfo {
	if m != nil {
		return m.ContextInfo
	}
	return nil
}

func (m *TemplateButtonReplyMessage) GetSelectedIndex() uint32 {
	if m != nil && m.SelectedIndex != nil {
		return *m.SelectedIndex
	}
	return 0
}

type CatalogSnapshot struct {
	CatalogImage         *ImageMessage `protobuf:"bytes,1,opt,name=catalogImage" json:"catalogImage,omitempty"`
	Title                *string       `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Description          *string       `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CatalogSnapshot) Reset()         { *m = CatalogSnapshot{} }
func (m *CatalogSnapshot) String() string { return proto.CompactTextString(m) }
func (*CatalogSnapshot) ProtoMessage()    {}
func (*CatalogSnapshot) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{42}
}
func (m *CatalogSnapshot) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CatalogSnapshot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CatalogSnapshot.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CatalogSnapshot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CatalogSnapshot.Merge(m, src)
}
func (m *CatalogSnapshot) XXX_Size() int {
	return m.Size()
}
func (m *CatalogSnapshot) XXX_DiscardUnknown() {
	xxx_messageInfo_CatalogSnapshot.DiscardUnknown(m)
}

var xxx_messageInfo_CatalogSnapshot proto.InternalMessageInfo

func (m *CatalogSnapshot) GetCatalogImage() *ImageMessage {
	if m != nil {
		return m.CatalogImage
	}
	return nil
}

func (m *CatalogSnapshot) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *CatalogSnapshot) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

type ProductSnapshot struct {
	ProductImage         *ImageMessage `protobuf:"bytes,1,opt,name=productImage" json:"productImage,omitempty"`
	ProductId            *string       `protobuf:"bytes,2,opt,name=productId" json:"productId,omitempty"`
	Title                *string       `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Description          *string       `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	CurrencyCode         *string       `protobuf:"bytes,5,opt,name=currencyCode" json:"currencyCode,omitempty"`
	PriceAmount1000      *int64        `protobuf:"varint,6,opt,name=priceAmount1000" json:"priceAmount1000,omitempty"`
	RetailerId           *string       `protobuf:"bytes,7,opt,name=retailerId" json:"retailerId,omitempty"`
	Url                  *string       `protobuf:"bytes,8,opt,name=url" json:"url,omitempty"`
	ProductImageCount    *uint32       `protobuf:"varint,9,opt,name=productImageCount" json:"productImageCount,omitempty"`
	FirstImageId         *string       `protobuf:"bytes,11,opt,name=firstImageId" json:"firstImageId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ProductSnapshot) Reset()         { *m = ProductSnapshot{} }
func (m *ProductSnapshot) String() string { return proto.CompactTextString(m) }
func (*ProductSnapshot) ProtoMessage()    {}
func (*ProductSnapshot) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{43}
}
func (m *ProductSnapshot) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProductSnapshot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProductSnapshot.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProductSnapshot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductSnapshot.Merge(m, src)
}
func (m *ProductSnapshot) XXX_Size() int {
	return m.Size()
}
func (m *ProductSnapshot) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductSnapshot.DiscardUnknown(m)
}

var xxx_messageInfo_ProductSnapshot proto.InternalMessageInfo

func (m *ProductSnapshot) GetProductImage() *ImageMessage {
	if m != nil {
		return m.ProductImage
	}
	return nil
}

func (m *ProductSnapshot) GetProductId() string {
	if m != nil && m.ProductId != nil {
		return *m.ProductId
	}
	return ""
}

func (m *ProductSnapshot) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *ProductSnapshot) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *ProductSnapshot) GetCurrencyCode() string {
	if m != nil && m.CurrencyCode != nil {
		return *m.CurrencyCode
	}
	return ""
}

func (m *ProductSnapshot) GetPriceAmount1000() int64 {
	if m != nil && m.PriceAmount1000 != nil {
		return *m.PriceAmount1000
	}
	return 0
}

func (m *ProductSnapshot) GetRetailerId() string {
	if m != nil && m.RetailerId != nil {
		return *m.RetailerId
	}
	return ""
}

func (m *ProductSnapshot) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *ProductSnapshot) GetProductImageCount() uint32 {
	if m != nil && m.ProductImageCount != nil {
		return *m.ProductImageCount
	}
	return 0
}

func (m *ProductSnapshot) GetFirstImageId() string {
	if m != nil && m.FirstImageId != nil {
		return *m.FirstImageId
	}
	return ""
}

type ProductMessage struct {
	Product              *ProductSnapshot `protobuf:"bytes,1,opt,name=product" json:"product,omitempty"`
	BusinessOwnerJid     *string          `protobuf:"bytes,2,opt,name=businessOwnerJid" json:"businessOwnerJid,omitempty"`
	Catalog              *CatalogSnapshot `protobuf:"bytes,4,opt,name=catalog" json:"catalog,omitempty"`
	ContextInfo          *ContextInfo     `protobuf:"bytes,17,opt,name=contextInfo" json:"contextInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ProductMessage) Reset()         { *m = ProductMessage{} }
func (m *ProductMessage) String() string { return proto.CompactTextString(m) }
func (*ProductMessage) ProtoMessage()    {}
func (*ProductMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{44}
}
func (m *ProductMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProductMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProductMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ProductMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductMessage.Merge(m, src)
}
func (m *ProductMessage) XXX_Size() int {
	return m.Size()
}
func (m *ProductMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ProductMessage proto.InternalMessageInfo

func (m *ProductMessage) GetProduct() *ProductSnapshot {
	if m != nil {
		return m.Product
	}
	return nil
}

func (m *ProductMessage) GetBusinessOwnerJid() string {
	if m != nil && m.BusinessOwnerJid != nil {
		return *m.BusinessOwnerJid
	}
	return ""
}

func (m *ProductMessage) GetCatalog() *CatalogSnapshot {
	if m != nil {
		return m.Catalog
	}
	return nil
}

func (m *ProductMessage) GetContextInfo() *ContextInfo {
	if m != nil {
		return m.ContextInfo
	}
	return nil
}

type GroupInviteMessage struct {
	GroupJid             *string      `protobuf:"bytes,1,opt,name=groupJid" json:"groupJid,omitempty"`
	InviteCode           *string      `protobuf:"bytes,2,opt,name=inviteCode" json:"inviteCode,omitempty"`
	InviteExpiration     *int64       `protobuf:"varint,3,opt,name=inviteExpiration" json:"inviteExpiration,omitempty"`
	GroupName            *string      `protobuf:"bytes,4,opt,name=groupName" json:"groupName,omitempty"`
	JpegThumbnail        []byte       `protobuf:"bytes,5,opt,name=jpegThumbnail" json:"jpegThumbnail,omitempty"`
	Caption              *string      `protobuf:"bytes,6,opt,name=caption" json:"caption,omitempty"`
	ContextInfo          *ContextInfo `protobuf:"bytes,7,opt,name=contextInfo" json:"contextInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GroupInviteMessage) Reset()         { *m = GroupInviteMessage{} }
func (m *GroupInviteMessage) String() string { return proto.CompactTextString(m) }
func (*GroupInviteMessage) ProtoMessage()    {}
func (*GroupInviteMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{45}
}
func (m *GroupInviteMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GroupInviteMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GroupInviteMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GroupInviteMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GroupInviteMessage.Merge(m, src)
}
func (m *GroupInviteMessage) XXX_Size() int {
	return m.Size()
}
func (m *GroupInviteMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_GroupInviteMessage.DiscardUnknown(m)
}

var xxx_messageInfo_GroupInviteMessage proto.InternalMessageInfo

func (m *GroupInviteMessage) GetGroupJid() string {
	if m != nil && m.GroupJid != nil {
		return *m.GroupJid
	}
	return ""
}

func (m *GroupInviteMessage) GetInviteCode() string {
	if m != nil && m.InviteCode != nil {
		return *m.InviteCode
	}
	return ""
}

func (m *GroupInviteMessage) GetInviteExpiration() int64 {
	if m != nil && m.InviteExpiration != nil {
		return *m.InviteExpiration
	}
	return 0
}

func (m *GroupInviteMessage) GetGroupName() string {
	if m != nil && m.GroupName != nil {
		return *m.GroupName
	}
	return ""
}

func (m *GroupInviteMessage) GetJpegThumbnail() []byte {
	if m != nil {
		return m.JpegThumbnail
	}
	return nil
}

func (m *GroupInviteMessage) GetCaption() string {
	if m != nil && m.Caption != nil {
		return *m.Caption
	}
	return ""
}

func (m *GroupInviteMessage) GetContextInfo() *ContextInfo {
	if m != nil {
		return m.ContextInfo
	}
	return nil
}

type DeviceSentMessage struct {
	DestinationJid       *string  `protobuf:"bytes,1,opt,name=destinationJid" json:"destinationJid,omitempty"`
	Message              *Message `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceSentMessage) Reset()         { *m = DeviceSentMessage{} }
func (m *DeviceSentMessage) String() string { return proto.CompactTextString(m) }
func (*DeviceSentMessage) ProtoMessage()    {}
func (*DeviceSentMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{46}
}
func (m *DeviceSentMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeviceSentMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeviceSentMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeviceSentMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceSentMessage.Merge(m, src)
}
func (m *DeviceSentMessage) XXX_Size() int {
	return m.Size()
}
func (m *DeviceSentMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceSentMessage.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceSentMessage proto.InternalMessageInfo

func (m *DeviceSentMessage) GetDestinationJid() string {
	if m != nil && m.DestinationJid != nil {
		return *m.DestinationJid
	}
	return ""
}

func (m *DeviceSentMessage) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type DeviceSyncMessage struct {
	SerializedXmlBytes   []byte   `protobuf:"bytes,1,opt,name=serializedXmlBytes" json:"serializedXmlBytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceSyncMessage) Reset()         { *m = DeviceSyncMessage{} }
func (m *DeviceSyncMessage) String() string { return proto.CompactTextString(m) }
func (*DeviceSyncMessage) ProtoMessage()    {}
func (*DeviceSyncMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{47}
}
func (m *DeviceSyncMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeviceSyncMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeviceSyncMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeviceSyncMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceSyncMessage.Merge(m, src)
}
func (m *DeviceSyncMessage) XXX_Size() int {
	return m.Size()
}
func (m *DeviceSyncMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceSyncMessage.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceSyncMessage proto.InternalMessageInfo

func (m *DeviceSyncMessage) GetSerializedXmlBytes() []byte {
	if m != nil {
		return m.SerializedXmlBytes
	}
	return nil
}

type Message struct {
	Conversation                               *string                       `protobuf:"bytes,1,opt,name=conversation" json:"conversation,omitempty"`
	SenderKeyDistributionMessage               *SenderKeyDistributionMessage `protobuf:"bytes,2,opt,name=senderKeyDistributionMessage" json:"senderKeyDistributionMessage,omitempty"`
	ImageMessage                               *ImageMessage                 `protobuf:"bytes,3,opt,name=imageMessage" json:"imageMessage,omitempty"`
	ContactMessage                             *ContactMessage               `protobuf:"bytes,4,opt,name=contactMessage" json:"contactMessage,omitempty"`
	LocationMessage                            *LocationMessage              `protobuf:"bytes,5,opt,name=locationMessage" json:"locationMessage,omitempty"`
	ExtendedTextMessage                        *ExtendedTextMessage          `protobuf:"bytes,6,opt,name=extendedTextMessage" json:"extendedTextMessage,omitempty"`
	DocumentMessage                            *DocumentMessage              `protobuf:"bytes,7,opt,name=documentMessage" json:"documentMessage,omitempty"`
	AudioMessage                               *AudioMessage                 `protobuf:"bytes,8,opt,name=audioMessage" json:"audioMessage,omitempty"`
	VideoMessage                               *VideoMessage                 `protobuf:"bytes,9,opt,name=videoMessage" json:"videoMessage,omitempty"`
	Call                                       *Call                         `protobuf:"bytes,10,opt,name=call" json:"call,omitempty"`
	Chat                                       *Chat                         `protobuf:"bytes,11,opt,name=chat" json:"chat,omitempty"`
	ProtocolMessage                            *ProtocolMessage              `protobuf:"bytes,12,opt,name=protocolMessage" json:"protocolMessage,omitempty"`
	ContactsArrayMessage                       *ContactsArrayMessage         `protobuf:"bytes,13,opt,name=contactsArrayMessage" json:"contactsArrayMessage,omitempty"`
	HighlyStructuredMessage                    *HighlyStructuredMessage      `protobuf:"bytes,14,opt,name=highlyStructuredMessage" json:"highlyStructuredMessage,omitempty"`
	FastRatchetKeySenderKeyDistributionMessage *SenderKeyDistributionMessage `protobuf:"bytes,15,opt,name=fastRatchetKeySenderKeyDistributionMessage" json:"fastRatchetKeySenderKeyDistributionMessage,omitempty"`
	SendPaymentMessage                         *SendPaymentMessage           `protobuf:"bytes,16,opt,name=sendPaymentMessage" json:"sendPaymentMessage,omitempty"`
	LiveLocationMessage                        *LiveLocationMessage          `protobuf:"bytes,18,opt,name=liveLocationMessage" json:"liveLocationMessage,omitempty"`
	RequestPaymentMessage                      *RequestPaymentMessage        `protobuf:"bytes,22,opt,name=requestPaymentMessage" json:"requestPaymentMessage,omitempty"`
	DeclinePaymentRequestMessage               *DeclinePaymentRequestMessage `protobuf:"bytes,23,opt,name=declinePaymentRequestMessage" json:"declinePaymentRequestMessage,omitempty"`
	CancelPaymentRequestMessage                *CancelPaymentRequestMessage  `protobuf:"bytes,24,opt,name=cancelPaymentRequestMessage" json:"cancelPaymentRequestMessage,omitempty"`
	TemplateMessage                            *TemplateMessage              `protobuf:"bytes,25,opt,name=templateMessage" json:"templateMessage,omitempty"`
	StickerMessage                             *StickerMessage               `protobuf:"bytes,26,opt,name=stickerMessage" json:"stickerMessage,omitempty"`
	GroupInviteMessage                         *GroupInviteMessage           `protobuf:"bytes,28,opt,name=groupInviteMessage" json:"groupInviteMessage,omitempty"`
	TemplateButtonReplyMessage                 *TemplateButtonReplyMessage   `protobuf:"bytes,29,opt,name=templateButtonReplyMessage" json:"templateButtonReplyMessage,omitempty"`
	ProductMessage                             *ProductMessage               `protobuf:"bytes,30,opt,name=productMessage" json:"productMessage,omitempty"`
	DeviceSentMessage                          *DeviceSentMessage            `protobuf:"bytes,31,opt,name=deviceSentMessage" json:"deviceSentMessage,omitempty"`
	DeviceSyncMessage                          *DeviceSyncMessage            `protobuf:"bytes,32,opt,name=deviceSyncMessage" json:"deviceSyncMessage,omitempty"`
	XXX_NoUnkeyedLiteral                       struct{}                      `json:"-"`
	XXX_unrecognized                           []byte                        `json:"-"`
	XXX_sizecache                              int32                         `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{48}
}
func (m *Message) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Message.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return m.Size()
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetConversation() string {
	if m != nil && m.Conversation != nil {
		return *m.Conversation
	}
	return ""
}

func (m *Message) GetSenderKeyDistributionMessage() *SenderKeyDistributionMessage {
	if m != nil {
		return m.SenderKeyDistributionMessage
	}
	return nil
}

func (m *Message) GetImageMessage() *ImageMessage {
	if m != nil {
		return m.ImageMessage
	}
	return nil
}

func (m *Message) GetContactMessage() *ContactMessage {
	if m != nil {
		return m.ContactMessage
	}
	return nil
}

func (m *Message) GetLocationMessage() *LocationMessage {
	if m != nil {
		return m.LocationMessage
	}
	return nil
}

func (m *Message) GetExtendedTextMessage() *ExtendedTextMessage {
	if m != nil {
		return m.ExtendedTextMessage
	}
	return nil
}

func (m *Message) GetDocumentMessage() *DocumentMessage {
	if m != nil {
		return m.DocumentMessage
	}
	return nil
}

func (m *Message) GetAudioMessage() *AudioMessage {
	if m != nil {
		return m.AudioMessage
	}
	return nil
}

func (m *Message) GetVideoMessage() *VideoMessage {
	if m != nil {
		return m.VideoMessage
	}
	return nil
}

func (m *Message) GetCall() *Call {
	if m != nil {
		return m.Call
	}
	return nil
}

func (m *Message) GetChat() *Chat {
	if m != nil {
		return m.Chat
	}
	return nil
}

func (m *Message) GetProtocolMessage() *ProtocolMessage {
	if m != nil {
		return m.ProtocolMessage
	}
	return nil
}

func (m *Message) GetContactsArrayMessage() *ContactsArrayMessage {
	if m != nil {
		return m.ContactsArrayMessage
	}
	return nil
}

func (m *Message) GetHighlyStructuredMessage() *HighlyStructuredMessage {
	if m != nil {
		return m.HighlyStructuredMessage
	}
	return nil
}

func (m *Message) GetFastRatchetKeySenderKeyDistributionMessage() *SenderKeyDistributionMessage {
	if m != nil {
		return m.FastRatchetKeySenderKeyDistributionMessage
	}
	return nil
}

func (m *Message) GetSendPaymentMessage() *SendPaymentMessage {
	if m != nil {
		return m.SendPaymentMessage
	}
	return nil
}

func (m *Message) GetLiveLocationMessage() *LiveLocationMessage {
	if m != nil {
		return m.LiveLocationMessage
	}
	return nil
}

func (m *Message) GetRequestPaymentMessage() *RequestPaymentMessage {
	if m != nil {
		return m.RequestPaymentMessage
	}
	return nil
}

func (m *Message) GetDeclinePaymentRequestMessage() *DeclinePaymentRequestMessage {
	if m != nil {
		return m.DeclinePaymentRequestMessage
	}
	return nil
}

func (m *Message) GetCancelPaymentRequestMessage() *CancelPaymentRequestMessage {
	if m != nil {
		return m.CancelPaymentRequestMessage
	}
	return nil
}

func (m *Message) GetTemplateMessage() *TemplateMessage {
	if m != nil {
		return m.TemplateMessage
	}
	return nil
}

func (m *Message) GetStickerMessage() *StickerMessage {
	if m != nil {
		return m.StickerMessage
	}
	return nil
}

func (m *Message) GetGroupInviteMessage() *GroupInviteMessage {
	if m != nil {
		return m.GroupInviteMessage
	}
	return nil
}

func (m *Message) GetTemplateButtonReplyMessage() *TemplateButtonReplyMessage {
	if m != nil {
		return m.TemplateButtonReplyMessage
	}
	return nil
}

func (m *Message) GetProductMessage() *ProductMessage {
	if m != nil {
		return m.ProductMessage
	}
	return nil
}

func (m *Message) GetDeviceSentMessage() *DeviceSentMessage {
	if m != nil {
		return m.DeviceSentMessage
	}
	return nil
}

func (m *Message) GetDeviceSyncMessage() *DeviceSyncMessage {
	if m != nil {
		return m.DeviceSyncMessage
	}
	return nil
}

type MessageKey struct {
	RemoteJid            *string  `protobuf:"bytes,1,opt,name=remoteJid" json:"remoteJid,omitempty"`
	FromMe               *bool    `protobuf:"varint,2,opt,name=fromMe" json:"fromMe,omitempty"`
	Id                   *string  `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	Participant          *string  `protobuf:"bytes,4,opt,name=participant" json:"participant,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageKey) Reset()         { *m = MessageKey{} }
func (m *MessageKey) String() string { return proto.CompactTextString(m) }
func (*MessageKey) ProtoMessage()    {}
func (*MessageKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{49}
}
func (m *MessageKey) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MessageKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MessageKey.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MessageKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageKey.Merge(m, src)
}
func (m *MessageKey) XXX_Size() int {
	return m.Size()
}
func (m *MessageKey) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageKey.DiscardUnknown(m)
}

var xxx_messageInfo_MessageKey proto.InternalMessageInfo

func (m *MessageKey) GetRemoteJid() string {
	if m != nil && m.RemoteJid != nil {
		return *m.RemoteJid
	}
	return ""
}

func (m *MessageKey) GetFromMe() bool {
	if m != nil && m.FromMe != nil {
		return *m.FromMe
	}
	return false
}

func (m *MessageKey) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *MessageKey) GetParticipant() string {
	if m != nil && m.Participant != nil {
		return *m.Participant
	}
	return ""
}

type WebFeatures struct {
	LabelsDisplay                *WebFeatures_WEB_FEATURES_FLAG `protobuf:"varint,1,opt,name=labelsDisplay,enum=proto.WebFeatures_WEB_FEATURES_FLAG" json:"labelsDisplay,omitempty"`
	VoipIndividualOutgoing       *WebFeatures_WEB_FEATURES_FLAG `protobuf:"varint,2,opt,name=voipIndividualOutgoing,enum=proto.WebFeatures_WEB_FEATURES_FLAG" json:"voipIndividualOutgoing,omitempty"`
	GroupsV3                     *WebFeatures_WEB_FEATURES_FLAG `protobuf:"varint,3,opt,name=groupsV3,enum=proto.WebFeatures_WEB_FEATURES_FLAG" json:"groupsV3,omitempty"`
	GroupsV3Create               *WebFeatures_WEB_FEATURES_FLAG `protobuf:"varint,4,opt,name=groupsV3Create,enum=proto.WebFeatures_WEB_FEATURES_FLAG" json:"groupsV3Create,omitempty"`
	ChangeNumberV2               *WebFeatures_WEB_FEATURES_FLAG `protobuf:"varint,5,opt,name=changeNumberV2,enum=proto.WebFeatures_WEB_FEATURES_FLAG" json:"changeNumberV2,omitempty"`
	QueryStatusV3Thumbnail       *WebFeatures_WEB_FEATURES_FLAG `protobuf:"varint,6,opt,name=queryStatusV3Thumbnail,enum=proto.WebFeatures_WEB_FEATURES_FLAG" json:"queryStatusV3Thumbnail,omitempty"`
	LiveLocations                *WebFeatures_WEB_FEATURES_FLAG `protobuf:"varint,7,opt,name=liveLocations,enum=proto.WebFeatures_WEB_FEATURES_FLAG" json:"liveLocations,omitempty"`
	QueryVname                   *WebFeatures_WEB_FEATURES_FLAG `protobuf:"varint,8,opt,name=queryVname,enum=proto.WebFeatures_WEB_FEATURES_FLAG" json:"queryVname,omitempty"`
	VoipIndividualIncoming       *WebFeatures_WEB_FEATURES_FLAG `protobuf:"varint,9,opt,name=voipIndividualIncoming,enum=proto.WebFeatures_WEB_FEATURES_FLAG" json:"voipIndividualIncoming,omitempty"`
	QuickRepliesQuery            *WebFeatures_WEB_FEATURES_FLAG `protobuf:"varint,10,opt,name=quickRepliesQuery,enum=proto.WebFeatures_WEB_FEATURES_FLAG" json:"quickRepliesQuery,omitempty"`
	Payments                     *WebFeatures_WEB_FEATURES_FLAG `protobuf:"varint,11,opt,name=payments,enum=proto.WebFeatures_WEB_FEATURES_FLAG" json:"payments,omitempty"`
	StickerPackQuery             *WebFeatures_WEB_FEATURES_FLAG `protobuf:"varint,12,opt,name=stickerPackQuery,enum=proto.WebFeatures_WEB_FEATURES_FLAG" json:"stickerPackQuery,omitempty"`
	LiveLocationsFinal           *WebFeatures_WEB_FEATURES_FLAG `protobuf:"varint,13,opt,name=liveLocationsFinal,enum=proto.WebFeatures_WEB_FEATURES_FLAG" json:"liveLocationsFinal,omitempty"`
	LabelsEdit                   *WebFeatures_WEB_FEATURES_FLAG `protobuf:"varint,14,opt,name=labelsEdit,enum=proto.WebFeatures_WEB_FEATURES_FLAG" json:"labelsEdit,omitempty"`
	MediaUpload                  *WebFeatures_WEB_FEATURES_FLAG `protobuf:"varint,15,opt,name=mediaUpload,enum=proto.WebFeatures_WEB_FEATURES_FLAG" json:"mediaUpload,omitempty"`
	MediaUploadRichQuickReplies  *WebFeatures_WEB_FEATURES_FLAG `protobuf:"varint,18,opt,name=mediaUploadRichQuickReplies,enum=proto.WebFeatures_WEB_FEATURES_FLAG" json:"mediaUploadRichQuickReplies,omitempty"`
	VnameV2                      *WebFeatures_WEB_FEATURES_FLAG `protobuf:"varint,19,opt,name=vnameV2,enum=proto.WebFeatures_WEB_FEATURES_FLAG" json:"vnameV2,omitempty"`
	VideoPlaybackUrl             *WebFeatures_WEB_FEATURES_FLAG `protobuf:"varint,20,opt,name=videoPlaybackUrl,enum=proto.WebFeatures_WEB_FEATURES_FLAG" json:"videoPlaybackUrl,omitempty"`
	StatusRanking                *WebFeatures_WEB_FEATURES_FLAG `protobuf:"varint,21,opt,name=statusRanking,enum=proto.WebFeatures_WEB_FEATURES_FLAG" json:"statusRanking,omitempty"`
	VoipIndividualVideo          *WebFeatures_WEB_FEATURES_FLAG `protobuf:"varint,22,opt,name=voipIndividualVideo,enum=proto.WebFeatures_WEB_FEATURES_FLAG" json:"voipIndividualVideo,omitempty"`
	ThirdPartyStickers           *WebFeatures_WEB_FEATURES_FLAG `protobuf:"varint,23,opt,name=thirdPartyStickers,enum=proto.WebFeatures_WEB_FEATURES_FLAG" json:"thirdPartyStickers,omitempty"`
	FrequentlyForwardedSetting   *WebFeatures_WEB_FEATURES_FLAG `protobuf:"varint,24,opt,name=frequentlyForwardedSetting,enum=proto.WebFeatures_WEB_FEATURES_FLAG" json:"frequentlyForwardedSetting,omitempty"`
	GroupsV4JoinPermission       *WebFeatures_WEB_FEATURES_FLAG `protobuf:"varint,25,opt,name=groupsV4JoinPermission,enum=proto.WebFeatures_WEB_FEATURES_FLAG" json:"groupsV4JoinPermission,omitempty"`
	RecentStickers               *WebFeatures_WEB_FEATURES_FLAG `protobuf:"varint,26,opt,name=recentStickers,enum=proto.WebFeatures_WEB_FEATURES_FLAG" json:"recentStickers,omitempty"`
	Catalog                      *WebFeatures_WEB_FEATURES_FLAG `protobuf:"varint,27,opt,name=catalog,enum=proto.WebFeatures_WEB_FEATURES_FLAG" json:"catalog,omitempty"`
	StarredStickers              *WebFeatures_WEB_FEATURES_FLAG `protobuf:"varint,28,opt,name=starredStickers,enum=proto.WebFeatures_WEB_FEATURES_FLAG" json:"starredStickers,omitempty"`
	VoipGroupCall                *WebFeatures_WEB_FEATURES_FLAG `protobuf:"varint,29,opt,name=voipGroupCall,enum=proto.WebFeatures_WEB_FEATURES_FLAG" json:"voipGroupCall,omitempty"`
	TemplateMessage              *WebFeatures_WEB_FEATURES_FLAG `protobuf:"varint,30,opt,name=templateMessage,enum=proto.WebFeatures_WEB_FEATURES_FLAG" json:"templateMessage,omitempty"`
	TemplateMessageInteractivity *WebFeatures_WEB_FEATURES_FLAG `protobuf:"varint,31,opt,name=templateMessageInteractivity,enum=proto.WebFeatures_WEB_FEATURES_FLAG" json:"templateMessageInteractivity,omitempty"`
	EphemeralMessages            *WebFeatures_WEB_FEATURES_FLAG `protobuf:"varint,32,opt,name=ephemeralMessages,enum=proto.WebFeatures_WEB_FEATURES_FLAG" json:"ephemeralMessages,omitempty"`
	E2ENotificationSync          *WebFeatures_WEB_FEATURES_FLAG `protobuf:"varint,33,opt,name=e2ENotificationSync,enum=proto.WebFeatures_WEB_FEATURES_FLAG" json:"e2ENotificationSync,omitempty"`
	RecentStickersV2             *WebFeatures_WEB_FEATURES_FLAG `protobuf:"varint,34,opt,name=recentStickersV2,enum=proto.WebFeatures_WEB_FEATURES_FLAG" json:"recentStickersV2,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}                       `json:"-"`
	XXX_unrecognized             []byte                         `json:"-"`
	XXX_sizecache                int32                          `json:"-"`
}

func (m *WebFeatures) Reset()         { *m = WebFeatures{} }
func (m *WebFeatures) String() string { return proto.CompactTextString(m) }
func (*WebFeatures) ProtoMessage()    {}
func (*WebFeatures) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{50}
}
func (m *WebFeatures) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WebFeatures) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WebFeatures.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WebFeatures) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebFeatures.Merge(m, src)
}
func (m *WebFeatures) XXX_Size() int {
	return m.Size()
}
func (m *WebFeatures) XXX_DiscardUnknown() {
	xxx_messageInfo_WebFeatures.DiscardUnknown(m)
}

var xxx_messageInfo_WebFeatures proto.InternalMessageInfo

func (m *WebFeatures) GetLabelsDisplay() WebFeatures_WEB_FEATURES_FLAG {
	if m != nil && m.LabelsDisplay != nil {
		return *m.LabelsDisplay
	}
	return WebFeatures_NOT_STARTED
}

func (m *WebFeatures) GetVoipIndividualOutgoing() WebFeatures_WEB_FEATURES_FLAG {
	if m != nil && m.VoipIndividualOutgoing != nil {
		return *m.VoipIndividualOutgoing
	}
	return WebFeatures_NOT_STARTED
}

func (m *WebFeatures) GetGroupsV3() WebFeatures_WEB_FEATURES_FLAG {
	if m != nil && m.GroupsV3 != nil {
		return *m.GroupsV3
	}
	return WebFeatures_NOT_STARTED
}

func (m *WebFeatures) GetGroupsV3Create() WebFeatures_WEB_FEATURES_FLAG {
	if m != nil && m.GroupsV3Create != nil {
		return *m.GroupsV3Create
	}
	return WebFeatures_NOT_STARTED
}

func (m *WebFeatures) GetChangeNumberV2() WebFeatures_WEB_FEATURES_FLAG {
	if m != nil && m.ChangeNumberV2 != nil {
		return *m.ChangeNumberV2
	}
	return WebFeatures_NOT_STARTED
}

func (m *WebFeatures) GetQueryStatusV3Thumbnail() WebFeatures_WEB_FEATURES_FLAG {
	if m != nil && m.QueryStatusV3Thumbnail != nil {
		return *m.QueryStatusV3Thumbnail
	}
	return WebFeatures_NOT_STARTED
}

func (m *WebFeatures) GetLiveLocations() WebFeatures_WEB_FEATURES_FLAG {
	if m != nil && m.LiveLocations != nil {
		return *m.LiveLocations
	}
	return WebFeatures_NOT_STARTED
}

func (m *WebFeatures) GetQueryVname() WebFeatures_WEB_FEATURES_FLAG {
	if m != nil && m.QueryVname != nil {
		return *m.QueryVname
	}
	return WebFeatures_NOT_STARTED
}

func (m *WebFeatures) GetVoipIndividualIncoming() WebFeatures_WEB_FEATURES_FLAG {
	if m != nil && m.VoipIndividualIncoming != nil {
		return *m.VoipIndividualIncoming
	}
	return WebFeatures_NOT_STARTED
}

func (m *WebFeatures) GetQuickRepliesQuery() WebFeatures_WEB_FEATURES_FLAG {
	if m != nil && m.QuickRepliesQuery != nil {
		return *m.QuickRepliesQuery
	}
	return WebFeatures_NOT_STARTED
}

func (m *WebFeatures) GetPayments() WebFeatures_WEB_FEATURES_FLAG {
	if m != nil && m.Payments != nil {
		return *m.Payments
	}
	return WebFeatures_NOT_STARTED
}

func (m *WebFeatures) GetStickerPackQuery() WebFeatures_WEB_FEATURES_FLAG {
	if m != nil && m.StickerPackQuery != nil {
		return *m.StickerPackQuery
	}
	return WebFeatures_NOT_STARTED
}

func (m *WebFeatures) GetLiveLocationsFinal() WebFeatures_WEB_FEATURES_FLAG {
	if m != nil && m.LiveLocationsFinal != nil {
		return *m.LiveLocationsFinal
	}
	return WebFeatures_NOT_STARTED
}

func (m *WebFeatures) GetLabelsEdit() WebFeatures_WEB_FEATURES_FLAG {
	if m != nil && m.LabelsEdit != nil {
		return *m.LabelsEdit
	}
	return WebFeatures_NOT_STARTED
}

func (m *WebFeatures) GetMediaUpload() WebFeatures_WEB_FEATURES_FLAG {
	if m != nil && m.MediaUpload != nil {
		return *m.MediaUpload
	}
	return WebFeatures_NOT_STARTED
}

func (m *WebFeatures) GetMediaUploadRichQuickReplies() WebFeatures_WEB_FEATURES_FLAG {
	if m != nil && m.MediaUploadRichQuickReplies != nil {
		return *m.MediaUploadRichQuickReplies
	}
	return WebFeatures_NOT_STARTED
}

func (m *WebFeatures) GetVnameV2() WebFeatures_WEB_FEATURES_FLAG {
	if m != nil && m.VnameV2 != nil {
		return *m.VnameV2
	}
	return WebFeatures_NOT_STARTED
}

func (m *WebFeatures) GetVideoPlaybackUrl() WebFeatures_WEB_FEATURES_FLAG {
	if m != nil && m.VideoPlaybackUrl != nil {
		return *m.VideoPlaybackUrl
	}
	return WebFeatures_NOT_STARTED
}

func (m *WebFeatures) GetStatusRanking() WebFeatures_WEB_FEATURES_FLAG {
	if m != nil && m.StatusRanking != nil {
		return *m.StatusRanking
	}
	return WebFeatures_NOT_STARTED
}

func (m *WebFeatures) GetVoipIndividualVideo() WebFeatures_WEB_FEATURES_FLAG {
	if m != nil && m.VoipIndividualVideo != nil {
		return *m.VoipIndividualVideo
	}
	return WebFeatures_NOT_STARTED
}

func (m *WebFeatures) GetThirdPartyStickers() WebFeatures_WEB_FEATURES_FLAG {
	if m != nil && m.ThirdPartyStickers != nil {
		return *m.ThirdPartyStickers
	}
	return WebFeatures_NOT_STARTED
}

func (m *WebFeatures) GetFrequentlyForwardedSetting() WebFeatures_WEB_FEATURES_FLAG {
	if m != nil && m.FrequentlyForwardedSetting != nil {
		return *m.FrequentlyForwardedSetting
	}
	return WebFeatures_NOT_STARTED
}

func (m *WebFeatures) GetGroupsV4JoinPermission() WebFeatures_WEB_FEATURES_FLAG {
	if m != nil && m.GroupsV4JoinPermission != nil {
		return *m.GroupsV4JoinPermission
	}
	return WebFeatures_NOT_STARTED
}

func (m *WebFeatures) GetRecentStickers() WebFeatures_WEB_FEATURES_FLAG {
	if m != nil && m.RecentStickers != nil {
		return *m.RecentStickers
	}
	return WebFeatures_NOT_STARTED
}

func (m *WebFeatures) GetCatalog() WebFeatures_WEB_FEATURES_FLAG {
	if m != nil && m.Catalog != nil {
		return *m.Catalog
	}
	return WebFeatures_NOT_STARTED
}

func (m *WebFeatures) GetStarredStickers() WebFeatures_WEB_FEATURES_FLAG {
	if m != nil && m.StarredStickers != nil {
		return *m.StarredStickers
	}
	return WebFeatures_NOT_STARTED
}

func (m *WebFeatures) GetVoipGroupCall() WebFeatures_WEB_FEATURES_FLAG {
	if m != nil && m.VoipGroupCall != nil {
		return *m.VoipGroupCall
	}
	return WebFeatures_NOT_STARTED
}

func (m *WebFeatures) GetTemplateMessage() WebFeatures_WEB_FEATURES_FLAG {
	if m != nil && m.TemplateMessage != nil {
		return *m.TemplateMessage
	}
	return WebFeatures_NOT_STARTED
}

func (m *WebFeatures) GetTemplateMessageInteractivity() WebFeatures_WEB_FEATURES_FLAG {
	if m != nil && m.TemplateMessageInteractivity != nil {
		return *m.TemplateMessageInteractivity
	}
	return WebFeatures_NOT_STARTED
}

func (m *WebFeatures) GetEphemeralMessages() WebFeatures_WEB_FEATURES_FLAG {
	if m != nil && m.EphemeralMessages != nil {
		return *m.EphemeralMessages
	}
	return WebFeatures_NOT_STARTED
}

func (m *WebFeatures) GetE2ENotificationSync() WebFeatures_WEB_FEATURES_FLAG {
	if m != nil && m.E2ENotificationSync != nil {
		return *m.E2ENotificationSync
	}
	return WebFeatures_NOT_STARTED
}

func (m *WebFeatures) GetRecentStickersV2() WebFeatures_WEB_FEATURES_FLAG {
	if m != nil && m.RecentStickersV2 != nil {
		return *m.RecentStickersV2
	}
	return WebFeatures_NOT_STARTED
}

type TabletNotificationsInfo struct {
	Timestamp            *uint64                    `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	UnreadChats          *uint32                    `protobuf:"varint,3,opt,name=unreadChats" json:"unreadChats,omitempty"`
	NotifyMessageCount   *uint32                    `protobuf:"varint,4,opt,name=notifyMessageCount" json:"notifyMessageCount,omitempty"`
	NotifyMessage        []*NotificationMessageInfo `protobuf:"bytes,5,rep,name=notifyMessage" json:"notifyMessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *TabletNotificationsInfo) Reset()         { *m = TabletNotificationsInfo{} }
func (m *TabletNotificationsInfo) String() string { return proto.CompactTextString(m) }
func (*TabletNotificationsInfo) ProtoMessage()    {}
func (*TabletNotificationsInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{51}
}
func (m *TabletNotificationsInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TabletNotificationsInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TabletNotificationsInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TabletNotificationsInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TabletNotificationsInfo.Merge(m, src)
}
func (m *TabletNotificationsInfo) XXX_Size() int {
	return m.Size()
}
func (m *TabletNotificationsInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TabletNotificationsInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TabletNotificationsInfo proto.InternalMessageInfo

func (m *TabletNotificationsInfo) GetTimestamp() uint64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *TabletNotificationsInfo) GetUnreadChats() uint32 {
	if m != nil && m.UnreadChats != nil {
		return *m.UnreadChats
	}
	return 0
}

func (m *TabletNotificationsInfo) GetNotifyMessageCount() uint32 {
	if m != nil && m.NotifyMessageCount != nil {
		return *m.NotifyMessageCount
	}
	return 0
}

func (m *TabletNotificationsInfo) GetNotifyMessage() []*NotificationMessageInfo {
	if m != nil {
		return m.NotifyMessage
	}
	return nil
}

type NotificationMessageInfo struct {
	Key                  *MessageKey `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Message              *Message    `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	MessageTimestamp     *uint64     `protobuf:"varint,3,opt,name=messageTimestamp" json:"messageTimestamp,omitempty"`
	Participant          *string     `protobuf:"bytes,4,opt,name=participant" json:"participant,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *NotificationMessageInfo) Reset()         { *m = NotificationMessageInfo{} }
func (m *NotificationMessageInfo) String() string { return proto.CompactTextString(m) }
func (*NotificationMessageInfo) ProtoMessage()    {}
func (*NotificationMessageInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{52}
}
func (m *NotificationMessageInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *NotificationMessageInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_NotificationMessageInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *NotificationMessageInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NotificationMessageInfo.Merge(m, src)
}
func (m *NotificationMessageInfo) XXX_Size() int {
	return m.Size()
}
func (m *NotificationMessageInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_NotificationMessageInfo.DiscardUnknown(m)
}

var xxx_messageInfo_NotificationMessageInfo proto.InternalMessageInfo

func (m *NotificationMessageInfo) GetKey() *MessageKey {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *NotificationMessageInfo) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *NotificationMessageInfo) GetMessageTimestamp() uint64 {
	if m != nil && m.MessageTimestamp != nil {
		return *m.MessageTimestamp
	}
	return 0
}

func (m *NotificationMessageInfo) GetParticipant() string {
	if m != nil && m.Participant != nil {
		return *m.Participant
	}
	return ""
}

type WebNotificationsInfo struct {
	Timestamp            *uint64           `protobuf:"varint,2,opt,name=timestamp" json:"timestamp,omitempty"`
	UnreadChats          *uint32           `protobuf:"varint,3,opt,name=unreadChats" json:"unreadChats,omitempty"`
	NotifyMessageCount   *uint32           `protobuf:"varint,4,opt,name=notifyMessageCount" json:"notifyMessageCount,omitempty"`
	NotifyMessages       []*WebMessageInfo `protobuf:"bytes,5,rep,name=notifyMessages" json:"notifyMessages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *WebNotificationsInfo) Reset()         { *m = WebNotificationsInfo{} }
func (m *WebNotificationsInfo) String() string { return proto.CompactTextString(m) }
func (*WebNotificationsInfo) ProtoMessage()    {}
func (*WebNotificationsInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{53}
}
func (m *WebNotificationsInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WebNotificationsInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WebNotificationsInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WebNotificationsInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebNotificationsInfo.Merge(m, src)
}
func (m *WebNotificationsInfo) XXX_Size() int {
	return m.Size()
}
func (m *WebNotificationsInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_WebNotificationsInfo.DiscardUnknown(m)
}

var xxx_messageInfo_WebNotificationsInfo proto.InternalMessageInfo

func (m *WebNotificationsInfo) GetTimestamp() uint64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *WebNotificationsInfo) GetUnreadChats() uint32 {
	if m != nil && m.UnreadChats != nil {
		return *m.UnreadChats
	}
	return 0
}

func (m *WebNotificationsInfo) GetNotifyMessageCount() uint32 {
	if m != nil && m.NotifyMessageCount != nil {
		return *m.NotifyMessageCount
	}
	return 0
}

func (m *WebNotificationsInfo) GetNotifyMessages() []*WebMessageInfo {
	if m != nil {
		return m.NotifyMessages
	}
	return nil
}

type PaymentInfo struct {
	CurrencyDeprecated   *PaymentInfo_PAYMENT_INFO_CURRENCY  `protobuf:"varint,1,opt,name=currencyDeprecated,enum=proto.PaymentInfo_PAYMENT_INFO_CURRENCY" json:"currencyDeprecated,omitempty"`
	Amount1000           *uint64                             `protobuf:"varint,2,opt,name=amount1000" json:"amount1000,omitempty"`
	ReceiverJid          *string                             `protobuf:"bytes,3,opt,name=receiverJid" json:"receiverJid,omitempty"`
	Status               *PaymentInfo_PAYMENT_INFO_STATUS    `protobuf:"varint,4,opt,name=status,enum=proto.PaymentInfo_PAYMENT_INFO_STATUS" json:"status,omitempty"`
	TransactionTimestamp *uint64                             `protobuf:"varint,5,opt,name=transactionTimestamp" json:"transactionTimestamp,omitempty"`
	RequestMessageKey    *MessageKey                         `protobuf:"bytes,6,opt,name=requestMessageKey" json:"requestMessageKey,omitempty"`
	ExpiryTimestamp      *uint64                             `protobuf:"varint,7,opt,name=expiryTimestamp" json:"expiryTimestamp,omitempty"`
	Futureproofed        *bool                               `protobuf:"varint,8,opt,name=futureproofed" json:"futureproofed,omitempty"`
	Currency             *string                             `protobuf:"bytes,9,opt,name=currency" json:"currency,omitempty"`
	TxnStatus            *PaymentInfo_PAYMENT_INFO_TXNSTATUS `protobuf:"varint,10,opt,name=txnStatus,enum=proto.PaymentInfo_PAYMENT_INFO_TXNSTATUS" json:"txnStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                            `json:"-"`
	XXX_unrecognized     []byte                              `json:"-"`
	XXX_sizecache        int32                               `json:"-"`
}

func (m *PaymentInfo) Reset()         { *m = PaymentInfo{} }
func (m *PaymentInfo) String() string { return proto.CompactTextString(m) }
func (*PaymentInfo) ProtoMessage()    {}
func (*PaymentInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{54}
}
func (m *PaymentInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PaymentInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PaymentInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PaymentInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentInfo.Merge(m, src)
}
func (m *PaymentInfo) XXX_Size() int {
	return m.Size()
}
func (m *PaymentInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentInfo proto.InternalMessageInfo

func (m *PaymentInfo) GetCurrencyDeprecated() PaymentInfo_PAYMENT_INFO_CURRENCY {
	if m != nil && m.CurrencyDeprecated != nil {
		return *m.CurrencyDeprecated
	}
	return PaymentInfo_UNKNOWN_CURRENCY
}

func (m *PaymentInfo) GetAmount1000() uint64 {
	if m != nil && m.Amount1000 != nil {
		return *m.Amount1000
	}
	return 0
}

func (m *PaymentInfo) GetReceiverJid() string {
	if m != nil && m.ReceiverJid != nil {
		return *m.ReceiverJid
	}
	return ""
}

func (m *PaymentInfo) GetStatus() PaymentInfo_PAYMENT_INFO_STATUS {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return PaymentInfo_UNKNOWN_STATUS
}

func (m *PaymentInfo) GetTransactionTimestamp() uint64 {
	if m != nil && m.TransactionTimestamp != nil {
		return *m.TransactionTimestamp
	}
	return 0
}

func (m *PaymentInfo) GetRequestMessageKey() *MessageKey {
	if m != nil {
		return m.RequestMessageKey
	}
	return nil
}

func (m *PaymentInfo) GetExpiryTimestamp() uint64 {
	if m != nil && m.ExpiryTimestamp != nil {
		return *m.ExpiryTimestamp
	}
	return 0
}

func (m *PaymentInfo) GetFutureproofed() bool {
	if m != nil && m.Futureproofed != nil {
		return *m.Futureproofed
	}
	return false
}

func (m *PaymentInfo) GetCurrency() string {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return ""
}

func (m *PaymentInfo) GetTxnStatus() PaymentInfo_PAYMENT_INFO_TXNSTATUS {
	if m != nil && m.TxnStatus != nil {
		return *m.TxnStatus
	}
	return PaymentInfo_UNKNOWN
}

type WebMessageInfo struct {
	Key                     *MessageKey                               `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Message                 *Message                                  `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	MessageTimestamp        *uint64                                   `protobuf:"varint,3,opt,name=messageTimestamp" json:"messageTimestamp,omitempty"`
	Status                  *WebMessageInfo_WEB_MESSAGE_INFO_STATUS   `protobuf:"varint,4,opt,name=status,enum=proto.WebMessageInfo_WEB_MESSAGE_INFO_STATUS" json:"status,omitempty"`
	Participant             *string                                   `protobuf:"bytes,5,opt,name=participant" json:"participant,omitempty"`
	Ignore                  *bool                                     `protobuf:"varint,16,opt,name=ignore" json:"ignore,omitempty"`
	Starred                 *bool                                     `protobuf:"varint,17,opt,name=starred" json:"starred,omitempty"`
	Broadcast               *bool                                     `protobuf:"varint,18,opt,name=broadcast" json:"broadcast,omitempty"`
	PushName                *string                                   `protobuf:"bytes,19,opt,name=pushName" json:"pushName,omitempty"`
	MediaCiphertextSha256   []byte                                    `protobuf:"bytes,20,opt,name=mediaCiphertextSha256" json:"mediaCiphertextSha256,omitempty"`
	Multicast               *bool                                     `protobuf:"varint,21,opt,name=multicast" json:"multicast,omitempty"`
	UrlText                 *bool                                     `protobuf:"varint,22,opt,name=urlText" json:"urlText,omitempty"`
	UrlNumber               *bool                                     `protobuf:"varint,23,opt,name=urlNumber" json:"urlNumber,omitempty"`
	MessageStubType         *WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE `protobuf:"varint,24,opt,name=messageStubType,enum=proto.WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE" json:"messageStubType,omitempty"`
	ClearMedia              *bool                                     `protobuf:"varint,25,opt,name=clearMedia" json:"clearMedia,omitempty"`
	MessageStubParameters   []string                                  `protobuf:"bytes,26,rep,name=messageStubParameters" json:"messageStubParameters,omitempty"`
	Duration                *uint32                                   `protobuf:"varint,27,opt,name=duration" json:"duration,omitempty"`
	Labels                  []string                                  `protobuf:"bytes,28,rep,name=labels" json:"labels,omitempty"`
	PaymentInfo             *PaymentInfo                              `protobuf:"bytes,29,opt,name=paymentInfo" json:"paymentInfo,omitempty"`
	FinalLiveLocation       *LiveLocationMessage                      `protobuf:"bytes,30,opt,name=finalLiveLocation" json:"finalLiveLocation,omitempty"`
	QuotedPaymentInfo       *PaymentInfo                              `protobuf:"bytes,31,opt,name=quotedPaymentInfo" json:"quotedPaymentInfo,omitempty"`
	EphemeralStartTimestamp *uint64                                   `protobuf:"varint,32,opt,name=ephemeralStartTimestamp" json:"ephemeralStartTimestamp,omitempty"`
	EphemeralDuration       *uint32                                   `protobuf:"varint,33,opt,name=ephemeralDuration" json:"ephemeralDuration,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                                  `json:"-"`
	XXX_unrecognized        []byte                                    `json:"-"`
	XXX_sizecache           int32                                     `json:"-"`
}

func (m *WebMessageInfo) Reset()         { *m = WebMessageInfo{} }
func (m *WebMessageInfo) String() string { return proto.CompactTextString(m) }
func (*WebMessageInfo) ProtoMessage()    {}
func (*WebMessageInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_76fb0470a3b910d8, []int{55}
}
func (m *WebMessageInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *WebMessageInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_WebMessageInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *WebMessageInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebMessageInfo.Merge(m, src)
}
func (m *WebMessageInfo) XXX_Size() int {
	return m.Size()
}
func (m *WebMessageInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_WebMessageInfo.DiscardUnknown(m)
}

var xxx_messageInfo_WebMessageInfo proto.InternalMessageInfo

func (m *WebMessageInfo) GetKey() *MessageKey {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *WebMessageInfo) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *WebMessageInfo) GetMessageTimestamp() uint64 {
	if m != nil && m.MessageTimestamp != nil {
		return *m.MessageTimestamp
	}
	return 0
}

func (m *WebMessageInfo) GetStatus() WebMessageInfo_WEB_MESSAGE_INFO_STATUS {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return WebMessageInfo_ERROR
}

func (m *WebMessageInfo) GetParticipant() string {
	if m != nil && m.Participant != nil {
		return *m.Participant
	}
	return ""
}

func (m *WebMessageInfo) GetIgnore() bool {
	if m != nil && m.Ignore != nil {
		return *m.Ignore
	}
	return false
}

func (m *WebMessageInfo) GetStarred() bool {
	if m != nil && m.Starred != nil {
		return *m.Starred
	}
	return false
}

func (m *WebMessageInfo) GetBroadcast() bool {
	if m != nil && m.Broadcast != nil {
		return *m.Broadcast
	}
	return false
}

func (m *WebMessageInfo) GetPushName() string {
	if m != nil && m.PushName != nil {
		return *m.PushName
	}
	return ""
}

func (m *WebMessageInfo) GetMediaCiphertextSha256() []byte {
	if m != nil {
		return m.MediaCiphertextSha256
	}
	return nil
}

func (m *WebMessageInfo) GetMulticast() bool {
	if m != nil && m.Multicast != nil {
		return *m.Multicast
	}
	return false
}

func (m *WebMessageInfo) GetUrlText() bool {
	if m != nil && m.UrlText != nil {
		return *m.UrlText
	}
	return false
}

func (m *WebMessageInfo) GetUrlNumber() bool {
	if m != nil && m.UrlNumber != nil {
		return *m.UrlNumber
	}
	return false
}

func (m *WebMessageInfo) GetMessageStubType() WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE {
	if m != nil && m.MessageStubType != nil {
		return *m.MessageStubType
	}
	return WebMessageInfo_UNKNOWN
}

func (m *WebMessageInfo) GetClearMedia() bool {
	if m != nil && m.ClearMedia != nil {
		return *m.ClearMedia
	}
	return false
}

func (m *WebMessageInfo) GetMessageStubParameters() []string {
	if m != nil {
		return m.MessageStubParameters
	}
	return nil
}

func (m *WebMessageInfo) GetDuration() uint32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *WebMessageInfo) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *WebMessageInfo) GetPaymentInfo() *PaymentInfo {
	if m != nil {
		return m.PaymentInfo
	}
	return nil
}

func (m *WebMessageInfo) GetFinalLiveLocation() *LiveLocationMessage {
	if m != nil {
		return m.FinalLiveLocation
	}
	return nil
}

func (m *WebMessageInfo) GetQuotedPaymentInfo() *PaymentInfo {
	if m != nil {
		return m.QuotedPaymentInfo
	}
	return nil
}

func (m *WebMessageInfo) GetEphemeralStartTimestamp() uint64 {
	if m != nil && m.EphemeralStartTimestamp != nil {
		return *m.EphemeralStartTimestamp
	}
	return 0
}

func (m *WebMessageInfo) GetEphemeralDuration() uint32 {
	if m != nil && m.EphemeralDuration != nil {
		return *m.EphemeralDuration
	}
	return 0
}

func init() {
	proto.RegisterEnum("proto.AdReplyInfo_AD_REPLY_INFO_MEDIATYPE", AdReplyInfo_AD_REPLY_INFO_MEDIATYPE_name, AdReplyInfo_AD_REPLY_INFO_MEDIATYPE_value)
	proto.RegisterEnum("proto.ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_FONTTYPE", ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_FONTTYPE_name, ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_FONTTYPE_value)
	proto.RegisterEnum("proto.ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_PREVIEWTYPE", ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_PREVIEWTYPE_name, ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_PREVIEWTYPE_value)
	proto.RegisterEnum("proto.VideoMessage_VIDEO_MESSAGE_ATTRIBUTION", VideoMessage_VIDEO_MESSAGE_ATTRIBUTION_name, VideoMessage_VIDEO_MESSAGE_ATTRIBUTION_value)
	proto.RegisterEnum("proto.ProtocolMessage_PROTOCOL_MESSAGE_TYPE", ProtocolMessage_PROTOCOL_MESSAGE_TYPE_name, ProtocolMessage_PROTOCOL_MESSAGE_TYPE_value)
	proto.RegisterEnum("proto.HistorySyncNotification_HISTORY_SYNC_NOTIFICATION_HISTORYSYNCTYPE", HistorySyncNotification_HISTORY_SYNC_NOTIFICATION_HISTORYSYNCTYPE_name, HistorySyncNotification_HISTORY_SYNC_NOTIFICATION_HISTORYSYNCTYPE_value)
	proto.RegisterEnum("proto.HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_DAYOFWEEKTYPE", HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_DAYOFWEEKTYPE_name, HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_DAYOFWEEKTYPE_value)
	proto.RegisterEnum("proto.HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_CALENDARTYPE", HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_CALENDARTYPE_name, HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_CALENDARTYPE_value)
	proto.RegisterEnum("proto.WebFeatures_WEB_FEATURES_FLAG", WebFeatures_WEB_FEATURES_FLAG_name, WebFeatures_WEB_FEATURES_FLAG_value)
	proto.RegisterEnum("proto.PaymentInfo_PAYMENT_INFO_CURRENCY", PaymentInfo_PAYMENT_INFO_CURRENCY_name, PaymentInfo_PAYMENT_INFO_CURRENCY_value)
	proto.RegisterEnum("proto.PaymentInfo_PAYMENT_INFO_STATUS", PaymentInfo_PAYMENT_INFO_STATUS_name, PaymentInfo_PAYMENT_INFO_STATUS_value)
	proto.RegisterEnum("proto.PaymentInfo_PAYMENT_INFO_TXNSTATUS", PaymentInfo_PAYMENT_INFO_TXNSTATUS_name, PaymentInfo_PAYMENT_INFO_TXNSTATUS_value)
	proto.RegisterEnum("proto.WebMessageInfo_WEB_MESSAGE_INFO_STATUS", WebMessageInfo_WEB_MESSAGE_INFO_STATUS_name, WebMessageInfo_WEB_MESSAGE_INFO_STATUS_value)
	proto.RegisterEnum("proto.WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE", WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE_name, WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE_value)
	proto.RegisterType((*HydratedQuickReplyButton)(nil), "proto.HydratedQuickReplyButton")
	proto.RegisterType((*HydratedURLButton)(nil), "proto.HydratedURLButton")
	proto.RegisterType((*HydratedCallButton)(nil), "proto.HydratedCallButton")
	proto.RegisterType((*HydratedTemplateButton)(nil), "proto.HydratedTemplateButton")
	proto.RegisterType((*QuickReplyButton)(nil), "proto.QuickReplyButton")
	proto.RegisterType((*URLButton)(nil), "proto.URLButton")
	proto.RegisterType((*CallButton)(nil), "proto.CallButton")
	proto.RegisterType((*TemplateButton)(nil), "proto.TemplateButton")
	proto.RegisterType((*Location)(nil), "proto.Location")
	proto.RegisterType((*Point)(nil), "proto.Point")
	proto.RegisterType((*InteractiveAnnotation)(nil), "proto.InteractiveAnnotation")
	proto.RegisterType((*AdReplyInfo)(nil), "proto.AdReplyInfo")
	proto.RegisterType((*ContextInfo)(nil), "proto.ContextInfo")
	proto.RegisterType((*SenderKeyDistributionMessage)(nil), "proto.SenderKeyDistributionMessage")
	proto.RegisterType((*ImageMessage)(nil), "proto.ImageMessage")
	proto.RegisterType((*ContactMessage)(nil), "proto.ContactMessage")
	proto.RegisterType((*LocationMessage)(nil), "proto.LocationMessage")
	proto.RegisterType((*ExtendedTextMessage)(nil), "proto.ExtendedTextMessage")
	proto.RegisterType((*DocumentMessage)(nil), "proto.DocumentMessage")
	proto.RegisterType((*AudioMessage)(nil), "proto.AudioMessage")
	proto.RegisterType((*VideoMessage)(nil), "proto.VideoMessage")
	proto.RegisterType((*Call)(nil), "proto.Call")
	proto.RegisterType((*Chat)(nil), "proto.Chat")
	proto.RegisterType((*ProtocolMessage)(nil), "proto.ProtocolMessage")
	proto.RegisterType((*HistorySyncNotification)(nil), "proto.HistorySyncNotification")
	proto.RegisterType((*ContactsArrayMessage)(nil), "proto.ContactsArrayMessage")
	proto.RegisterType((*HSMCurrency)(nil), "proto.HSMCurrency")
	proto.RegisterType((*HSMDateTimeComponent)(nil), "proto.HSMDateTimeComponent")
	proto.RegisterType((*HSMDateTimeUnixEpoch)(nil), "proto.HSMDateTimeUnixEpoch")
	proto.RegisterType((*HSMDateTime)(nil), "proto.HSMDateTime")
	proto.RegisterType((*HSMLocalizableParameter)(nil), "proto.HSMLocalizableParameter")
	proto.RegisterType((*HighlyStructuredMessage)(nil), "proto.HighlyStructuredMessage")
	proto.RegisterType((*SendPaymentMessage)(nil), "proto.SendPaymentMessage")
	proto.RegisterType((*RequestPaymentMessage)(nil), "proto.RequestPaymentMessage")
	proto.RegisterType((*DeclinePaymentRequestMessage)(nil), "proto.DeclinePaymentRequestMessage")
	proto.RegisterType((*CancelPaymentRequestMessage)(nil), "proto.CancelPaymentRequestMessage")
	proto.RegisterType((*LiveLocationMessage)(nil), "proto.LiveLocationMessage")
	proto.RegisterType((*StickerMessage)(nil), "proto.StickerMessage")
	proto.RegisterType((*FourRowTemplate)(nil), "proto.FourRowTemplate")
	proto.RegisterType((*HydratedFourRowTemplate)(nil), "proto.HydratedFourRowTemplate")
	proto.RegisterType((*TemplateMessage)(nil), "proto.TemplateMessage")
	proto.RegisterType((*TemplateButtonReplyMessage)(nil), "proto.TemplateButtonReplyMessage")
	proto.RegisterType((*CatalogSnapshot)(nil), "proto.CatalogSnapshot")
	proto.RegisterType((*ProductSnapshot)(nil), "proto.ProductSnapshot")
	proto.RegisterType((*ProductMessage)(nil), "proto.ProductMessage")
	proto.RegisterType((*GroupInviteMessage)(nil), "proto.GroupInviteMessage")
	proto.RegisterType((*DeviceSentMessage)(nil), "proto.DeviceSentMessage")
	proto.RegisterType((*DeviceSyncMessage)(nil), "proto.DeviceSyncMessage")
	proto.RegisterType((*Message)(nil), "proto.Message")
	proto.RegisterType((*MessageKey)(nil), "proto.MessageKey")
	proto.RegisterType((*WebFeatures)(nil), "proto.WebFeatures")
	proto.RegisterType((*TabletNotificationsInfo)(nil), "proto.TabletNotificationsInfo")
	proto.RegisterType((*NotificationMessageInfo)(nil), "proto.NotificationMessageInfo")
	proto.RegisterType((*WebNotificationsInfo)(nil), "proto.WebNotificationsInfo")
	proto.RegisterType((*PaymentInfo)(nil), "proto.PaymentInfo")
	proto.RegisterType((*WebMessageInfo)(nil), "proto.WebMessageInfo")
}

func init() { proto.RegisterFile("def.proto", fileDescriptor_76fb0470a3b910d8) }

var fileDescriptor_76fb0470a3b910d8 = []byte{
	// 6896 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x3c, 0x4d, 0x6f, 0x24, 0x49,
	0x56, 0x2e, 0x97, 0x3f, 0xca, 0xaf, 0xfc, 0x91, 0x0e, 0xb7, 0xed, 0xea, 0x8f, 0xe9, 0xf1, 0xd4,
	0xcc, 0xce, 0x7a, 0x86, 0x99, 0x9e, 0x1e, 0x4f, 0xef, 0x4c, 0x0f, 0x33, 0xbb, 0xdb, 0xe9, 0xaa,
	0xb4, 0x9d, 0xdd, 0xe5, 0xcc, 0x9a, 0xa8, 0x2c, 0x77, 0x7b, 0xb4, 0xa2, 0x94, 0x9d, 0x19, 0xb6,
	0x93, 0xae, 0xca, 0xac, 0xc9, 0xcc, 0xea, 0x69, 0xef, 0x01, 0xc4, 0xae, 0x04, 0x08, 0x81, 0xb4,
	0x37, 0x16, 0x38, 0x21, 0xc4, 0x1f, 0xe0, 0xc0, 0x01, 0x04, 0x12, 0x42, 0x48, 0x88, 0xcb, 0xc2,
	0x05, 0xc4, 0x05, 0xa1, 0x05, 0x09, 0xb8, 0x72, 0xe4, 0x84, 0x22, 0x32, 0xf2, 0x3b, 0xcb, 0x2e,
	0xf7, 0xec, 0x07, 0xe2, 0xe4, 0x8a, 0x17, 0xef, 0xbd, 0x88, 0x78, 0xf1, 0xe2, 0xc5, 0x7b, 0x2f,
	0x5e, 0x1a, 0x16, 0x4c, 0x72, 0x72, 0x67, 0xe8, 0x3a, 0xbe, 0x83, 0x66, 0xd9, 0x9f, 0x7a, 0x0b,
	0x6a, 0x07, 0xe7, 0xa6, 0xab, 0xfb, 0xc4, 0xfc, 0x6c, 0x64, 0x19, 0xcf, 0x30, 0x19, 0xf6, 0xcf,
	0x77, 0x47, 0xbe, 0xef, 0xd8, 0x68, 0x0b, 0xaa, 0xa6, 0xe5, 0x0d, 0xfb, 0xfa, 0xb9, 0x46, 0x5e,
	0xf8, 0xb5, 0xd2, 0x56, 0x69, 0x7b, 0x01, 0x27, 0x41, 0x68, 0x19, 0xa6, 0x2d, 0xb3, 0x36, 0xcd,
	0x3a, 0xa6, 0x2d, 0xb3, 0xbe, 0x0f, 0xab, 0x21, 0xb7, 0x2e, 0x6e, 0x4d, 0xcc, 0x46, 0x80, 0xf2,
	0xc8, 0xed, 0x73, 0x3e, 0xf4, 0x67, 0xfd, 0x09, 0xa0, 0x90, 0x51, 0x43, 0xef, 0xf7, 0x27, 0xe6,
	0xb4, 0x05, 0xd5, 0xe1, 0x99, 0x63, 0x13, 0x65, 0x34, 0x78, 0x4a, 0x5c, 0xce, 0x31, 0x09, 0xaa,
	0xff, 0xfa, 0x34, 0x6c, 0x84, 0xac, 0x35, 0x32, 0x18, 0xf6, 0x75, 0x9f, 0x70, 0xf6, 0xd7, 0x60,
	0xd6, 0xb2, 0x4d, 0xf2, 0xa2, 0x36, 0xb3, 0x55, 0xda, 0x5e, 0xc2, 0x41, 0x03, 0x1d, 0x82, 0xf0,
	0x45, 0x46, 0x32, 0x6c, 0xe4, 0xea, 0xce, 0xab, 0x81, 0x28, 0xef, 0x8c, 0x13, 0xe0, 0xc1, 0x14,
	0xce, 0x91, 0xa2, 0xfb, 0xb0, 0x30, 0x72, 0xf9, 0x82, 0xd8, 0xfc, 0xaa, 0x3b, 0xb5, 0x0c, 0x9f,
	0x48, 0x74, 0x07, 0x53, 0x38, 0x46, 0x46, 0x9f, 0x00, 0x18, 0x91, 0x2c, 0x6a, 0x65, 0x46, 0x7a,
	0x3d, 0x43, 0x1a, 0x0b, 0xeb, 0x60, 0x0a, 0x27, 0xd0, 0x77, 0x05, 0x58, 0x3e, 0xe3, 0x38, 0x01,
	0xa4, 0x6e, 0x82, 0x90, 0xdb, 0xf1, 0x07, 0x79, 0x01, 0x57, 0x77, 0x6e, 0x87, 0x63, 0x58, 0xa7,
	0x67, 0xfd, 0xf3, 0x8e, 0xef, 0x8e, 0x0c, 0x7f, 0xe4, 0x12, 0xf3, 0x90, 0x78, 0x9e, 0x7e, 0x4a,
	0x2e, 0xd6, 0x88, 0x5f, 0x85, 0x85, 0x58, 0x13, 0xbe, 0x3a, 0xfb, 0xbb, 0xb1, 0xa6, 0x5c, 0x4e,
	0xc9, 0x34, 0xe9, 0x07, 0x25, 0x80, 0x84, 0x0a, 0x7d, 0xf5, 0x29, 0x3c, 0xc8, 0xab, 0xd8, 0x04,
	0x1c, 0x92, 0x2a, 0xf8, 0x2f, 0x25, 0x58, 0x9e, 0x48, 0xf5, 0xa4, 0xb1, 0xaa, 0xb7, 0xc9, 0xc7,
	0x9b, 0x48, 0xe5, 0xee, 0xe6, 0x55, 0x4e, 0xe0, 0xf4, 0x63, 0x54, 0xed, 0x83, 0x02, 0x55, 0x5b,
	0xe5, 0x24, 0x63, 0x55, 0xac, 0x02, 0x73, 0x4f, 0x03, 0xd5, 0xf2, 0xa1, 0xd2, 0x72, 0x0c, 0xdd,
	0xb7, 0x1c, 0x1b, 0x6d, 0xc3, 0x8a, 0x49, 0x4e, 0x5d, 0x42, 0xbc, 0x96, 0xee, 0x5b, 0xfe, 0xc8,
	0x24, 0x6c, 0x09, 0x25, 0x9c, 0x05, 0xa3, 0xb7, 0x41, 0x08, 0x41, 0x8e, 0x7d, 0x1a, 0xa0, 0x4e,
	0x33, 0xd4, 0x1c, 0x1c, 0x21, 0x98, 0xb1, 0xf5, 0x01, 0x61, 0x53, 0x5b, 0xc0, 0xec, 0x77, 0xfd,
	0x14, 0x66, 0xdb, 0x8e, 0x65, 0x33, 0x23, 0xf0, 0xa2, 0x49, 0x86, 0x2e, 0x31, 0xa8, 0xba, 0xb3,
	0xe1, 0x66, 0x71, 0x12, 0x44, 0x31, 0xce, 0x13, 0x18, 0xd3, 0x01, 0x46, 0x02, 0x84, 0x16, 0xa1,
	0xf4, 0x82, 0x71, 0x2f, 0xe1, 0xd2, 0x0b, 0xda, 0x3a, 0x67, 0x5b, 0x53, 0xc2, 0xa5, 0xf3, 0xfa,
	0x6f, 0x96, 0x60, 0x5d, 0xb6, 0x7d, 0xe2, 0xea, 0x86, 0x6f, 0x3d, 0x27, 0xa2, 0x6d, 0x3b, 0x7e,
	0xb0, 0xd8, 0x0f, 0x61, 0x65, 0xe8, 0xf4, 0xcf, 0x4f, 0x1d, 0xfb, 0x88, 0xb8, 0xbe, 0x65, 0x10,
	0xaf, 0x56, 0xda, 0x2a, 0x6f, 0x57, 0x77, 0x16, 0xb9, 0xf0, 0xd8, 0x04, 0x71, 0x16, 0x09, 0xbd,
	0x0b, 0x95, 0x3e, 0x17, 0x18, 0xdf, 0xa0, 0x15, 0x4e, 0x10, 0xca, 0xf1, 0x60, 0x0a, 0x47, 0x28,
	0x54, 0xd2, 0x74, 0x68, 0xc7, 0xae, 0xff, 0x4f, 0x09, 0xaa, 0xa2, 0xc9, 0x36, 0x5b, 0xb6, 0x4f,
	0x1c, 0xf4, 0x26, 0x2c, 0xeb, 0xe6, 0x73, 0xca, 0xd6, 0x23, 0xae, 0x42, 0x25, 0x14, 0x18, 0xc9,
	0x0c, 0x14, 0x1d, 0xc0, 0xc2, 0x80, 0x98, 0x96, 0xae, 0x9d, 0x0f, 0x03, 0x21, 0x2f, 0xef, 0xbc,
	0xcd, 0x47, 0x4c, 0xb0, 0xbb, 0x23, 0x36, 0x7b, 0x58, 0x6a, 0xb7, 0x8e, 0x7b, 0xb2, 0xb2, 0xa7,
	0xf6, 0x0e, 0xa5, 0xa6, 0x2c, 0x6a, 0xc7, 0x6d, 0x09, 0xc7, 0xc4, 0xe8, 0x0d, 0x58, 0xfa, 0xe5,
	0x21, 0x39, 0xd5, 0xce, 0x46, 0x83, 0xa7, 0xb6, 0x6e, 0xf5, 0x6b, 0xc2, 0x56, 0x69, 0x7b, 0x11,
	0xa7, 0x81, 0xa8, 0x06, 0xf3, 0x86, 0x3e, 0x64, 0xeb, 0x5b, 0x65, 0x13, 0x0a, 0x9b, 0xf5, 0x8f,
	0x61, 0x73, 0xcc, 0x28, 0xa8, 0x02, 0x33, 0x8a, 0xaa, 0x48, 0xc2, 0x14, 0x5a, 0x80, 0x59, 0xf9,
	0x50, 0xdc, 0x97, 0x84, 0x12, 0xfd, 0x79, 0x24, 0x37, 0x25, 0x55, 0x98, 0xae, 0xff, 0xfb, 0x0c,
	0x54, 0x1b, 0x8e, 0xed, 0x93, 0x17, 0x3e, 0x5b, 0xfc, 0x0d, 0xa8, 0x78, 0xbe, 0x6e, 0x7f, 0x57,
	0x97, 0x4d, 0xbe, 0xec, 0xa8, 0xcd, 0x2e, 0x06, 0x9d, 0x4a, 0xdb, 0x1a, 0xea, 0xb6, 0x1f, 0x5d,
	0x0c, 0x31, 0x08, 0xdd, 0x83, 0xa5, 0x2f, 0x46, 0x8e, 0x1f, 0x9d, 0x59, 0xae, 0xf6, 0xcb, 0x5c,
	0x2c, 0xe1, 0x49, 0x4e, 0x23, 0xa1, 0x5b, 0xb0, 0xe0, 0x92, 0x81, 0xe3, 0x93, 0x87, 0x96, 0xc9,
	0x34, 0x64, 0x01, 0xc7, 0x00, 0x54, 0x87, 0xc5, 0x01, 0xb1, 0xe9, 0x3a, 0x89, 0x49, 0x11, 0x56,
	0xb6, 0xca, 0xdb, 0x0b, 0x38, 0x05, 0xa3, 0x6a, 0x6f, 0x38, 0xf6, 0x73, 0xe2, 0x7a, 0x96, 0x63,
	0x77, 0x9c, 0x91, 0x6b, 0x90, 0x1a, 0x62, 0x8c, 0x72, 0x70, 0xba, 0xbd, 0x31, 0xac, 0xa9, 0xfb,
	0x7a, 0x6d, 0x8d, 0x49, 0x3b, 0x03, 0x45, 0x1f, 0xc2, 0x46, 0x02, 0x42, 0xfa, 0xfa, 0x79, 0x87,
	0x18, 0x8e, 0x6d, 0x7a, 0xb5, 0x6b, 0xcc, 0xbe, 0x8c, 0xe9, 0xa5, 0x87, 0xf5, 0xc4, 0x71, 0xbf,
	0xd4, 0x5d, 0xd3, 0xb2, 0x4f, 0x3b, 0x86, 0xe3, 0x92, 0xda, 0x3a, 0x23, 0xc8, 0x82, 0xa9, 0x3c,
	0x2d, 0x6f, 0x2f, 0x00, 0x12, 0xb3, 0xb6, 0xb1, 0x55, 0xda, 0xae, 0xe0, 0x24, 0x08, 0xdd, 0x81,
	0x4a, 0x20, 0x2a, 0xd1, 0xac, 0x6d, 0x32, 0x51, 0xa2, 0xbc, 0x86, 0xe1, 0x08, 0x07, 0x7d, 0x0c,
	0xcb, 0xc3, 0xbe, 0x6e, 0x90, 0x33, 0xa7, 0x6f, 0x12, 0xf7, 0x11, 0x39, 0xaf, 0xd5, 0x52, 0x76,
	0x87, 0x4b, 0xfc, 0x11, 0x39, 0xc7, 0x19, 0x44, 0x74, 0x1b, 0x80, 0xbc, 0x18, 0x5a, 0x6e, 0x70,
	0x80, 0xae, 0xb3, 0x19, 0x27, 0x20, 0xe8, 0x53, 0xb8, 0x4e, 0x86, 0x67, 0x64, 0x40, 0x5c, 0xbd,
	0xdf, 0x21, 0xbe, 0x6f, 0xd9, 0xa7, 0x9a, 0x35, 0x20, 0x9e, 0xaf, 0x0f, 0x86, 0xb5, 0x1b, 0x5b,
	0xa5, 0xed, 0x32, 0x1e, 0x8f, 0x50, 0xff, 0xad, 0x12, 0xdc, 0xea, 0x10, 0x3b, 0x18, 0xab, 0x69,
	0x79, 0xbe, 0x6b, 0x3d, 0x1d, 0x51, 0xbe, 0xa1, 0x0e, 0xd4, 0x60, 0xfe, 0xd4, 0x75, 0x46, 0xc3,
	0x48, 0xed, 0xc2, 0x26, 0x6a, 0xc3, 0xeb, 0xfa, 0x0b, 0xa7, 0xef, 0xf8, 0xfd, 0x8b, 0x18, 0x30,
	0x6d, 0x5c, 0xc4, 0x93, 0xa0, 0xd6, 0xff, 0x72, 0x0e, 0x16, 0xe5, 0x81, 0x7e, 0x4a, 0xc2, 0xc1,
	0xb9, 0xef, 0x54, 0x8a, 0x7c, 0x27, 0x7a, 0x0c, 0x06, 0xd6, 0x80, 0xf8, 0xe1, 0xd1, 0x5e, 0xc0,
	0x51, 0x3b, 0x79, 0x0e, 0xcb, 0xa9, 0x73, 0x48, 0x65, 0x78, 0x62, 0xf5, 0x49, 0xe7, 0x4c, 0xdf,
	0xf9, 0xc6, 0x87, 0x4c, 0x93, 0x17, 0x71, 0x02, 0x12, 0xf6, 0xb7, 0x88, 0x7d, 0xea, 0x9f, 0xd5,
	0x66, 0xb7, 0x4a, 0xdb, 0x33, 0x38, 0x01, 0x41, 0x1b, 0x30, 0x77, 0x46, 0xac, 0xd3, 0x33, 0xbf,
	0x36, 0xc7, 0xe4, 0xcf, 0x5b, 0xf4, 0x66, 0xfb, 0xd2, 0x32, 0xfd, 0xb3, 0xda, 0x7c, 0x70, 0xb3,
	0xb1, 0x06, 0x9b, 0x23, 0x35, 0x21, 0x74, 0x9b, 0x2b, 0x6c, 0xac, 0xa8, 0x4d, 0x2d, 0x0a, 0xe5,
	0x2b, 0xd9, 0x06, 0x9f, 0xcc, 0x42, 0x60, 0x51, 0x52, 0x40, 0xa4, 0xc1, 0x86, 0x55, 0x64, 0x83,
	0xbd, 0x1a, 0x30, 0x8b, 0x7b, 0x8b, 0xab, 0x4d, 0xa1, 0xa1, 0xc6, 0x63, 0x68, 0xe9, 0x2a, 0x4d,
	0xcb, 0x25, 0x86, 0xdf, 0xd6, 0xfd, 0xb3, 0x5a, 0x95, 0x89, 0x28, 0x01, 0x41, 0xef, 0xc0, 0x6a,
	0x38, 0xcf, 0x58, 0x83, 0x16, 0x99, 0x06, 0xe5, 0x3b, 0x26, 0xb4, 0x8d, 0xf7, 0xa0, 0x6a, 0xc4,
	0x56, 0x8c, 0xd9, 0xc7, 0xf8, 0xac, 0x24, 0xec, 0x1b, 0x4e, 0xa2, 0x51, 0xb3, 0x71, 0x62, 0xb9,
	0x9e, 0xdf, 0x31, 0x74, 0xbb, 0x63, 0x99, 0xc4, 0xd0, 0x5d, 0x66, 0x36, 0x16, 0x71, 0x0e, 0xce,
	0x8e, 0x75, 0x08, 0xe3, 0x1b, 0xb8, 0xc6, 0x8f, 0x75, 0x1a, 0x4c, 0xd7, 0x47, 0x5e, 0x0c, 0x89,
	0x6b, 0x51, 0x13, 0xb5, 0xcf, 0x95, 0x3a, 0xb0, 0x19, 0xf9, 0x0e, 0x6a, 0xde, 0x3c, 0x43, 0xb7,
	0xbd, 0x70, 0xfc, 0x75, 0x36, 0x7e, 0x0a, 0x46, 0x0d, 0x85, 0x17, 0xf1, 0xf7, 0x6a, 0x1b, 0x5b,
	0xe5, 0xed, 0x25, 0x9c, 0x04, 0xa1, 0x1d, 0xb8, 0x36, 0xb0, 0xcc, 0xcf, 0x46, 0x7a, 0xdf, 0xf2,
	0xcf, 0xf7, 0x62, 0x1d, 0xdc, 0x64, 0xdc, 0x0a, 0xfb, 0xd0, 0x7d, 0xd8, 0x4c, 0xc3, 0x63, 0x6d,
	0xa9, 0x31, 0xb2, 0x71, 0xdd, 0xf5, 0x5f, 0x81, 0x65, 0x2a, 0x53, 0xdd, 0xf0, 0xc3, 0x13, 0x14,
	0x47, 0x15, 0x89, 0x0b, 0x33, 0x09, 0xa2, 0x3a, 0xfc, 0xdc, 0xd0, 0x5d, 0x93, 0xed, 0xdf, 0x02,
	0x0e, 0x1a, 0x2f, 0xb7, 0x6f, 0xf5, 0x1f, 0x95, 0x61, 0x25, 0xbc, 0xd4, 0xc3, 0x19, 0xfc, 0xcc,
	0x7c, 0x24, 0x7a, 0xfe, 0x75, 0xd3, 0x74, 0x89, 0xe7, 0xf1, 0xcb, 0x2a, 0x6c, 0x86, 0x76, 0x64,
	0x36, 0xb6, 0x23, 0x1b, 0x30, 0x67, 0x79, 0x2d, 0xeb, 0x39, 0x61, 0x27, 0xba, 0x82, 0x79, 0x8b,
	0xce, 0x41, 0x37, 0x8c, 0x91, 0xab, 0x1b, 0xe7, 0xb2, 0x7d, 0x48, 0x7c, 0xe2, 0x7a, 0xfc, 0x70,
	0xe7, 0xe0, 0xf4, 0x3c, 0x79, 0x43, 0x42, 0x4c, 0xd9, 0x3e, 0x1c, 0x7a, 0xec, 0xa4, 0x4f, 0xe3,
	0x04, 0x04, 0xb5, 0xe0, 0x35, 0x3e, 0xef, 0x46, 0xdf, 0x31, 0x9e, 0x7d, 0x69, 0x79, 0x64, 0xcf,
	0x75, 0x06, 0x87, 0xfa, 0xa9, 0x4d, 0x7c, 0xcb, 0x50, 0x1c, 0xd7, 0x3f, 0x63, 0xe7, 0x7f, 0x09,
	0x5f, 0x8e, 0xc8, 0xac, 0x9b, 0x33, 0xa0, 0x1a, 0xca, 0x8f, 0x6e, 0xd8, 0xfc, 0x69, 0x9e, 0xc4,
	0xfa, 0x7f, 0xcd, 0xc2, 0x9a, 0xf4, 0xc2, 0xa7, 0x56, 0xdb, 0xa4, 0x11, 0x42, 0xb8, 0xab, 0x08,
	0x66, 0xfc, 0x38, 0x4c, 0x65, 0xbf, 0xa9, 0xae, 0x0d, 0x74, 0xdf, 0x38, 0x0b, 0x30, 0x43, 0x37,
	0x24, 0x01, 0xa2, 0x67, 0xca, 0xd0, 0x6d, 0xc7, 0xb6, 0x0c, 0xbd, 0xdf, 0x75, 0xfb, 0x7c, 0x9b,
	0x52, 0x30, 0xa6, 0xb1, 0xc4, 0x33, 0x5c, 0x2b, 0xb0, 0xe4, 0xb3, 0x5c, 0x63, 0x63, 0x10, 0xd5,
	0x58, 0xdf, 0xf2, 0xfb, 0xc1, 0xd6, 0x2d, 0xe0, 0xa0, 0x41, 0xad, 0x2e, 0x9d, 0x85, 0xe8, 0x9e,
	0x3e, 0x65, 0x3b, 0x36, 0x8f, 0xa3, 0x36, 0x75, 0x2d, 0x9e, 0xea, 0xc6, 0x33, 0x7a, 0x73, 0xd9,
	0x26, 0xc3, 0xa8, 0x30, 0x8c, 0x0c, 0x14, 0x1d, 0xc2, 0xcc, 0x89, 0x63, 0xfb, 0x6c, 0x53, 0x96,
	0x77, 0x3e, 0xe6, 0xc2, 0x29, 0x58, 0xff, 0x1d, 0xe9, 0x89, 0x26, 0x29, 0x4d, 0xa9, 0xd9, 0xd3,
	0xa4, 0x27, 0x5a, 0xef, 0x50, 0xea, 0x74, 0xc4, 0x7d, 0xa9, 0xb7, 0xa7, 0x2a, 0x1a, 0xf3, 0x21,
	0x19, 0x1b, 0xf4, 0x4b, 0x50, 0x1d, 0xba, 0xe4, 0xb9, 0x45, 0xbe, 0x64, 0xae, 0x28, 0x30, 0xae,
	0x9f, 0x5e, 0x99, 0x6b, 0x1b, 0x4b, 0x47, 0xb2, 0xf4, 0x98, 0x31, 0x4e, 0x32, 0xfc, 0xa9, 0x9a,
	0x60, 0x7a, 0x6c, 0x1d, 0xc5, 0xf1, 0xdb, 0x7d, 0xfd, 0x5c, 0xb6, 0xfb, 0x96, 0x1d, 0x38, 0x6e,
	0x15, 0x9c, 0x05, 0xd7, 0x7f, 0xbb, 0x04, 0xb7, 0x2f, 0x16, 0x07, 0x5a, 0x06, 0xe8, 0x88, 0x4a,
	0xa7, 0xd7, 0x91, 0xb0, 0xbc, 0x17, 0xb8, 0xbc, 0xc1, 0xcf, 0x12, 0x5a, 0x83, 0x15, 0x45, 0xc5,
	0x72, 0x43, 0x54, 0x7a, 0x58, 0xda, 0xef, 0xb6, 0x44, 0x2c, 0x4c, 0xa3, 0x55, 0x58, 0xda, 0xc5,
	0xc7, 0x4a, 0x53, 0x54, 0x7a, 0x8f, 0xb1, 0xac, 0x49, 0x42, 0x19, 0xad, 0xc3, 0xea, 0xae, 0xb4,
	0x2b, 0x76, 0x14, 0xa9, 0x2b, 0x45, 0x98, 0x33, 0x48, 0x80, 0x45, 0xb5, 0xf3, 0x58, 0x6c, 0x35,
	0x7b, 0x07, 0x92, 0x78, 0x74, 0x2c, 0xcc, 0xd6, 0xef, 0xc3, 0x6b, 0x97, 0x8a, 0x31, 0xed, 0x7d,
	0x07, 0x2e, 0x77, 0xa9, 0xfe, 0xe7, 0x65, 0x58, 0x69, 0x3a, 0xc6, 0x88, 0x1e, 0xaa, 0x97, 0xf3,
	0x40, 0x22, 0xcd, 0x2c, 0x27, 0x35, 0xf3, 0xab, 0x7a, 0x1f, 0xb7, 0x60, 0x61, 0xa8, 0x9f, 0x92,
	0x86, 0x33, 0xb2, 0x43, 0x07, 0x24, 0x06, 0xa4, 0xbc, 0x8d, 0xf9, 0x8c, 0xb7, 0x71, 0x03, 0x2a,
	0x94, 0x0f, 0x33, 0xfd, 0x95, 0x60, 0xae, 0x61, 0x7b, 0x42, 0x4f, 0x24, 0xed, 0x33, 0xc0, 0x64,
	0x3e, 0x43, 0xf5, 0xe7, 0xe0, 0x33, 0xd4, 0x7f, 0xbf, 0x0c, 0x8b, 0xe2, 0xc8, 0xb4, 0x9c, 0x97,
	0xdb, 0xba, 0xf4, 0x26, 0x95, 0x2f, 0xd9, 0xa4, 0x99, 0xdc, 0x26, 0xd5, 0x60, 0xde, 0xe3, 0x61,
	0xc8, 0x2c, 0xdb, 0xa2, 0xb0, 0x49, 0xe7, 0x31, 0xf4, 0x7d, 0x7e, 0xcf, 0xd0, 0x9f, 0x17, 0x6e,
	0x59, 0x6e, 0x5b, 0x2a, 0x97, 0x6f, 0xcb, 0xc2, 0x64, 0xdb, 0x02, 0xe3, 0xb6, 0xe5, 0xa5, 0x9d,
	0x34, 0xcf, 0x77, 0x89, 0x3e, 0xa0, 0x71, 0x53, 0xda, 0x49, 0xcb, 0xc2, 0xeb, 0xdf, 0x9b, 0x83,
	0xc5, 0x23, 0xcb, 0x24, 0xff, 0xe7, 0x36, 0x27, 0xb9, 0x15, 0x73, 0x99, 0xad, 0x48, 0xc4, 0x13,
	0xf3, 0xe9, 0x78, 0x62, 0x0b, 0xaa, 0xa7, 0xd6, 0x09, 0xb5, 0x81, 0xf4, 0x02, 0x61, 0x5b, 0x54,
	0xc1, 0x49, 0x50, 0x22, 0x62, 0x58, 0x28, 0x8e, 0x18, 0x20, 0x19, 0x31, 0xe4, 0x36, 0xbd, 0x7a,
	0xb5, 0xa8, 0x60, 0xf1, 0x27, 0x16, 0x15, 0x2c, 0x4d, 0xa6, 0x4a, 0xcb, 0x3f, 0xa7, 0xa8, 0x60,
	0x52, 0x85, 0x43, 0x5d, 0x58, 0x3e, 0xb5, 0x4e, 0x44, 0x3f, 0x8a, 0x31, 0x59, 0x50, 0xb0, 0xbc,
	0xf3, 0x2e, 0x1f, 0x24, 0xa9, 0x8c, 0x77, 0xd8, 0x05, 0x10, 0xdd, 0x13, 0xa2, 0xa6, 0x61, 0x79,
	0xb7, 0xab, 0xc9, 0xaa, 0x82, 0x33, 0x4c, 0xea, 0x9f, 0xc0, 0xf5, 0xb1, 0xc8, 0xe9, 0x4b, 0x65,
	0x5f, 0x6e, 0x1f, 0x1c, 0x07, 0x29, 0x1d, 0x4d, 0x52, 0x54, 0x2c, 0x4c, 0xd7, 0xb7, 0x60, 0xa6,
	0xa1, 0xf7, 0x79, 0xbe, 0xa8, 0xdf, 0xa7, 0x2a, 0x57, 0x62, 0xd3, 0x0f, 0x9b, 0xf5, 0xfb, 0x30,
	0xd3, 0x38, 0xd3, 0xfd, 0x09, 0xbc, 0xf6, 0x6c, 0x2a, 0xfa, 0xcf, 0xca, 0xb0, 0xd2, 0xa6, 0x2b,
	0x33, 0x9c, 0x7e, 0x78, 0xc6, 0x5e, 0x87, 0xf2, 0x33, 0x3e, 0x46, 0x61, 0xa6, 0x81, 0xf6, 0xa2,
	0x07, 0x30, 0xe3, 0xc7, 0x79, 0xb2, 0x77, 0xc2, 0x54, 0x5e, 0x9a, 0xd5, 0x9d, 0x36, 0x56, 0x35,
	0xb5, 0xa1, 0xb6, 0xa2, 0x75, 0x07, 0x5e, 0x0e, 0x3b, 0x9c, 0x77, 0x61, 0x2d, 0xca, 0x2f, 0x48,
	0x71, 0xa6, 0x22, 0x48, 0xf6, 0x16, 0x75, 0x5d, 0x9c, 0xb2, 0x98, 0xbd, 0x24, 0x65, 0x81, 0x9e,
	0xc0, 0xe6, 0x99, 0xe5, 0xf9, 0x8e, 0x7b, 0xde, 0x39, 0xb7, 0x0d, 0xc5, 0xf1, 0xad, 0x13, 0x8b,
	0xa7, 0x17, 0xe7, 0x32, 0xf9, 0xea, 0x42, 0x2c, 0x3c, 0x8e, 0xbc, 0xfe, 0x1c, 0xd6, 0x0b, 0x17,
	0x8a, 0x00, 0xe6, 0xb0, 0x74, 0xa4, 0x3e, 0xa2, 0x7b, 0xbb, 0x0e, 0xab, 0x52, 0xfb, 0x40, 0x3a,
	0x94, 0xb0, 0xd8, 0xea, 0x75, 0x24, 0x4d, 0x93, 0x95, 0x7d, 0xa1, 0x8c, 0x6e, 0xc2, 0x66, 0x02,
	0x7c, 0xac, 0x34, 0x7a, 0x58, 0xea, 0xb4, 0x55, 0xa5, 0x23, 0x09, 0x33, 0xe8, 0x15, 0xb8, 0x7e,
	0x20, 0x77, 0x34, 0x15, 0x1f, 0x07, 0x5d, 0x8a, 0xaa, 0xc9, 0x7b, 0x72, 0x43, 0xa4, 0x6a, 0x23,
	0xcc, 0xd6, 0xff, 0xa4, 0x0c, 0x9b, 0x63, 0x26, 0x9b, 0x31, 0x7d, 0xa5, 0x4b, 0x4c, 0xdf, 0x74,
	0xce, 0xf4, 0x25, 0x0d, 0x5c, 0xf9, 0xb2, 0xbb, 0x66, 0xe6, 0xf2, 0xbb, 0x66, 0x36, 0x67, 0x20,
	0x4c, 0xa8, 0x78, 0xe7, 0xb6, 0xc1, 0x5c, 0xdc, 0x39, 0xa6, 0x45, 0x07, 0x17, 0x6f, 0xc0, 0x9d,
	0xb1, 0xb2, 0xe8, 0xf1, 0x1e, 0xda, 0xc1, 0x34, 0x2c, 0xe2, 0x4c, 0x67, 0x61, 0x9c, 0x8d, 0xec,
	0x67, 0xaa, 0x6b, 0x12, 0x97, 0x87, 0x64, 0x09, 0x48, 0xdd, 0x81, 0xb7, 0x26, 0x66, 0x4b, 0xf7,
	0x50, 0x56, 0x64, 0x4d, 0x16, 0x5b, 0xbd, 0x5d, 0x55, 0xd5, 0x3a, 0x1a, 0x16, 0xdb, 0xc1, 0xd6,
	0x86, 0xe0, 0x8e, 0x26, 0x6a, 0xdd, 0x4e, 0xef, 0xe8, 0x03, 0xa1, 0x44, 0xcf, 0xf5, 0x5e, 0xb7,
	0xd5, 0x12, 0xa6, 0x03, 0x3d, 0x68, 0x48, 0x8a, 0x26, 0x94, 0xeb, 0x7f, 0x58, 0x82, 0x6b, 0x3c,
	0xd8, 0xf6, 0x44, 0xd7, 0xd5, 0xcf, 0x27, 0x0f, 0xb9, 0xdf, 0x87, 0x8a, 0xc1, 0x29, 0x6b, 0xd3,
	0xcc, 0x74, 0xaf, 0x27, 0x6c, 0x5f, 0x1c, 0xbd, 0xe3, 0x08, 0xed, 0x25, 0x7d, 0xa2, 0xcf, 0xa0,
	0x7a, 0xd0, 0x39, 0x6c, 0x8c, 0x5c, 0x97, 0xd8, 0xc6, 0x39, 0x0b, 0xbf, 0xf8, 0xef, 0x86, 0x63,
	0x86, 0x53, 0x4b, 0xc1, 0xa8, 0x9c, 0xf5, 0x01, 0x75, 0x2c, 0xdf, 0xbf, 0x7b, 0xf7, 0x2e, 0xd3,
	0xa7, 0x32, 0x4e, 0x40, 0xea, 0xbf, 0x37, 0x03, 0xd7, 0x0e, 0x3a, 0x87, 0x4d, 0xdd, 0x27, 0xf4,
	0x48, 0x36, 0x9c, 0xc1, 0xd0, 0xb1, 0x69, 0x14, 0xda, 0x83, 0x05, 0x53, 0x3f, 0x57, 0x4f, 0x1e,
	0x13, 0xf2, 0x8c, 0x71, 0x5e, 0xde, 0x11, 0x43, 0x3d, 0x28, 0xc0, 0xa7, 0xc0, 0x5e, 0x53, 0xd4,
	0xa4, 0x9e, 0x26, 0x1f, 0x4a, 0xbd, 0x86, 0x7a, 0xd8, 0x56, 0x15, 0x49, 0xd1, 0x7a, 0x4d, 0xf1,
	0x58, 0xdd, 0x7b, 0x2c, 0x49, 0x8f, 0x82, 0x64, 0x7c, 0xc4, 0x93, 0x86, 0x9c, 0xe7, 0x44, 0x0f,
	0x1e, 0xa5, 0x96, 0x30, 0xfb, 0x4d, 0xaf, 0xd3, 0x81, 0x63, 0xfb, 0x67, 0x4c, 0xb5, 0x97, 0x70,
	0xd0, 0x60, 0x1a, 0x4b, 0xc9, 0x0e, 0x59, 0x57, 0x60, 0x88, 0x12, 0x10, 0xca, 0xe9, 0xcc, 0x19,
	0xb9, 0xdc, 0x17, 0x60, 0xbf, 0xe9, 0x85, 0x3d, 0xb0, 0xec, 0x91, 0x4f, 0xc2, 0x14, 0x5f, 0xd0,
	0x42, 0xdf, 0x81, 0x8a, 0xa1, 0xf7, 0x89, 0x6d, 0xea, 0x81, 0xd6, 0x2d, 0xef, 0x3c, 0x78, 0x99,
	0x55, 0x35, 0xc4, 0x96, 0xa4, 0x34, 0x45, 0x1c, 0x68, 0x75, 0xc8, 0xb1, 0xfe, 0xfd, 0x12, 0x7c,
	0x6d, 0x22, 0x41, 0x50, 0xd5, 0x3b, 0x54, 0x95, 0xa6, 0x48, 0xef, 0x94, 0x2a, 0xcc, 0x6b, 0x5d,
	0xa9, 0x43, 0x1b, 0xd3, 0x68, 0x09, 0x16, 0x1e, 0x4b, 0x4d, 0x25, 0x68, 0x96, 0xd1, 0x22, 0x54,
	0xb4, 0x83, 0x2e, 0x66, 0xad, 0x19, 0x4a, 0xb5, 0x87, 0x65, 0xfa, 0x7b, 0x96, 0xf6, 0x74, 0x44,
	0xad, 0x8b, 0x69, 0x6b, 0x8e, 0xf6, 0x74, 0xba, 0x8c, 0xdf, 0x7c, 0x7d, 0x0f, 0xde, 0x98, 0x64,
	0xde, 0x74, 0xa8, 0x7d, 0x2c, 0xed, 0xab, 0x58, 0x16, 0x15, 0xa1, 0x84, 0x56, 0xa0, 0xda, 0x51,
	0x5b, 0x22, 0xee, 0x1d, 0xc8, 0x0f, 0xb1, 0x2c, 0x4c, 0xd7, 0xef, 0xa5, 0x54, 0xa3, 0x6b, 0x5b,
	0x2f, 0xa4, 0xa1, 0x63, 0xb0, 0x00, 0xc6, 0x8f, 0xec, 0x7b, 0x89, 0xa9, 0x54, 0x0c, 0xa8, 0xff,
	0xb0, 0xc4, 0xb4, 0x34, 0x24, 0x43, 0x9f, 0xc0, 0x82, 0x11, 0xca, 0x93, 0x5f, 0x5e, 0x37, 0x2f,
	0x10, 0xf9, 0xc1, 0x14, 0x8e, 0xf1, 0x29, 0xf1, 0x28, 0x1c, 0x97, 0xbf, 0x36, 0x15, 0x10, 0x47,
	0x53, 0x63, 0x2f, 0x83, 0x61, 0x63, 0x77, 0x05, 0x96, 0x4c, 0xdd, 0x27, 0x74, 0x6a, 0xaa, 0x4d,
	0x9c, 0x93, 0xfa, 0x1f, 0x97, 0x60, 0xf3, 0xa0, 0x73, 0xd8, 0x72, 0x0c, 0xbd, 0x6f, 0x7d, 0x57,
	0x7f, 0xda, 0x27, 0x6d, 0xdd, 0xd5, 0x07, 0xc4, 0x27, 0x2e, 0xbd, 0xc5, 0x4d, 0x72, 0xa2, 0x8f,
	0xfa, 0x61, 0x12, 0x24, 0x6c, 0xa2, 0xbb, 0x50, 0x09, 0x8f, 0x14, 0x9f, 0x02, 0x8a, 0xa7, 0x10,
	0x1e, 0xc6, 0x83, 0x29, 0x1c, 0x61, 0x51, 0x0a, 0x93, 0x4f, 0x8d, 0xbf, 0xcc, 0xa0, 0xfc, 0xa4,
	0x29, 0x45, 0x88, 0xb5, 0xbb, 0x08, 0x30, 0xa4, 0x53, 0x09, 0xe6, 0xf9, 0x3b, 0xec, 0x02, 0x29,
	0x7c, 0x9d, 0xa5, 0xc2, 0xb7, 0xf5, 0x01, 0xf1, 0x86, 0xba, 0x11, 0x9e, 0xf8, 0x18, 0x40, 0x8d,
	0x15, 0xe9, 0x13, 0x1a, 0xf1, 0x32, 0x63, 0xc5, 0x73, 0x36, 0x09, 0x10, 0x3d, 0x18, 0x6c, 0x24,
	0xaf, 0x56, 0x66, 0x0f, 0x3c, 0xbc, 0xc5, 0x2e, 0x1e, 0xbd, 0xdf, 0xa7, 0xde, 0x6e, 0xeb, 0x94,
	0x67, 0x72, 0x12, 0x90, 0x54, 0xbf, 0x11, 0x5e, 0x1b, 0x31, 0x04, 0xb5, 0x60, 0xb5, 0x9f, 0x91,
	0xab, 0x57, 0x9b, 0x63, 0xd6, 0xf0, 0x76, 0xbc, 0xf8, 0x22, 0xd1, 0xe3, 0x3c, 0x61, 0x90, 0x65,
	0xf4, 0x89, 0x3b, 0xb0, 0x6c, 0xcb, 0xf3, 0x2d, 0xa3, 0x75, 0xca, 0x7d, 0xf6, 0x2c, 0x38, 0x8f,
	0x69, 0xf0, 0xd0, 0x38, 0x0b, 0x46, 0xf7, 0xa1, 0x1a, 0x96, 0x15, 0x1c, 0x78, 0x03, 0xe6, 0xc8,
	0x57, 0x77, 0x36, 0xf8, 0xdc, 0xc2, 0x37, 0xee, 0xe8, 0x11, 0x3c, 0x81, 0x5a, 0xff, 0x8d, 0x12,
	0xa0, 0x0e, 0xb1, 0xcd, 0xb6, 0x7e, 0x9e, 0x4c, 0x26, 0xdc, 0x85, 0xaa, 0xed, 0x44, 0x24, 0x5c,
	0x37, 0xb2, 0x6f, 0x70, 0x49, 0x14, 0xf4, 0x6d, 0x58, 0x75, 0xc9, 0x17, 0x23, 0xe2, 0xf9, 0xb1,
	0xdf, 0x96, 0x79, 0xb2, 0x4e, 0x38, 0x74, 0x79, 0xdc, 0xfa, 0x7f, 0x94, 0x60, 0x1d, 0x07, 0xd0,
	0x8b, 0x27, 0x33, 0x73, 0xf9, 0x64, 0xee, 0xc2, 0x5a, 0xf2, 0xaa, 0x90, 0x3d, 0xe7, 0xde, 0xce,
	0xfb, 0x1f, 0x71, 0x9d, 0x2a, 0xea, 0x2a, 0xb8, 0x4c, 0x66, 0x92, 0x97, 0x09, 0xd5, 0x3e, 0x3e,
	0xe5, 0x3d, 0xd7, 0x19, 0xf0, 0xac, 0x49, 0x12, 0x44, 0x77, 0x8b, 0xbd, 0x75, 0x9d, 0x67, 0x1d,
	0xc4, 0x2c, 0xb8, 0xde, 0x80, 0x5b, 0x4d, 0x62, 0xf4, 0x2d, 0x9b, 0xf0, 0x85, 0xe2, 0x94, 0x30,
	0x26, 0xf2, 0x86, 0xeb, 0xbb, 0x70, 0xb3, 0xa1, 0xdb, 0x06, 0xe9, 0x7f, 0x05, 0x1e, 0x7f, 0x5d,
	0x86, 0xb5, 0x96, 0xf5, 0x9c, 0xfc, 0x6c, 0x12, 0xe1, 0x45, 0x09, 0xeb, 0xf2, 0x44, 0x09, 0xeb,
	0x99, 0x97, 0x4b, 0x58, 0xcf, 0x5e, 0x25, 0x61, 0xcd, 0xc3, 0xe7, 0xb9, 0x74, 0xf8, 0xfc, 0x26,
	0x2c, 0x7b, 0x54, 0xb0, 0xb6, 0x11, 0x16, 0x9a, 0xcc, 0xb3, 0x3d, 0xcd, 0x40, 0xe9, 0x7c, 0x99,
	0x2d, 0x3e, 0x39, 0xf1, 0x88, 0xcf, 0x4e, 0xe9, 0x12, 0x4e, 0x40, 0x7e, 0xaa, 0xe9, 0xa4, 0x1f,
	0xcc, 0xc0, 0x72, 0xc7, 0xb7, 0x8c, 0x67, 0xc4, 0x1d, 0x9f, 0xb3, 0x48, 0x3b, 0xe7, 0xd3, 0x39,
	0xe7, 0x3c, 0xe7, 0x60, 0x97, 0x8b, 0x1c, 0xec, 0xa4, 0x8b, 0x3e, 0x93, 0xcf, 0xe0, 0x45, 0x59,
	0x91, 0xd9, 0x4c, 0x56, 0xe4, 0x6a, 0xaf, 0x92, 0x69, 0x37, 0xbe, 0x92, 0x73, 0xe3, 0xd3, 0x81,
	0xc4, 0x42, 0x2e, 0x90, 0xb8, 0x5a, 0x4a, 0x29, 0x7c, 0xc1, 0xdb, 0xa3, 0x36, 0x9b, 0xf3, 0xac,
	0x06, 0x6a, 0x99, 0x85, 0x53, 0xce, 0x31, 0x2c, 0x0c, 0xec, 0x17, 0x99, 0x20, 0xf2, 0x1d, 0x74,
	0x9e, 0x96, 0x27, 0xda, 0xd6, 0x80, 0x55, 0xb7, 0x2c, 0xb1, 0xd4, 0x4b, 0x02, 0x42, 0x9d, 0xdc,
	0xa1, 0x9d, 0xd3, 0x89, 0x14, 0xec, 0x25, 0x55, 0xe2, 0x77, 0x67, 0x60, 0x65, 0xcf, 0x19, 0xb9,
	0xd8, 0xf9, 0x32, 0xb4, 0xfe, 0xe8, 0x3e, 0xcc, 0x33, 0x14, 0x9e, 0x99, 0xbd, 0xbc, 0x58, 0x2a,
	0x44, 0x47, 0x1f, 0xc2, 0xdc, 0x89, 0xe3, 0xf8, 0x5c, 0xf9, 0x2f, 0x27, 0xe4, 0xd8, 0xe8, 0x3d,
	0x98, 0x0f, 0x2a, 0x91, 0xbc, 0x5a, 0x25, 0x15, 0x3b, 0xa4, 0xab, 0xae, 0x70, 0x88, 0x85, 0x76,
	0x61, 0xc5, 0x4c, 0x67, 0xb5, 0xb9, 0x01, 0x0b, 0xaf, 0xb2, 0x4c, 0xce, 0xfb, 0x60, 0x0a, 0x67,
	0x09, 0xd0, 0xe7, 0x34, 0xe6, 0x2e, 0x9c, 0xd7, 0x64, 0x35, 0x62, 0x07, 0x53, 0x78, 0x1c, 0x03,
	0xf4, 0x31, 0x2c, 0x5a, 0x89, 0x47, 0x7f, 0x7e, 0xbd, 0xad, 0x85, 0xc9, 0xac, 0x44, 0xd7, 0xc1,
	0x14, 0x4e, 0xa1, 0x52, 0xd2, 0xe7, 0x89, 0x44, 0x0e, 0xbf, 0xc4, 0xd6, 0x0a, 0x72, 0x3c, 0x94,
	0x34, 0x89, 0x4a, 0xa5, 0xd2, 0x4f, 0x1b, 0x68, 0x76, 0xbe, 0x62, 0xa9, 0x64, 0xcc, 0x37, 0x95,
	0x4a, 0x86, 0x60, 0x77, 0x9e, 0xa7, 0xfb, 0xeb, 0x7f, 0x30, 0x03, 0x9b, 0x61, 0x95, 0x62, 0x56,
	0x43, 0xee, 0xc2, 0x5a, 0xe8, 0x1a, 0x34, 0x82, 0xad, 0x67, 0xaf, 0x63, 0x81, 0x49, 0x2c, 0xea,
	0x42, 0x77, 0x00, 0x9d, 0x45, 0xcc, 0xe8, 0x9e, 0x33, 0x82, 0xc0, 0x9d, 0x29, 0xe8, 0x41, 0xfb,
	0xb0, 0x92, 0x2e, 0x7f, 0x0c, 0x35, 0xe3, 0x95, 0x4c, 0x01, 0x65, 0x46, 0x43, 0xb2, 0x54, 0xcc,
	0xde, 0x72, 0x14, 0xd9, 0x0c, 0xb3, 0xca, 0x31, 0xe4, 0x27, 0xa2, 0x49, 0x77, 0x60, 0x35, 0x1c,
	0x56, 0xa3, 0xb2, 0x8b, 0x9f, 0x0a, 0x0f, 0xa6, 0x70, 0xbe, 0xeb, 0xff, 0x83, 0x76, 0xfc, 0xc5,
	0x34, 0xac, 0x64, 0xdc, 0xc5, 0xac, 0x05, 0x2a, 0x4f, 0x96, 0x01, 0x7d, 0x08, 0xc2, 0x59, 0x66,
	0x2f, 0xf9, 0xaa, 0x6e, 0x67, 0xb6, 0x3a, 0xa3, 0x85, 0x38, 0x47, 0x47, 0x97, 0x78, 0x92, 0x46,
	0xca, 0x6c, 0x66, 0x86, 0x05, 0x5d, 0x62, 0x86, 0x80, 0x99, 0x85, 0xe2, 0x01, 0xb3, 0x66, 0xa1,
	0x18, 0x8b, 0x99, 0x85, 0xe2, 0xae, 0xdd, 0x0a, 0xb5, 0x8f, 0xee, 0x40, 0xf7, 0xeb, 0x7f, 0x57,
	0x82, 0x1b, 0x19, 0xd5, 0x25, 0xc3, 0x7e, 0x94, 0x6f, 0xa1, 0x5e, 0x0d, 0xe9, 0x13, 0xc3, 0x27,
	0x66, 0x54, 0xa4, 0x94, 0x80, 0xd0, 0x03, 0x18, 0xb6, 0x9a, 0x89, 0xea, 0xd8, 0x20, 0xd4, 0x29,
	0xea, 0x7a, 0xc9, 0xcd, 0x79, 0x03, 0x96, 0xa2, 0x51, 0x13, 0xe5, 0xae, 0x69, 0x60, 0xfd, 0x7b,
	0x25, 0x58, 0x69, 0xe8, 0xbe, 0xde, 0x77, 0x4e, 0x3b, 0xb6, 0x3e, 0xf4, 0xce, 0x1c, 0x1f, 0x7d,
	0x04, 0x8b, 0x46, 0x00, 0x62, 0xfa, 0xcc, 0xf7, 0xa1, 0x48, 0xc7, 0x71, 0x0a, 0x31, 0x7e, 0x6f,
	0x9c, 0x4e, 0xbe, 0x37, 0x66, 0x5e, 0xd0, 0xcb, 0xb9, 0x17, 0xf4, 0xfa, 0x7f, 0x4f, 0xb3, 0x6c,
	0xb1, 0x39, 0x32, 0xfc, 0xe4, 0x24, 0x86, 0x01, 0xe8, 0xf2, 0x49, 0x24, 0x11, 0xd9, 0xf3, 0x24,
	0x6f, 0x87, 0x19, 0xe9, 0x18, 0x30, 0xe6, 0x49, 0x34, 0x33, 0xc5, 0x99, 0xfc, 0x23, 0x7f, 0x36,
	0x57, 0x35, 0x5b, 0x90, 0xab, 0xda, 0x86, 0x95, 0xa1, 0x6b, 0x19, 0x44, 0x8c, 0x63, 0x8c, 0xb9,
	0x20, 0x38, 0xc8, 0x80, 0xa9, 0x8e, 0xb8, 0xc4, 0xd7, 0xad, 0x3e, 0x71, 0x65, 0x93, 0x9b, 0xd2,
	0x04, 0x24, 0x74, 0xed, 0x2a, 0xb1, 0x6b, 0xf7, 0x0e, 0xac, 0x26, 0x57, 0x19, 0x3c, 0xbe, 0x06,
	0x6f, 0x39, 0xf9, 0x0e, 0x3a, 0x5b, 0xe6, 0xa9, 0x30, 0x90, 0x6c, 0xf2, 0x0a, 0x8d, 0x14, 0xac,
	0xfe, 0x8f, 0x25, 0x58, 0xe6, 0x42, 0x8f, 0x23, 0xaa, 0x79, 0xce, 0x2b, 0x73, 0xf6, 0x32, 0x9b,
	0x83, 0x43, 0x34, 0xea, 0x57, 0x3d, 0x1d, 0x79, 0x96, 0x4d, 0x3c, 0x4f, 0xfd, 0xd2, 0x26, 0xee,
	0xc3, 0xe8, 0x15, 0x20, 0x07, 0xa7, 0xdc, 0xb9, 0xb6, 0x70, 0x23, 0xb1, 0x11, 0x55, 0x39, 0xa7,
	0xf4, 0x0f, 0x87, 0x68, 0x2f, 0xeb, 0x2a, 0x4f, 0x03, 0x0a, 0xaa, 0xa6, 0xec, 0xe7, 0x56, 0x6c,
	0xe2, 0x6e, 0x40, 0x85, 0x95, 0x0a, 0xd2, 0x29, 0xf2, 0x8a, 0xd5, 0xb0, 0xcd, 0x9c, 0x38, 0x86,
	0xcc, 0xf6, 0x36, 0x58, 0x40, 0x02, 0x42, 0x97, 0x19, 0xb4, 0x12, 0x0f, 0x0a, 0x65, 0xb6, 0xb5,
	0x39, 0x38, 0xd5, 0x3f, 0xc6, 0x97, 0x25, 0x30, 0x78, 0x95, 0x6a, 0x04, 0xc8, 0xc7, 0x08, 0xb3,
	0x97, 0x94, 0xf0, 0x66, 0x62, 0x95, 0x8c, 0x48, 0xe6, 0x27, 0x13, 0x09, 0x81, 0xd5, 0x26, 0x79,
	0x6e, 0x19, 0xa4, 0x93, 0xb8, 0xfa, 0xde, 0x84, 0x65, 0x93, 0x78, 0xbe, 0x65, 0xb3, 0x79, 0xc7,
	0x62, 0xc9, 0x40, 0xd1, 0x36, 0xcc, 0x0f, 0x2e, 0x4c, 0x11, 0x84, 0xdd, 0xf5, 0x46, 0x34, 0xcc,
	0xb9, 0x6d, 0xc4, 0x37, 0x2c, 0xf2, 0x88, 0x6b, 0xe9, 0x7d, 0xeb, 0xbb, 0xc4, 0x7c, 0x32, 0xe8,
	0xef, 0x9e, 0xfb, 0xac, 0x54, 0x9b, 0x2e, 0xbb, 0xa0, 0xa7, 0xfe, 0x57, 0x2b, 0x30, 0x1f, 0xd2,
	0xd2, 0x53, 0x17, 0x54, 0xcf, 0x06, 0x32, 0x0f, 0x33, 0xc4, 0x09, 0x18, 0x3a, 0x85, 0x5b, 0xde,
	0x65, 0x05, 0x9f, 0xd5, 0x9d, 0xd7, 0xf9, 0x9c, 0x2f, 0x2a, 0xf8, 0xc4, 0x17, 0x32, 0xa2, 0x16,
	0x69, 0xc2, 0xab, 0x3f, 0x73, 0xf1, 0x7f, 0x93, 0x55, 0x12, 0x27, 0x12, 0xe9, 0x5c, 0xff, 0xc7,
	0x64, 0xd9, 0x33, 0xc8, 0xe8, 0xc1, 0x15, 0x2f, 0xff, 0xdc, 0xd5, 0x8f, 0x5a, 0xb0, 0x46, 0xf2,
	0xe5, 0x3d, 0x3c, 0x42, 0xb8, 0x31, 0xbe, 0x00, 0x08, 0x17, 0x91, 0xd1, 0xf9, 0x64, 0xdd, 0xae,
	0xf9, 0x8b, 0xdc, 0xae, 0xbc, 0xd3, 0xf5, 0x11, 0x2c, 0xea, 0x89, 0xd2, 0x08, 0x66, 0xe7, 0x62,
	0x49, 0x26, 0xab, 0x26, 0x70, 0x0a, 0x91, 0x12, 0xa6, 0x5c, 0xa8, 0x85, 0xb1, 0x2e, 0x54, 0xc6,
	0x81, 0x7a, 0x15, 0x66, 0x0c, 0xbd, 0xdf, 0x67, 0x01, 0x62, 0x75, 0xa7, 0x9a, 0xf8, 0xbc, 0x02,
	0xb3, 0x0e, 0x86, 0x70, 0xa6, 0x07, 0xb5, 0x6c, 0x09, 0x84, 0x33, 0xdd, 0xc7, 0xac, 0x83, 0xae,
	0x7a, 0x98, 0x7e, 0x85, 0x64, 0x31, 0x61, 0xca, 0x46, 0x26, 0x7b, 0x71, 0x16, 0x1d, 0xa9, 0x70,
	0xcd, 0x28, 0x78, 0xa0, 0x61, 0x31, 0x63, 0x9c, 0x16, 0x2e, 0x7a, 0xc3, 0xc1, 0x85, 0x84, 0xc1,
	0xcb, 0x63, 0x71, 0x14, 0xb4, 0x3c, 0x51, 0x0c, 0x37, 0x36, 0x06, 0xfa, 0x7e, 0x09, 0xde, 0x3e,
	0xd1, 0x3d, 0x1f, 0xb3, 0x62, 0x39, 0xff, 0x11, 0x39, 0xbf, 0xb0, 0xa6, 0x7a, 0x65, 0xf2, 0x23,
	0x76, 0x05, 0xb6, 0x48, 0xa6, 0x96, 0x23, 0x9b, 0xb5, 0x64, 0x01, 0x74, 0xfc, 0x31, 0x56, 0x3e,
	0xad, 0x89, 0x0b, 0x88, 0xe8, 0x09, 0xe8, 0xe7, 0x73, 0x60, 0xec, 0xb9, 0x3e, 0x3e, 0x01, 0x05,
	0x59, 0x32, 0x5c, 0x44, 0x86, 0x30, 0xac, 0xbb, 0x45, 0x49, 0x4c, 0x56, 0x9a, 0x1f, 0x17, 0x3e,
	0x14, 0x26, 0x3a, 0x71, 0x31, 0x29, 0x35, 0x63, 0xe6, 0x05, 0xf9, 0x42, 0x5e, 0xd6, 0x1f, 0xca,
	0xf8, 0xa2, 0xd4, 0x22, 0xbe, 0x90, 0x11, 0x32, 0xe1, 0xa6, 0x31, 0x3e, 0xa7, 0xc8, 0x3f, 0x04,
	0xa8, 0x47, 0x27, 0x64, 0x2c, 0x26, 0xbe, 0x88, 0x0d, 0x3d, 0x2e, 0x7e, 0x3a, 0xc6, 0x60, 0xdf,
	0x0a, 0x8c, 0x4f, 0x58, 0x67, 0xd1, 0xa9, 0xd5, 0xf4, 0x52, 0x09, 0x2f, 0xf6, 0xf5, 0x40, 0x6c,
	0x35, 0xd3, 0xd9, 0x30, 0x9c, 0x41, 0xa6, 0xca, 0x73, 0x9a, 0x73, 0x02, 0x6a, 0xb7, 0x52, 0xca,
	0x93, 0xf7, 0x12, 0x70, 0x01, 0x11, 0xd2, 0xe1, 0x86, 0x3f, 0xd6, 0xdf, 0xaf, 0xbd, 0xc2, 0x58,
	0xbe, 0x56, 0x9c, 0xf5, 0x48, 0x20, 0xe2, 0x0b, 0x98, 0xd0, 0xc5, 0x0e, 0x53, 0xbe, 0x58, 0xed,
	0x76, 0x6a, 0xb1, 0x69, 0x47, 0x0d, 0x67, 0x90, 0xd1, 0x1e, 0xac, 0x9a, 0xd9, 0xfb, 0xbd, 0xf6,
	0x6a, 0xea, 0x83, 0xc7, 0xdc, 0xfd, 0x8f, 0xf3, 0x24, 0x09, 0x3e, 0xf1, 0x05, 0x5e, 0xdb, 0x2a,
	0xe2, 0x13, 0xf7, 0xe3, 0x3c, 0x49, 0xdd, 0x07, 0x88, 0xd3, 0xd0, 0xe9, 0xef, 0x76, 0x4a, 0xd9,
	0xef, 0x76, 0x36, 0x60, 0xee, 0xc4, 0x75, 0x06, 0x87, 0xc1, 0x4d, 0x5d, 0xc1, 0xbc, 0xc5, 0x4b,
	0x4a, 0xca, 0x61, 0x49, 0x49, 0xf6, 0xab, 0xa2, 0x99, 0xdc, 0x57, 0x45, 0xf5, 0x3f, 0x5a, 0x87,
	0xea, 0x63, 0xf2, 0x74, 0x8f, 0xe8, 0xd4, 0x98, 0x79, 0xe8, 0x21, 0x2c, 0xf5, 0xf5, 0xa7, 0xa4,
	0xef, 0xf1, 0x60, 0x8a, 0x3f, 0x03, 0xbf, 0xc1, 0x57, 0x92, 0x40, 0xbd, 0xf3, 0x58, 0xda, 0xed,
	0xed, 0x49, 0xa2, 0xd6, 0xc5, 0x52, 0xa7, 0xb7, 0xd7, 0x12, 0xf7, 0x71, 0x9a, 0x14, 0x7d, 0x07,
	0x36, 0x9e, 0x3b, 0xd6, 0x50, 0xb6, 0x4d, 0xeb, 0xb9, 0x65, 0x8e, 0xf4, 0xbe, 0x3a, 0xf2, 0x4f,
	0x1d, 0xcb, 0x3e, 0xe5, 0x95, 0x2a, 0x93, 0x31, 0x1d, 0xc3, 0x03, 0x3d, 0xe0, 0xbe, 0xa9, 0x77,
	0xf4, 0x01, 0x5b, 0xf1, 0xa4, 0xfc, 0x22, 0x2a, 0xd4, 0x82, 0xe5, 0xf0, 0x77, 0xc3, 0x25, 0x61,
	0x20, 0x3e, 0x29, 0x9f, 0x0c, 0x2d, 0xe5, 0x66, 0x9c, 0xe9, 0xf6, 0x29, 0xcf, 0x7c, 0x1f, 0xed,
	0x30, 0x8f, 0x63, 0x62, 0x6e, 0x69, 0x5a, 0x2a, 0xbb, 0x2f, 0x46, 0xc4, 0x3d, 0xef, 0xf8, 0xba,
	0x3f, 0xf2, 0x8e, 0x3e, 0x88, 0x9d, 0xdf, 0xb9, 0xab, 0xc8, 0xae, 0x98, 0x07, 0xdb, 0xe5, 0x84,
	0x8d, 0xf6, 0xf8, 0xb3, 0xf8, 0xa4, 0xbb, 0x9c, 0x24, 0x45, 0x4d, 0x00, 0x36, 0xca, 0x91, 0x1d,
	0x96, 0xa8, 0x4e, 0xca, 0x28, 0x41, 0x97, 0xd7, 0x15, 0xd9, 0x36, 0x9c, 0x01, 0xd5, 0x95, 0x85,
	0x97, 0xd7, 0x95, 0x90, 0x07, 0xc2, 0xb0, 0x1a, 0x7d, 0x75, 0x6a, 0x11, 0xef, 0x33, 0x3a, 0x2e,
	0xaf, 0xe5, 0x9e, 0x8c, 0x71, 0x9e, 0x9c, 0xea, 0xdf, 0x30, 0x30, 0xe3, 0x1e, 0xf3, 0x80, 0x26,
	0xd6, 0xbf, 0x90, 0x0a, 0xb5, 0x41, 0xe0, 0x06, 0xb8, 0xad, 0x1b, 0xcf, 0x82, 0x49, 0x2d, 0x5e,
	0x81, 0x53, 0x8e, 0x1a, 0x69, 0x80, 0x52, 0x9b, 0xb3, 0x67, 0xd9, 0x7a, 0x9f, 0x39, 0x4b, 0x93,
	0xf2, 0x2c, 0xa0, 0xa7, 0x3b, 0x1c, 0x1c, 0x6c, 0xc9, 0xb4, 0x7c, 0xe6, 0x26, 0x4d, 0xbc, 0xc3,
	0x31, 0x1d, 0xda, 0x83, 0x2a, 0x7b, 0x63, 0xe8, 0x0e, 0xfb, 0x8e, 0x6e, 0x32, 0xff, 0x67, 0x52,
	0x36, 0x49, 0x42, 0x74, 0x02, 0x37, 0x13, 0x4d, 0x6c, 0x19, 0x67, 0x9f, 0x25, 0xf6, 0x86, 0xb9,
	0x27, 0x93, 0xf2, 0xbd, 0x88, 0x11, 0xfa, 0x16, 0xcc, 0x3f, 0xa7, 0xaa, 0x79, 0xb4, 0xc3, 0xeb,
	0x0e, 0x27, 0xe3, 0x19, 0x12, 0xd1, 0xdd, 0x65, 0xee, 0x74, 0x58, 0x4f, 0xda, 0x75, 0xfb, 0xec,
	0x4b, 0xa5, 0x89, 0x77, 0x37, 0x4b, 0x4d, 0x4f, 0xad, 0xc7, 0x8e, 0x32, 0xd6, 0xed, 0x67, 0xf4,
	0x68, 0xac, 0x5f, 0xe5, 0xd4, 0xa6, 0x48, 0xd1, 0x11, 0xac, 0xa5, 0xcf, 0x0a, 0x0b, 0x04, 0x98,
	0x33, 0x36, 0x29, 0xc7, 0x22, 0x06, 0x54, 0x03, 0xfd, 0x33, 0xcb, 0x35, 0xdb, 0xba, 0xeb, 0x9f,
	0x73, 0x77, 0xc3, 0x63, 0x8e, 0xd8, 0xc4, 0x1a, 0x98, 0xa7, 0x47, 0x26, 0xdc, 0x38, 0x61, 0x2e,
	0xa0, 0xed, 0xf7, 0xcf, 0xa3, 0x4f, 0x38, 0x79, 0x59, 0x21, 0x73, 0xbf, 0x26, 0xe5, 0x7e, 0x01,
	0x1f, 0x6a, 0x83, 0xb8, 0x4d, 0xbf, 0xf7, 0xd0, 0xb1, 0xec, 0x36, 0x71, 0x07, 0x96, 0xe7, 0x85,
	0x9f, 0x6c, 0x4e, 0x6c, 0x83, 0x8a, 0x79, 0xd0, 0xfb, 0xc1, 0x25, 0x06, 0xb1, 0xfd, 0x48, 0x2a,
	0x37, 0xae, 0x72, 0x3f, 0xa4, 0x69, 0xa9, 0x76, 0x86, 0x89, 0xa1, 0x9b, 0x57, 0xd1, 0xce, 0x30,
	0x4d, 0xa4, 0xc0, 0x8a, 0xe7, 0xeb, 0xae, 0x4b, 0xcc, 0x68, 0x3a, 0xb7, 0xae, 0xc0, 0x27, 0x4b,
	0x4c, 0x75, 0x93, 0xaa, 0x03, 0xf3, 0x0e, 0x69, 0x88, 0xc8, 0x5c, 0xbc, 0x89, 0x75, 0x33, 0x45,
	0x4a, 0xe7, 0x96, 0xf5, 0x83, 0x6f, 0x5f, 0x65, 0x6e, 0x59, 0xaf, 0xf8, 0x0c, 0x6e, 0x65, 0x40,
	0x71, 0x79, 0xb5, 0xe5, 0x9f, 0x33, 0xa7, 0x6f, 0x52, 0xe6, 0x17, 0x72, 0xa2, 0xf7, 0x4c, 0x54,
	0xf4, 0xca, 0x11, 0x3c, 0xe6, 0x0b, 0x4e, 0x7c, 0xcf, 0xe4, 0xc8, 0xe9, 0x49, 0x25, 0x3b, 0x52,
	0xb2, 0xf8, 0x92, 0x7a, 0x8d, 0xb5, 0xd7, 0xae, 0x72, 0x52, 0x0b, 0x18, 0x50, 0xfb, 0x94, 0xd6,
	0xa9, 0xa3, 0x9d, 0x5a, 0xfd, 0x2a, 0xf6, 0x29, 0x4b, 0x5d, 0x7f, 0x02, 0xab, 0x39, 0x34, 0xb4,
	0x02, 0x55, 0x45, 0xd5, 0x7a, 0x1d, 0x4d, 0xc4, 0x9a, 0xd4, 0x14, 0xa6, 0xd0, 0x2a, 0x2c, 0xed,
	0xa9, 0xb8, 0x21, 0xf5, 0xba, 0xed, 0x7d, 0x2c, 0x36, 0xa5, 0xa0, 0x0a, 0xad, 0x29, 0x1d, 0x49,
	0x2d, 0xb5, 0x7d, 0x28, 0x29, 0x9a, 0x30, 0x8d, 0x96, 0x01, 0xda, 0x58, 0x6d, 0x76, 0x1b, 0xac,
	0xba, 0xb6, 0x5c, 0xff, 0x51, 0x09, 0x36, 0x35, 0xfd, 0x69, 0x9f, 0xf8, 0xc9, 0x65, 0x78, 0x2c,
	0x67, 0x9f, 0xaa, 0x4c, 0x0b, 0xea, 0x53, 0x62, 0x00, 0xf5, 0x80, 0x47, 0xb6, 0x4b, 0x74, 0xb3,
	0x71, 0xa6, 0xfb, 0x61, 0x59, 0x45, 0x12, 0x84, 0xee, 0x00, 0xb2, 0x29, 0xd3, 0x30, 0xae, 0x08,
	0xd2, 0xc4, 0x41, 0xe2, 0xbf, 0xa0, 0x07, 0x35, 0x61, 0x29, 0x05, 0xad, 0xcd, 0xa6, 0x0a, 0x9e,
	0x92, 0x13, 0x8c, 0x74, 0xe4, 0xc4, 0xc1, 0x69, 0xa2, 0xfa, 0x9f, 0x96, 0x60, 0x73, 0x0c, 0xea,
	0x64, 0x45, 0xdf, 0x13, 0x67, 0x18, 0xd1, 0xdb, 0x20, 0xf0, 0x9f, 0xf1, 0xa3, 0x7f, 0x99, 0xc9,
	0x29, 0x07, 0x9f, 0x20, 0x60, 0xf8, 0x9b, 0x12, 0x5c, 0x7b, 0x4c, 0x9e, 0xfe, 0xfc, 0xf7, 0xe1,
	0x9b, 0xb0, 0x9c, 0x82, 0x7a, 0x7c, 0x23, 0xd6, 0x63, 0xed, 0x4d, 0xca, 0x3f, 0x83, 0x5c, 0xff,
	0xb5, 0x2a, 0x54, 0x79, 0x18, 0xce, 0xa6, 0xff, 0x04, 0x50, 0xf8, 0x30, 0x91, 0xf9, 0xdf, 0x1c,
	0xcb, 0x3b, 0xdb, 0x61, 0x44, 0x19, 0xe3, 0xdf, 0x69, 0x8b, 0xc7, 0x54, 0x59, 0x83, 0xff, 0x09,
	0xd1, 0xe8, 0x62, 0x2c, 0x29, 0x8d, 0x63, 0x5c, 0xc0, 0x63, 0xb2, 0x0a, 0x2a, 0x83, 0x58, 0xcf,
	0x83, 0xa7, 0x80, 0xa8, 0x82, 0x2a, 0x02, 0xa1, 0x6f, 0xc1, 0x5c, 0x70, 0x7b, 0xf3, 0x00, 0xe5,
	0xcd, 0xcb, 0xe6, 0x13, 0x94, 0x3e, 0x63, 0x4e, 0x85, 0x76, 0xe0, 0x9a, 0xef, 0xea, 0xb6, 0x17,
	0xfc, 0x53, 0x8e, 0x74, 0x19, 0xd6, 0x0c, 0x2e, 0xec, 0x2b, 0x2e, 0x5b, 0x9b, 0x9b, 0xbc, 0x6c,
	0xad, 0xa8, 0xec, 0x6b, 0x9e, 0x8d, 0x97, 0x05, 0xb3, 0x12, 0x9b, 0x11, 0x35, 0x33, 0x43, 0xd7,
	0x71, 0x4e, 0x88, 0xc9, 0x3f, 0xc6, 0x49, 0x03, 0xd1, 0x8d, 0x44, 0x49, 0x66, 0xf0, 0xae, 0x1d,
	0x17, 0x5f, 0xee, 0xc3, 0x82, 0xff, 0xc2, 0x0e, 0xe2, 0x1c, 0xee, 0xd7, 0xbf, 0x75, 0x99, 0x8c,
	0xb4, 0x27, 0x0a, 0x17, 0x53, 0x4c, 0x5b, 0xff, 0x10, 0xd6, 0x0b, 0x37, 0x16, 0x5d, 0x03, 0xa1,
	0xab, 0x3c, 0x52, 0xd4, 0xc7, 0x4a, 0x04, 0x13, 0xa6, 0xd0, 0x3c, 0x94, 0x65, 0x05, 0x0b, 0xa5,
	0xfa, 0x3f, 0x97, 0x60, 0xad, 0x60, 0x07, 0x10, 0x82, 0xe5, 0x90, 0x2c, 0x80, 0x08, 0x53, 0xdc,
	0xb8, 0x35, 0xa4, 0x4e, 0x47, 0x56, 0xf6, 0x83, 0xda, 0xf4, 0x4e, 0x60, 0xf6, 0x10, 0x2c, 0x2b,
	0x92, 0xd4, 0xec, 0x69, 0x6a, 0x4f, 0x6c, 0x34, 0xa4, 0xb6, 0x16, 0x14, 0x03, 0x37, 0xd4, 0xc3,
	0x76, 0x4b, 0xd2, 0x24, 0x61, 0x06, 0x6d, 0x00, 0x6a, 0xa8, 0xdd, 0x56, 0xb3, 0x47, 0x6d, 0x6a,
	0x04, 0x67, 0x85, 0xc1, 0x58, 0xda, 0xeb, 0x2a, 0x4d, 0xa9, 0x29, 0xcc, 0xa1, 0x2a, 0xcc, 0x4b,
	0x4f, 0xda, 0x32, 0x96, 0x9a, 0xc2, 0x7c, 0xd0, 0xf5, 0x50, 0x6a, 0x50, 0xeb, 0x5b, 0x41, 0x4b,
	0xb0, 0xd0, 0x10, 0x95, 0x86, 0xd4, 0x6a, 0x49, 0x4d, 0x61, 0x01, 0xad, 0xc3, 0xea, 0x63, 0x51,
	0xd6, 0x64, 0x65, 0xbf, 0xb7, 0xa7, 0xe2, 0x5e, 0x5b, 0x3c, 0x96, 0xb0, 0x00, 0x94, 0x01, 0x07,
	0x0b, 0xd5, 0xfa, 0x3f, 0xcd, 0xc0, 0x46, 0xb1, 0xe4, 0x28, 0x1e, 0x5f, 0x5e, 0x60, 0xd8, 0xdb,
	0x92, 0xd2, 0xa4, 0xbc, 0x3a, 0x92, 0xd6, 0x6d, 0x0b, 0x25, 0x74, 0x03, 0x36, 0x42, 0x10, 0x96,
	0x1a, 0x92, 0x7c, 0x24, 0x61, 0xde, 0x37, 0x4d, 0x97, 0x2d, 0x2b, 0x32, 0x5d, 0x62, 0x15, 0xe6,
	0x3b, 0xdd, 0x06, 0x15, 0x88, 0x30, 0xc3, 0x26, 0xc8, 0xd7, 0xd5, 0x14, 0x66, 0x59, 0xf5, 0xb3,
	0x28, 0xb7, 0xd8, 0xb2, 0x56, 0xa0, 0x1a, 0xfc, 0xee, 0x61, 0xb9, 0xf3, 0x48, 0x98, 0xa7, 0xb3,
	0xe7, 0x80, 0x84, 0x40, 0x2b, 0xe8, 0x36, 0xdc, 0x08, 0xf1, 0xc2, 0x41, 0x13, 0xfd, 0x0b, 0x74,
	0x08, 0xde, 0xdf, 0x14, 0x05, 0x40, 0x6b, 0xb0, 0x12, 0x35, 0x7b, 0x7b, 0xb2, 0x22, 0xb6, 0x84,
	0x2a, 0x12, 0x60, 0x31, 0x14, 0x28, 0x5d, 0xaf, 0xb0, 0x48, 0x97, 0x17, 0x40, 0x7a, 0x7c, 0x42,
	0x4b, 0xe8, 0x16, 0xd4, 0x52, 0xa0, 0xe4, 0x30, 0xcb, 0x54, 0x65, 0xd2, 0xbd, 0x4d, 0x51, 0x58,
	0xa1, 0x8b, 0xe0, 0x7b, 0xc3, 0xf8, 0x0a, 0x94, 0xaf, 0xd8, 0xd5, 0x0e, 0x7a, 0xc1, 0xb6, 0x48,
	0x4d, 0x61, 0x15, 0xbd, 0x06, 0xaf, 0x24, 0x40, 0x05, 0xcc, 0x11, 0x55, 0x84, 0x3c, 0x8a, 0xb0,
	0x46, 0xe7, 0xdd, 0x50, 0x5b, 0x2d, 0xa9, 0x41, 0xf7, 0x4a, 0xd6, 0x84, 0x6b, 0x74, 0x79, 0x21,
	0x24, 0x94, 0xf2, 0x3a, 0xd5, 0xb4, 0x10, 0xc8, 0x49, 0x37, 0xd0, 0x26, 0xac, 0xa5, 0x61, 0x81,
	0x98, 0x37, 0xe9, 0x42, 0xc2, 0x8e, 0x48, 0x93, 0x6a, 0x49, 0xbe, 0xa1, 0xb2, 0x5d, 0x4f, 0xa2,
	0x46, 0xeb, 0xb9, 0x11, 0x68, 0x6d, 0x12, 0xda, 0xa2, 0x8b, 0xb8, 0x59, 0xff, 0x87, 0x1b, 0xb0,
	0x9c, 0x36, 0xd3, 0xf1, 0xdd, 0x37, 0xfd, 0x33, 0xbf, 0xfb, 0xa4, 0x8c, 0x95, 0x7d, 0xb7, 0xf0,
	0x22, 0x61, 0x9e, 0x50, 0xf8, 0x65, 0x51, 0x91, 0xb1, 0xcd, 0x5c, 0xa1, 0xb3, 0xf9, 0xff, 0xe4,
	0xb3, 0x01, 0x73, 0xd6, 0xa9, 0xed, 0xb8, 0x41, 0x5e, 0xbe, 0x82, 0x79, 0x8b, 0x7d, 0xe2, 0x18,
	0xb8, 0xd5, 0xec, 0xd9, 0xb6, 0x82, 0xc3, 0x26, 0xbd, 0x5b, 0x9f, 0xba, 0x8e, 0x6e, 0x1a, 0xba,
	0xe7, 0xf3, 0x6f, 0xb8, 0x63, 0x00, 0xb5, 0x8c, 0xc3, 0x91, 0x77, 0xc6, 0x1e, 0x4f, 0xd7, 0x02,
	0xcb, 0x18, 0xb6, 0xd1, 0x3d, 0x58, 0x67, 0x41, 0x6e, 0xc3, 0x1a, 0x9e, 0x11, 0xd7, 0x27, 0x2f,
	0x7c, 0x5e, 0xc6, 0x78, 0x8d, 0x3d, 0x26, 0x16, 0x77, 0xd2, 0xf1, 0x06, 0xa3, 0xbe, 0x6f, 0xb1,
	0xf1, 0xd6, 0x83, 0xf1, 0x22, 0x00, 0x9d, 0xe7, 0xc8, 0xed, 0xb3, 0x0a, 0x8c, 0xe0, 0xff, 0xea,
	0x84, 0x4d, 0x4a, 0x37, 0x72, 0xfb, 0xbc, 0x20, 0x74, 0x33, 0xa0, 0x8b, 0x00, 0xe8, 0x18, 0x56,
	0xb8, 0xd0, 0x3b, 0xfe, 0xe8, 0x29, 0xfb, 0xd8, 0x28, 0x08, 0xdd, 0xde, 0x9b, 0x58, 0xd2, 0xdd,
	0x5d, 0xf6, 0xf5, 0x45, 0x96, 0x0f, 0xfb, 0xb4, 0xa8, 0x4f, 0x74, 0xf7, 0x90, 0x2e, 0x87, 0x85,
	0x6b, 0x15, 0x9c, 0x80, 0x04, 0x62, 0x88, 0x48, 0xa2, 0x32, 0x74, 0x1a, 0x83, 0x95, 0xb7, 0x17,
	0x70, 0x71, 0x27, 0x15, 0xac, 0x39, 0xe2, 0x4f, 0xd7, 0x37, 0x99, 0x23, 0x12, 0xb5, 0xe9, 0x26,
	0x06, 0xc9, 0x8d, 0xda, 0xad, 0xa0, 0xa6, 0x3e, 0x68, 0xa1, 0x7b, 0x74, 0xfb, 0xa3, 0x2b, 0x87,
	0x67, 0xba, 0x51, 0xfe, 0x32, 0xc2, 0x49, 0x34, 0x74, 0x00, 0xab, 0x27, 0x96, 0xad, 0xf7, 0x93,
	0xcf, 0x29, 0x3c, 0x9d, 0x7d, 0xd1, 0x4b, 0x4b, 0x9e, 0x08, 0x3d, 0x80, 0xd5, 0xe0, 0x5f, 0x16,
	0x25, 0xc6, 0xe2, 0x69, 0xed, 0xa2, 0x59, 0xe4, 0x91, 0xd1, 0x7d, 0xd8, 0x8c, 0xbf, 0xdc, 0xf3,
	0x75, 0xd7, 0x8f, 0x8f, 0xce, 0x16, 0x3b, 0x3a, 0xe3, 0xba, 0xd9, 0x7f, 0x67, 0x09, 0xbb, 0x9a,
	0xa1, 0xe0, 0x5e, 0xe3, 0xff, 0x9d, 0x25, 0xdb, 0x51, 0xb7, 0x60, 0x73, 0xcc, 0x59, 0x42, 0x0b,
	0x30, 0x2b, 0x61, 0xac, 0x62, 0x61, 0x8a, 0x5e, 0x0e, 0xfc, 0x0a, 0x11, 0x4a, 0xec, 0x9f, 0x10,
	0x48, 0x98, 0x1a, 0x74, 0xb1, 0xf1, 0x48, 0x98, 0xa6, 0xd6, 0xae, 0x29, 0xb5, 0xa8, 0x85, 0x3f,
	0x66, 0x90, 0x32, 0xbd, 0x55, 0xb0, 0x24, 0x36, 0x83, 0xef, 0x66, 0xda, 0x2d, 0xf1, 0x98, 0xde,
	0x22, 0xf5, 0xff, 0x5c, 0x85, 0xeb, 0x63, 0xb5, 0x29, 0x7d, 0x8b, 0xc5, 0xdf, 0x09, 0xb2, 0xe1,
	0x1a, 0x72, 0xfb, 0x40, 0xc2, 0x9a, 0xf4, 0x84, 0xde, 0xcf, 0xf4, 0x02, 0xea, 0xd2, 0xd8, 0xa6,
	0x8d, 0x55, 0x75, 0x2f, 0xf8, 0x62, 0x50, 0x51, 0x95, 0xde, 0x91, 0x84, 0xe5, 0x3d, 0x99, 0x5a,
	0x74, 0x2c, 0x2a, 0x1d, 0x99, 0x05, 0x2d, 0x33, 0xe8, 0x3a, 0xac, 0x77, 0x95, 0xa2, 0xae, 0x59,
	0x6a, 0x6a, 0x8b, 0x3a, 0xe6, 0x50, 0x0d, 0xae, 0x45, 0x1d, 0x2d, 0xf5, 0x71, 0x2f, 0x9c, 0xd7,
	0x3c, 0xbd, 0x26, 0xa2, 0x9e, 0x03, 0x79, 0xff, 0x40, 0xa8, 0xd0, 0xeb, 0x27, 0x02, 0x85, 0x1f,
	0xbd, 0x85, 0x04, 0x0b, 0x29, 0x56, 0x61, 0x6f, 0x4b, 0x7d, 0x2c, 0x00, 0x9d, 0x58, 0xae, 0x87,
	0xb1, 0xac, 0xa2, 0xd7, 0xe1, 0xd5, 0x82, 0x89, 0xf5, 0x44, 0xe5, 0x98, 0x3a, 0x25, 0xec, 0xd3,
	0xd8, 0xc5, 0x4b, 0x90, 0x18, 0xa7, 0xa5, 0x71, 0x48, 0xb4, 0x97, 0x62, 0xd1, 0x99, 0x2c, 0xa3,
	0xaf, 0xc3, 0xeb, 0x17, 0x21, 0x85, 0x8b, 0x59, 0x41, 0x6f, 0x42, 0xbd, 0x08, 0x31, 0xf4, 0xad,
	0x38, 0x43, 0x61, 0x1c, 0x1e, 0x15, 0x65, 0x82, 0xdf, 0xea, 0xb8, 0xd9, 0xd1, 0x05, 0x86, 0xcc,
	0xd0, 0xb8, 0xd9, 0x85, 0x48, 0x21, 0x37, 0x76, 0xe9, 0xee, 0x63, 0xb5, 0xdb, 0xee, 0x35, 0xb0,
	0x24, 0x6a, 0x92, 0x70, 0x8d, 0x0a, 0x9f, 0x43, 0x0e, 0x44, 0x65, 0x5f, 0xea, 0x75, 0xba, 0xbb,
	0xf4, 0xe2, 0x14, 0xd6, 0xa9, 0xcf, 0x92, 0xea, 0x91, 0x1b, 0xaa, 0x22, 0x6c, 0xd0, 0xbd, 0x4c,
	0x83, 0x95, 0x23, 0x59, 0x93, 0x7a, 0x2d, 0x59, 0xa1, 0x37, 0x70, 0xb6, 0xb7, 0x29, 0x75, 0x1a,
	0x58, 0x6e, 0x33, 0xa5, 0xa9, 0xd1, 0xfd, 0x4c, 0xf5, 0x62, 0xa9, 0xa3, 0x61, 0xb9, 0xa1, 0x09,
	0xd7, 0x73, 0x5d, 0xa2, 0xa2, 0xa8, 0x5d, 0xa5, 0x21, 0x09, 0x37, 0xe2, 0xae, 0xb6, 0x88, 0x35,
	0xb9, 0x21, 0xb7, 0x45, 0x45, 0xeb, 0x89, 0xcd, 0xa6, 0x70, 0x33, 0x1e, 0x2e, 0xd9, 0x85, 0xa5,
	0x43, 0xf5, 0x48, 0x12, 0x6e, 0xa1, 0x57, 0xe0, 0x7a, 0xbe, 0xb7, 0x8d, 0xd5, 0x43, 0x55, 0x93,
	0x84, 0x57, 0x8a, 0x89, 0x9b, 0x12, 0xeb, 0xbd, 0x5d, 0xdc, 0x1b, 0x2c, 0x56, 0x78, 0x95, 0x9e,
	0xa7, 0x7c, 0x6f, 0x4b, 0x12, 0x8f, 0x24, 0x61, 0x8b, 0xee, 0x59, 0xbe, 0x93, 0xaf, 0x4b, 0xe9,
	0x1e, 0xee, 0x4a, 0x58, 0x78, 0x8d, 0x3a, 0x20, 0xbb, 0x58, 0x15, 0x9b, 0x0d, 0xb1, 0xa3, 0x85,
	0xdb, 0x51, 0x0f, 0xfe, 0x19, 0x49, 0x08, 0xa5, 0x6b, 0x7c, 0x3d, 0x8d, 0xc8, 0xd7, 0xf6, 0x06,
	0xdb, 0x37, 0x49, 0x91, 0xb0, 0x9c, 0xf9, 0xc0, 0xf7, 0x6b, 0xb4, 0x47, 0xda, 0x91, 0x7a, 0x72,
	0x53, 0x52, 0x34, 0x59, 0x3b, 0xe6, 0x03, 0x37, 0x85, 0x37, 0x29, 0x73, 0xda, 0x23, 0x29, 0x0d,
	0x7c, 0xdc, 0xa6, 0xbe, 0xd1, 0xd7, 0xe9, 0x26, 0x37, 0xc4, 0x56, 0xab, 0x77, 0x28, 0x77, 0x3a,
	0x52, 0xb3, 0x77, 0xa4, 0xca, 0x0d, 0x49, 0xd8, 0xce, 0x81, 0xd9, 0x3f, 0x2d, 0x79, 0x8b, 0xca,
	0x44, 0x56, 0x9a, 0xf2, 0x91, 0xdc, 0xec, 0x8a, 0xad, 0xcc, 0x8a, 0xde, 0x8e, 0x95, 0xab, 0x29,
	0x31, 0x67, 0xff, 0x17, 0xa8, 0x92, 0x07, 0x90, 0x70, 0x37, 0x7b, 0x87, 0x6a, 0x53, 0x8a, 0x8c,
	0xdb, 0x6e, 0xb0, 0xc3, 0xef, 0x50, 0x69, 0x26, 0x87, 0x0b, 0x68, 0x82, 0xb9, 0xbc, 0x3b, 0xa6,
	0x93, 0xcd, 0xe8, 0x0e, 0x75, 0xd8, 0x42, 0x8f, 0x3f, 0x61, 0x00, 0xdf, 0xa3, 0x76, 0x2b, 0x84,
	0x27, 0x0d, 0xe1, 0x5d, 0xf4, 0x0e, 0x6c, 0x87, 0x1d, 0xec, 0xa4, 0x88, 0x2c, 0x73, 0x13, 0x7e,
	0x82, 0xdb, 0x6d, 0xb3, 0xef, 0x12, 0xb9, 0xa7, 0xf9, 0x3e, 0xba, 0x03, 0x6f, 0x5f, 0x8e, 0x1d,
	0xc5, 0x33, 0x3b, 0xe8, 0x03, 0x78, 0x6f, 0x52, 0xfc, 0x70, 0x90, 0x0f, 0xd0, 0x37, 0xe0, 0xfd,
	0x0b, 0x88, 0xe2, 0xc8, 0x20, 0x15, 0xb2, 0xdc, 0x43, 0x9f, 0xc2, 0xfd, 0x49, 0xc8, 0xb8, 0x2b,
	0xdd, 0x13, 0xf7, 0x34, 0x09, 0xf7, 0x0e, 0xe4, 0x46, 0xa3, 0xdb, 0x16, 0xbe, 0x81, 0xde, 0x82,
	0xaf, 0x85, 0xd4, 0x9c, 0x50, 0x6c, 0x34, 0xd4, 0xae, 0xa2, 0x05, 0xfc, 0xa9, 0xa2, 0xc9, 0x4a,
	0x53, 0xc2, 0xc2, 0x87, 0x68, 0x1b, 0xde, 0xc8, 0xa0, 0x76, 0x24, 0xa5, 0xd9, 0x0b, 0x61, 0x11,
	0xe6, 0x47, 0xe8, 0x6d, 0x78, 0xf3, 0x22, 0x4c, 0x76, 0x7a, 0x02, 0x35, 0xbd, 0x4f, 0x0f, 0x49,
	0x06, 0x17, 0x4b, 0x9f, 0x75, 0xa5, 0x0e, 0x3d, 0x82, 0x8d, 0x96, 0xac, 0x48, 0x4d, 0xe1, 0x63,
	0x54, 0x87, 0xdb, 0x63, 0x90, 0x42, 0x4f, 0xfe, 0x17, 0xd1, 0x1b, 0xb0, 0x35, 0x06, 0x27, 0x8e,
	0x1f, 0x3f, 0xa1, 0xeb, 0xdd, 0x95, 0x3f, 0x2f, 0xba, 0x00, 0x7b, 0x9a, 0xda, 0xa6, 0x56, 0x72,
	0x57, 0xd5, 0x34, 0xf5, 0x50, 0xf8, 0xf4, 0x22, 0xd4, 0x00, 0x87, 0x62, 0x6b, 0x6a, 0x5b, 0xf8,
	0x26, 0x3b, 0xae, 0xf2, 0xe7, 0x3d, 0x59, 0xd1, 0x70, 0x00, 0xfa, 0x16, 0x3b, 0xae, 0x11, 0x88,
	0xf3, 0xfc, 0x36, 0x8d, 0x41, 0x28, 0x54, 0x11, 0x0f, 0x25, 0x7e, 0x6e, 0x84, 0x07, 0xf4, 0x38,
	0x51, 0x20, 0x3d, 0xd1, 0x94, 0x65, 0x43, 0x55, 0x3a, 0xdd, 0x43, 0xea, 0x32, 0xb4, 0xdb, 0x82,
	0x48, 0x83, 0x43, 0xda, 0xab, 0x3d, 0x56, 0x7b, 0x9a, 0x2c, 0xe1, 0xde, 0xa1, 0xbc, 0x8f, 0xc5,
	0x70, 0xc2, 0xc2, 0x2e, 0x8d, 0xbd, 0xc6, 0xf4, 0xf3, 0x51, 0x1b, 0x34, 0x7e, 0x54, 0x8f, 0x24,
	0xdc, 0x91, 0x3f, 0x97, 0x9a, 0x42, 0x93, 0x6e, 0x64, 0xca, 0xc6, 0x2a, 0x6a, 0x6f, 0x8f, 0xc9,
	0x4a, 0xd1, 0x5a, 0xc7, 0x34, 0xac, 0x7e, 0x2c, 0x62, 0xaa, 0xc7, 0x52, 0x6c, 0xfc, 0x8e, 0xee,
	0x51, 0x2b, 0x14, 0x1a, 0x79, 0x16, 0xfd, 0xef, 0xc5, 0xc7, 0x3a, 0x63, 0x90, 0x23, 0xc1, 0x3f,
	0x54, 0x65, 0x45, 0xd8, 0xa7, 0x5c, 0xf8, 0x48, 0xf9, 0x7f, 0x62, 0x70, 0xb0, 0x2b, 0xfc, 0xed,
	0x8f, 0x6f, 0x97, 0xfe, 0xfe, 0xc7, 0xb7, 0x4b, 0xff, 0xfa, 0xe3, 0xdb, 0xa5, 0x1f, 0xfe, 0xdb,
	0xed, 0xa9, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x4c, 0x14, 0x9e, 0x2e, 0x55, 0x5b, 0x00, 0x00,
}

func (m *HydratedQuickReplyButton) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HydratedQuickReplyButton) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HydratedQuickReplyButton) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Id != nil {
		i -= len(*m.Id)
		copy(dAtA[i:], *m.Id)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Id)))
		i--
		dAtA[i] = 0x12
	}
	if m.DisplayText != nil {
		i -= len(*m.DisplayText)
		copy(dAtA[i:], *m.DisplayText)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.DisplayText)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *HydratedURLButton) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HydratedURLButton) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HydratedURLButton) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Url != nil {
		i -= len(*m.Url)
		copy(dAtA[i:], *m.Url)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Url)))
		i--
		dAtA[i] = 0x12
	}
	if m.DisplayText != nil {
		i -= len(*m.DisplayText)
		copy(dAtA[i:], *m.DisplayText)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.DisplayText)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *HydratedCallButton) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HydratedCallButton) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HydratedCallButton) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PhoneNumber != nil {
		i -= len(*m.PhoneNumber)
		copy(dAtA[i:], *m.PhoneNumber)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.PhoneNumber)))
		i--
		dAtA[i] = 0x12
	}
	if m.DisplayText != nil {
		i -= len(*m.DisplayText)
		copy(dAtA[i:], *m.DisplayText)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.DisplayText)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *HydratedTemplateButton) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HydratedTemplateButton) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HydratedTemplateButton) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Index != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.Index))
		i--
		dAtA[i] = 0x20
	}
	if m.HydratedButton != nil {
		{
			size := m.HydratedButton.Size()
			i -= size
			if _, err := m.HydratedButton.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *HydratedTemplateButton_QuickReplyButton) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HydratedTemplateButton_QuickReplyButton) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.QuickReplyButton != nil {
		{
			size, err := m.QuickReplyButton.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}
func (m *HydratedTemplateButton_UrlButton) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HydratedTemplateButton_UrlButton) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UrlButton != nil {
		{
			size, err := m.UrlButton.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *HydratedTemplateButton_CallButton) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HydratedTemplateButton_CallButton) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.CallButton != nil {
		{
			size, err := m.CallButton.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *QuickReplyButton) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QuickReplyButton) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QuickReplyButton) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Id != nil {
		i -= len(*m.Id)
		copy(dAtA[i:], *m.Id)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Id)))
		i--
		dAtA[i] = 0x12
	}
	if m.DisplayText != nil {
		{
			size, err := m.DisplayText.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *URLButton) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *URLButton) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *URLButton) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Url != nil {
		{
			size, err := m.Url.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.DisplayText != nil {
		{
			size, err := m.DisplayText.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CallButton) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CallButton) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CallButton) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.PhoneNumber != nil {
		{
			size, err := m.PhoneNumber.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.DisplayText != nil {
		{
			size, err := m.DisplayText.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TemplateButton) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TemplateButton) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TemplateButton) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Index != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.Index))
		i--
		dAtA[i] = 0x20
	}
	if m.Button != nil {
		{
			size := m.Button.Size()
			i -= size
			if _, err := m.Button.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *TemplateButton_QuickReplyButton) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TemplateButton_QuickReplyButton) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.QuickReplyButton != nil {
		{
			size, err := m.QuickReplyButton.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}
func (m *TemplateButton_UrlButton) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TemplateButton_UrlButton) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UrlButton != nil {
		{
			size, err := m.UrlButton.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *TemplateButton_CallButton) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TemplateButton_CallButton) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.CallButton != nil {
		{
			size, err := m.CallButton.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *Location) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Location) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Location) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Name != nil {
		i -= len(*m.Name)
		copy(dAtA[i:], *m.Name)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Name)))
		i--
		dAtA[i] = 0x1a
	}
	if m.DegreesLongitude != nil {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(*m.DegreesLongitude))))
		i--
		dAtA[i] = 0x11
	}
	if m.DegreesLatitude != nil {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(*m.DegreesLatitude))))
		i--
		dAtA[i] = 0x9
	}
	return len(dAtA) - i, nil
}

func (m *Point) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Point) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Point) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Y != nil {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(*m.Y))))
		i--
		dAtA[i] = 0x21
	}
	if m.X != nil {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(*m.X))))
		i--
		dAtA[i] = 0x19
	}
	if m.YDeprecated != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.YDeprecated))
		i--
		dAtA[i] = 0x10
	}
	if m.XDeprecated != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.XDeprecated))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *InteractiveAnnotation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *InteractiveAnnotation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InteractiveAnnotation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Action != nil {
		{
			size := m.Action.Size()
			i -= size
			if _, err := m.Action.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if len(m.PolygonVertices) > 0 {
		for iNdEx := len(m.PolygonVertices) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.PolygonVertices[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDef(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *InteractiveAnnotation_Location) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *InteractiveAnnotation_Location) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Location != nil {
		{
			size, err := m.Location.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *AdReplyInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AdReplyInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AdReplyInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Caption != nil {
		i -= len(*m.Caption)
		copy(dAtA[i:], *m.Caption)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Caption)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if m.JpegThumbnail != nil {
		i -= len(m.JpegThumbnail)
		copy(dAtA[i:], m.JpegThumbnail)
		i = encodeVarintDef(dAtA, i, uint64(len(m.JpegThumbnail)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if m.MediaType != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.MediaType))
		i--
		dAtA[i] = 0x10
	}
	if m.AdvertiserName != nil {
		i -= len(*m.AdvertiserName)
		copy(dAtA[i:], *m.AdvertiserName)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.AdvertiserName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ContextInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContextInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ContextInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.EphemeralSettingTimestamp != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.EphemeralSettingTimestamp))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xd0
	}
	if m.Expiration != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.Expiration))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xc8
	}
	if m.PlaceholderKey != nil {
		{
			size, err := m.PlaceholderKey.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xc2
	}
	if m.QuotedAd != nil {
		{
			size, err := m.QuotedAd.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xba
	}
	if m.IsForwarded != nil {
		i--
		if *m.IsForwarded {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xb0
	}
	if m.ForwardingScore != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.ForwardingScore))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa8
	}
	if m.ConversionDelaySeconds != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.ConversionDelaySeconds))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa0
	}
	if m.ConversionData != nil {
		i -= len(m.ConversionData)
		copy(dAtA[i:], m.ConversionData)
		i = encodeVarintDef(dAtA, i, uint64(len(m.ConversionData)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x9a
	}
	if m.ConversionSource != nil {
		i -= len(*m.ConversionSource)
		copy(dAtA[i:], *m.ConversionSource)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.ConversionSource)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x92
	}
	if len(m.MentionedJid) > 0 {
		for iNdEx := len(m.MentionedJid) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.MentionedJid[iNdEx])
			copy(dAtA[i:], m.MentionedJid[iNdEx])
			i = encodeVarintDef(dAtA, i, uint64(len(m.MentionedJid[iNdEx])))
			i--
			dAtA[i] = 0x7a
		}
	}
	if m.RemoteJid != nil {
		i -= len(*m.RemoteJid)
		copy(dAtA[i:], *m.RemoteJid)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.RemoteJid)))
		i--
		dAtA[i] = 0x22
	}
	if m.QuotedMessage != nil {
		{
			size, err := m.QuotedMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Participant != nil {
		i -= len(*m.Participant)
		copy(dAtA[i:], *m.Participant)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Participant)))
		i--
		dAtA[i] = 0x12
	}
	if m.StanzaId != nil {
		i -= len(*m.StanzaId)
		copy(dAtA[i:], *m.StanzaId)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.StanzaId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SenderKeyDistributionMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SenderKeyDistributionMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SenderKeyDistributionMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.AxolotlSenderKeyDistributionMessage != nil {
		i -= len(m.AxolotlSenderKeyDistributionMessage)
		copy(dAtA[i:], m.AxolotlSenderKeyDistributionMessage)
		i = encodeVarintDef(dAtA, i, uint64(len(m.AxolotlSenderKeyDistributionMessage)))
		i--
		dAtA[i] = 0x12
	}
	if m.GroupId != nil {
		i -= len(*m.GroupId)
		copy(dAtA[i:], *m.GroupId)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.GroupId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ImageMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ImageMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ImageMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MidQualityFileEncSha256 != nil {
		i -= len(m.MidQualityFileEncSha256)
		copy(dAtA[i:], m.MidQualityFileEncSha256)
		i = encodeVarintDef(dAtA, i, uint64(len(m.MidQualityFileEncSha256)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xc2
	}
	if m.MidQualityFileSha256 != nil {
		i -= len(m.MidQualityFileSha256)
		copy(dAtA[i:], m.MidQualityFileSha256)
		i = encodeVarintDef(dAtA, i, uint64(len(m.MidQualityFileSha256)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xba
	}
	if len(m.ScanLengths) > 0 {
		for iNdEx := len(m.ScanLengths) - 1; iNdEx >= 0; iNdEx-- {
			i = encodeVarintDef(dAtA, i, uint64(m.ScanLengths[iNdEx]))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xb0
		}
	}
	if m.ScansSidecar != nil {
		i -= len(m.ScansSidecar)
		copy(dAtA[i:], m.ScansSidecar)
		i = encodeVarintDef(dAtA, i, uint64(len(m.ScansSidecar)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xaa
	}
	if m.ExperimentGroupId != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.ExperimentGroupId))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa0
	}
	if m.FirstScanLength != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.FirstScanLength))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x98
	}
	if m.FirstScanSidecar != nil {
		i -= len(m.FirstScanSidecar)
		copy(dAtA[i:], m.FirstScanSidecar)
		i = encodeVarintDef(dAtA, i, uint64(len(m.FirstScanSidecar)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x92
	}
	if m.ContextInfo != nil {
		{
			size, err := m.ContextInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if m.JpegThumbnail != nil {
		i -= len(m.JpegThumbnail)
		copy(dAtA[i:], m.JpegThumbnail)
		i = encodeVarintDef(dAtA, i, uint64(len(m.JpegThumbnail)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if m.MediaKeyTimestamp != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.MediaKeyTimestamp))
		i--
		dAtA[i] = 0x60
	}
	if m.DirectPath != nil {
		i -= len(*m.DirectPath)
		copy(dAtA[i:], *m.DirectPath)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.DirectPath)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.InteractiveAnnotations) > 0 {
		for iNdEx := len(m.InteractiveAnnotations) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.InteractiveAnnotations[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDef(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x52
		}
	}
	if m.FileEncSha256 != nil {
		i -= len(m.FileEncSha256)
		copy(dAtA[i:], m.FileEncSha256)
		i = encodeVarintDef(dAtA, i, uint64(len(m.FileEncSha256)))
		i--
		dAtA[i] = 0x4a
	}
	if m.MediaKey != nil {
		i -= len(m.MediaKey)
		copy(dAtA[i:], m.MediaKey)
		i = encodeVarintDef(dAtA, i, uint64(len(m.MediaKey)))
		i--
		dAtA[i] = 0x42
	}
	if m.Width != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.Width))
		i--
		dAtA[i] = 0x38
	}
	if m.Height != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.Height))
		i--
		dAtA[i] = 0x30
	}
	if m.FileLength != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.FileLength))
		i--
		dAtA[i] = 0x28
	}
	if m.FileSha256 != nil {
		i -= len(m.FileSha256)
		copy(dAtA[i:], m.FileSha256)
		i = encodeVarintDef(dAtA, i, uint64(len(m.FileSha256)))
		i--
		dAtA[i] = 0x22
	}
	if m.Caption != nil {
		i -= len(*m.Caption)
		copy(dAtA[i:], *m.Caption)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Caption)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Mimetype != nil {
		i -= len(*m.Mimetype)
		copy(dAtA[i:], *m.Mimetype)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Mimetype)))
		i--
		dAtA[i] = 0x12
	}
	if m.Url != nil {
		i -= len(*m.Url)
		copy(dAtA[i:], *m.Url)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Url)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ContactMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContactMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ContactMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ContextInfo != nil {
		{
			size, err := m.ContextInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if m.Vcard != nil {
		i -= len(*m.Vcard)
		copy(dAtA[i:], *m.Vcard)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Vcard)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if m.DisplayName != nil {
		i -= len(*m.DisplayName)
		copy(dAtA[i:], *m.DisplayName)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.DisplayName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *LocationMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LocationMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LocationMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ContextInfo != nil {
		{
			size, err := m.ContextInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if m.JpegThumbnail != nil {
		i -= len(m.JpegThumbnail)
		copy(dAtA[i:], m.JpegThumbnail)
		i = encodeVarintDef(dAtA, i, uint64(len(m.JpegThumbnail)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if m.Comment != nil {
		i -= len(*m.Comment)
		copy(dAtA[i:], *m.Comment)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Comment)))
		i--
		dAtA[i] = 0x5a
	}
	if m.DegreesClockwiseFromMagneticNorth != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.DegreesClockwiseFromMagneticNorth))
		i--
		dAtA[i] = 0x48
	}
	if m.SpeedInMps != nil {
		i -= 4
		encoding_binary.LittleEndian.PutUint32(dAtA[i:], uint32(math.Float32bits(float32(*m.SpeedInMps))))
		i--
		dAtA[i] = 0x45
	}
	if m.AccuracyInMeters != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.AccuracyInMeters))
		i--
		dAtA[i] = 0x38
	}
	if m.IsLive != nil {
		i--
		if *m.IsLive {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.Url != nil {
		i -= len(*m.Url)
		copy(dAtA[i:], *m.Url)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Url)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Address != nil {
		i -= len(*m.Address)
		copy(dAtA[i:], *m.Address)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Address)))
		i--
		dAtA[i] = 0x22
	}
	if m.Name != nil {
		i -= len(*m.Name)
		copy(dAtA[i:], *m.Name)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Name)))
		i--
		dAtA[i] = 0x1a
	}
	if m.DegreesLongitude != nil {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(*m.DegreesLongitude))))
		i--
		dAtA[i] = 0x11
	}
	if m.DegreesLatitude != nil {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(*m.DegreesLatitude))))
		i--
		dAtA[i] = 0x9
	}
	return len(dAtA) - i, nil
}

func (m *ExtendedTextMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ExtendedTextMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ExtendedTextMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.DoNotPlayInline != nil {
		i--
		if *m.DoNotPlayInline {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x90
	}
	if m.ContextInfo != nil {
		{
			size, err := m.ContextInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if m.JpegThumbnail != nil {
		i -= len(m.JpegThumbnail)
		copy(dAtA[i:], m.JpegThumbnail)
		i = encodeVarintDef(dAtA, i, uint64(len(m.JpegThumbnail)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if m.PreviewType != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.PreviewType))
		i--
		dAtA[i] = 0x50
	}
	if m.Font != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.Font))
		i--
		dAtA[i] = 0x48
	}
	if m.BackgroundArgb != nil {
		i -= 4
		encoding_binary.LittleEndian.PutUint32(dAtA[i:], uint32(*m.BackgroundArgb))
		i--
		dAtA[i] = 0x45
	}
	if m.TextArgb != nil {
		i -= 4
		encoding_binary.LittleEndian.PutUint32(dAtA[i:], uint32(*m.TextArgb))
		i--
		dAtA[i] = 0x3d
	}
	if m.Title != nil {
		i -= len(*m.Title)
		copy(dAtA[i:], *m.Title)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Title)))
		i--
		dAtA[i] = 0x32
	}
	if m.Description != nil {
		i -= len(*m.Description)
		copy(dAtA[i:], *m.Description)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Description)))
		i--
		dAtA[i] = 0x2a
	}
	if m.CanonicalUrl != nil {
		i -= len(*m.CanonicalUrl)
		copy(dAtA[i:], *m.CanonicalUrl)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.CanonicalUrl)))
		i--
		dAtA[i] = 0x22
	}
	if m.MatchedText != nil {
		i -= len(*m.MatchedText)
		copy(dAtA[i:], *m.MatchedText)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.MatchedText)))
		i--
		dAtA[i] = 0x12
	}
	if m.Text != nil {
		i -= len(*m.Text)
		copy(dAtA[i:], *m.Text)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Text)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DocumentMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DocumentMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DocumentMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ContextInfo != nil {
		{
			size, err := m.ContextInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if m.JpegThumbnail != nil {
		i -= len(m.JpegThumbnail)
		copy(dAtA[i:], m.JpegThumbnail)
		i = encodeVarintDef(dAtA, i, uint64(len(m.JpegThumbnail)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if m.MediaKeyTimestamp != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.MediaKeyTimestamp))
		i--
		dAtA[i] = 0x58
	}
	if m.DirectPath != nil {
		i -= len(*m.DirectPath)
		copy(dAtA[i:], *m.DirectPath)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.DirectPath)))
		i--
		dAtA[i] = 0x52
	}
	if m.FileEncSha256 != nil {
		i -= len(m.FileEncSha256)
		copy(dAtA[i:], m.FileEncSha256)
		i = encodeVarintDef(dAtA, i, uint64(len(m.FileEncSha256)))
		i--
		dAtA[i] = 0x4a
	}
	if m.FileName != nil {
		i -= len(*m.FileName)
		copy(dAtA[i:], *m.FileName)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.FileName)))
		i--
		dAtA[i] = 0x42
	}
	if m.MediaKey != nil {
		i -= len(m.MediaKey)
		copy(dAtA[i:], m.MediaKey)
		i = encodeVarintDef(dAtA, i, uint64(len(m.MediaKey)))
		i--
		dAtA[i] = 0x3a
	}
	if m.PageCount != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.PageCount))
		i--
		dAtA[i] = 0x30
	}
	if m.FileLength != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.FileLength))
		i--
		dAtA[i] = 0x28
	}
	if m.FileSha256 != nil {
		i -= len(m.FileSha256)
		copy(dAtA[i:], m.FileSha256)
		i = encodeVarintDef(dAtA, i, uint64(len(m.FileSha256)))
		i--
		dAtA[i] = 0x22
	}
	if m.Title != nil {
		i -= len(*m.Title)
		copy(dAtA[i:], *m.Title)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Title)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Mimetype != nil {
		i -= len(*m.Mimetype)
		copy(dAtA[i:], *m.Mimetype)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Mimetype)))
		i--
		dAtA[i] = 0x12
	}
	if m.Url != nil {
		i -= len(*m.Url)
		copy(dAtA[i:], *m.Url)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Url)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AudioMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AudioMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AudioMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.StreamingSidecar != nil {
		i -= len(m.StreamingSidecar)
		copy(dAtA[i:], m.StreamingSidecar)
		i = encodeVarintDef(dAtA, i, uint64(len(m.StreamingSidecar)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x92
	}
	if m.ContextInfo != nil {
		{
			size, err := m.ContextInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if m.MediaKeyTimestamp != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.MediaKeyTimestamp))
		i--
		dAtA[i] = 0x50
	}
	if m.DirectPath != nil {
		i -= len(*m.DirectPath)
		copy(dAtA[i:], *m.DirectPath)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.DirectPath)))
		i--
		dAtA[i] = 0x4a
	}
	if m.FileEncSha256 != nil {
		i -= len(m.FileEncSha256)
		copy(dAtA[i:], m.FileEncSha256)
		i = encodeVarintDef(dAtA, i, uint64(len(m.FileEncSha256)))
		i--
		dAtA[i] = 0x42
	}
	if m.MediaKey != nil {
		i -= len(m.MediaKey)
		copy(dAtA[i:], m.MediaKey)
		i = encodeVarintDef(dAtA, i, uint64(len(m.MediaKey)))
		i--
		dAtA[i] = 0x3a
	}
	if m.Ptt != nil {
		i--
		if *m.Ptt {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.Seconds != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.Seconds))
		i--
		dAtA[i] = 0x28
	}
	if m.FileLength != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.FileLength))
		i--
		dAtA[i] = 0x20
	}
	if m.FileSha256 != nil {
		i -= len(m.FileSha256)
		copy(dAtA[i:], m.FileSha256)
		i = encodeVarintDef(dAtA, i, uint64(len(m.FileSha256)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Mimetype != nil {
		i -= len(*m.Mimetype)
		copy(dAtA[i:], *m.Mimetype)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Mimetype)))
		i--
		dAtA[i] = 0x12
	}
	if m.Url != nil {
		i -= len(*m.Url)
		copy(dAtA[i:], *m.Url)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Url)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *VideoMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VideoMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VideoMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.GifAttribution != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.GifAttribution))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x98
	}
	if m.StreamingSidecar != nil {
		i -= len(m.StreamingSidecar)
		copy(dAtA[i:], m.StreamingSidecar)
		i = encodeVarintDef(dAtA, i, uint64(len(m.StreamingSidecar)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x92
	}
	if m.ContextInfo != nil {
		{
			size, err := m.ContextInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if m.JpegThumbnail != nil {
		i -= len(m.JpegThumbnail)
		copy(dAtA[i:], m.JpegThumbnail)
		i = encodeVarintDef(dAtA, i, uint64(len(m.JpegThumbnail)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if m.MediaKeyTimestamp != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.MediaKeyTimestamp))
		i--
		dAtA[i] = 0x70
	}
	if m.DirectPath != nil {
		i -= len(*m.DirectPath)
		copy(dAtA[i:], *m.DirectPath)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.DirectPath)))
		i--
		dAtA[i] = 0x6a
	}
	if len(m.InteractiveAnnotations) > 0 {
		for iNdEx := len(m.InteractiveAnnotations) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.InteractiveAnnotations[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDef(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x62
		}
	}
	if m.FileEncSha256 != nil {
		i -= len(m.FileEncSha256)
		copy(dAtA[i:], m.FileEncSha256)
		i = encodeVarintDef(dAtA, i, uint64(len(m.FileEncSha256)))
		i--
		dAtA[i] = 0x5a
	}
	if m.Width != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.Width))
		i--
		dAtA[i] = 0x50
	}
	if m.Height != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.Height))
		i--
		dAtA[i] = 0x48
	}
	if m.GifPlayback != nil {
		i--
		if *m.GifPlayback {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	if m.Caption != nil {
		i -= len(*m.Caption)
		copy(dAtA[i:], *m.Caption)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Caption)))
		i--
		dAtA[i] = 0x3a
	}
	if m.MediaKey != nil {
		i -= len(m.MediaKey)
		copy(dAtA[i:], m.MediaKey)
		i = encodeVarintDef(dAtA, i, uint64(len(m.MediaKey)))
		i--
		dAtA[i] = 0x32
	}
	if m.Seconds != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.Seconds))
		i--
		dAtA[i] = 0x28
	}
	if m.FileLength != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.FileLength))
		i--
		dAtA[i] = 0x20
	}
	if m.FileSha256 != nil {
		i -= len(m.FileSha256)
		copy(dAtA[i:], m.FileSha256)
		i = encodeVarintDef(dAtA, i, uint64(len(m.FileSha256)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Mimetype != nil {
		i -= len(*m.Mimetype)
		copy(dAtA[i:], *m.Mimetype)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Mimetype)))
		i--
		dAtA[i] = 0x12
	}
	if m.Url != nil {
		i -= len(*m.Url)
		copy(dAtA[i:], *m.Url)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Url)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Call) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Call) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Call) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.CallKey != nil {
		i -= len(m.CallKey)
		copy(dAtA[i:], m.CallKey)
		i = encodeVarintDef(dAtA, i, uint64(len(m.CallKey)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Chat) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Chat) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Chat) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Id != nil {
		i -= len(*m.Id)
		copy(dAtA[i:], *m.Id)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Id)))
		i--
		dAtA[i] = 0x12
	}
	if m.DisplayName != nil {
		i -= len(*m.DisplayName)
		copy(dAtA[i:], *m.DisplayName)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.DisplayName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ProtocolMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProtocolMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProtocolMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.HistorySyncNotification != nil {
		{
			size, err := m.HistorySyncNotification.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.EphemeralSettingTimestamp != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.EphemeralSettingTimestamp))
		i--
		dAtA[i] = 0x28
	}
	if m.EphemeralExpiration != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.EphemeralExpiration))
		i--
		dAtA[i] = 0x20
	}
	if m.Type != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.Type))
		i--
		dAtA[i] = 0x10
	}
	if m.Key != nil {
		{
			size, err := m.Key.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *HistorySyncNotification) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HistorySyncNotification) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HistorySyncNotification) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ChunkOrder != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.ChunkOrder))
		i--
		dAtA[i] = 0x38
	}
	if m.SyncType != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.SyncType))
		i--
		dAtA[i] = 0x30
	}
	if m.DirectPath != nil {
		i -= len(*m.DirectPath)
		copy(dAtA[i:], *m.DirectPath)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.DirectPath)))
		i--
		dAtA[i] = 0x2a
	}
	if m.FileEncSha256 != nil {
		i -= len(m.FileEncSha256)
		copy(dAtA[i:], m.FileEncSha256)
		i = encodeVarintDef(dAtA, i, uint64(len(m.FileEncSha256)))
		i--
		dAtA[i] = 0x22
	}
	if m.MediaKey != nil {
		i -= len(m.MediaKey)
		copy(dAtA[i:], m.MediaKey)
		i = encodeVarintDef(dAtA, i, uint64(len(m.MediaKey)))
		i--
		dAtA[i] = 0x1a
	}
	if m.FileLength != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.FileLength))
		i--
		dAtA[i] = 0x10
	}
	if m.FileSha256 != nil {
		i -= len(m.FileSha256)
		copy(dAtA[i:], m.FileSha256)
		i = encodeVarintDef(dAtA, i, uint64(len(m.FileSha256)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ContactsArrayMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ContactsArrayMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ContactsArrayMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ContextInfo != nil {
		{
			size, err := m.ContextInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if len(m.Contacts) > 0 {
		for iNdEx := len(m.Contacts) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Contacts[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDef(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if m.DisplayName != nil {
		i -= len(*m.DisplayName)
		copy(dAtA[i:], *m.DisplayName)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.DisplayName)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *HSMCurrency) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HSMCurrency) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HSMCurrency) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Amount1000 != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.Amount1000))
		i--
		dAtA[i] = 0x10
	}
	if m.CurrencyCode != nil {
		i -= len(*m.CurrencyCode)
		copy(dAtA[i:], *m.CurrencyCode)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.CurrencyCode)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *HSMDateTimeComponent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HSMDateTimeComponent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HSMDateTimeComponent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Calendar != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.Calendar))
		i--
		dAtA[i] = 0x38
	}
	if m.Minute != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.Minute))
		i--
		dAtA[i] = 0x30
	}
	if m.Hour != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.Hour))
		i--
		dAtA[i] = 0x28
	}
	if m.DayOfMonth != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.DayOfMonth))
		i--
		dAtA[i] = 0x20
	}
	if m.Month != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.Month))
		i--
		dAtA[i] = 0x18
	}
	if m.Year != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.Year))
		i--
		dAtA[i] = 0x10
	}
	if m.DayOfWeek != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.DayOfWeek))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *HSMDateTimeUnixEpoch) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HSMDateTimeUnixEpoch) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HSMDateTimeUnixEpoch) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Timestamp != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.Timestamp))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *HSMDateTime) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HSMDateTime) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HSMDateTime) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.DatetimeOneof != nil {
		{
			size := m.DatetimeOneof.Size()
			i -= size
			if _, err := m.DatetimeOneof.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *HSMDateTime_Component) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HSMDateTime_Component) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Component != nil {
		{
			size, err := m.Component.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}
func (m *HSMDateTime_UnixEpoch) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HSMDateTime_UnixEpoch) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.UnixEpoch != nil {
		{
			size, err := m.UnixEpoch.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *HSMLocalizableParameter) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HSMLocalizableParameter) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HSMLocalizableParameter) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ParamOneof != nil {
		{
			size := m.ParamOneof.Size()
			i -= size
			if _, err := m.ParamOneof.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.Default != nil {
		i -= len(*m.Default)
		copy(dAtA[i:], *m.Default)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Default)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *HSMLocalizableParameter_Currency) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HSMLocalizableParameter_Currency) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.Currency != nil {
		{
			size, err := m.Currency.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *HSMLocalizableParameter_DateTime) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HSMLocalizableParameter_DateTime) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DateTime != nil {
		{
			size, err := m.DateTime.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *HighlyStructuredMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HighlyStructuredMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HighlyStructuredMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.HydratedHsm != nil {
		{
			size, err := m.HydratedHsm.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if m.DeterministicLc != nil {
		i -= len(*m.DeterministicLc)
		copy(dAtA[i:], *m.DeterministicLc)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.DeterministicLc)))
		i--
		dAtA[i] = 0x42
	}
	if m.DeterministicLg != nil {
		i -= len(*m.DeterministicLg)
		copy(dAtA[i:], *m.DeterministicLg)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.DeterministicLg)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.LocalizableParams) > 0 {
		for iNdEx := len(m.LocalizableParams) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.LocalizableParams[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDef(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if m.FallbackLc != nil {
		i -= len(*m.FallbackLc)
		copy(dAtA[i:], *m.FallbackLc)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.FallbackLc)))
		i--
		dAtA[i] = 0x2a
	}
	if m.FallbackLg != nil {
		i -= len(*m.FallbackLg)
		copy(dAtA[i:], *m.FallbackLg)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.FallbackLg)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Params) > 0 {
		for iNdEx := len(m.Params) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Params[iNdEx])
			copy(dAtA[i:], m.Params[iNdEx])
			i = encodeVarintDef(dAtA, i, uint64(len(m.Params[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.ElementName != nil {
		i -= len(*m.ElementName)
		copy(dAtA[i:], *m.ElementName)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.ElementName)))
		i--
		dAtA[i] = 0x12
	}
	if m.Namespace != nil {
		i -= len(*m.Namespace)
		copy(dAtA[i:], *m.Namespace)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Namespace)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SendPaymentMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SendPaymentMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SendPaymentMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RequestMessageKey != nil {
		{
			size, err := m.RequestMessageKey.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.NoteMessage != nil {
		{
			size, err := m.NoteMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}

func (m *RequestPaymentMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RequestPaymentMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RequestPaymentMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ExpiryTimestamp != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.ExpiryTimestamp))
		i--
		dAtA[i] = 0x28
	}
	if m.NoteMessage != nil {
		{
			size, err := m.NoteMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.RequestFrom != nil {
		i -= len(*m.RequestFrom)
		copy(dAtA[i:], *m.RequestFrom)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.RequestFrom)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Amount1000 != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.Amount1000))
		i--
		dAtA[i] = 0x10
	}
	if m.CurrencyCodeIso4217 != nil {
		i -= len(*m.CurrencyCodeIso4217)
		copy(dAtA[i:], *m.CurrencyCodeIso4217)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.CurrencyCodeIso4217)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DeclinePaymentRequestMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeclinePaymentRequestMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeclinePaymentRequestMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Key != nil {
		{
			size, err := m.Key.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CancelPaymentRequestMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CancelPaymentRequestMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CancelPaymentRequestMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Key != nil {
		{
			size, err := m.Key.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *LiveLocationMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LiveLocationMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LiveLocationMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ContextInfo != nil {
		{
			size, err := m.ContextInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if m.JpegThumbnail != nil {
		i -= len(m.JpegThumbnail)
		copy(dAtA[i:], m.JpegThumbnail)
		i = encodeVarintDef(dAtA, i, uint64(len(m.JpegThumbnail)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if m.TimeOffset != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.TimeOffset))
		i--
		dAtA[i] = 0x40
	}
	if m.SequenceNumber != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.SequenceNumber))
		i--
		dAtA[i] = 0x38
	}
	if m.Caption != nil {
		i -= len(*m.Caption)
		copy(dAtA[i:], *m.Caption)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Caption)))
		i--
		dAtA[i] = 0x32
	}
	if m.DegreesClockwiseFromMagneticNorth != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.DegreesClockwiseFromMagneticNorth))
		i--
		dAtA[i] = 0x28
	}
	if m.SpeedInMps != nil {
		i -= 4
		encoding_binary.LittleEndian.PutUint32(dAtA[i:], uint32(math.Float32bits(float32(*m.SpeedInMps))))
		i--
		dAtA[i] = 0x25
	}
	if m.AccuracyInMeters != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.AccuracyInMeters))
		i--
		dAtA[i] = 0x18
	}
	if m.DegreesLongitude != nil {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(*m.DegreesLongitude))))
		i--
		dAtA[i] = 0x11
	}
	if m.DegreesLatitude != nil {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(*m.DegreesLatitude))))
		i--
		dAtA[i] = 0x9
	}
	return len(dAtA) - i, nil
}

func (m *StickerMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StickerMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StickerMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ContextInfo != nil {
		{
			size, err := m.ContextInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if m.PngThumbnail != nil {
		i -= len(m.PngThumbnail)
		copy(dAtA[i:], m.PngThumbnail)
		i = encodeVarintDef(dAtA, i, uint64(len(m.PngThumbnail)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if m.IsAnimated != nil {
		i--
		if *m.IsAnimated {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x68
	}
	if m.FirstFrameSidecar != nil {
		i -= len(m.FirstFrameSidecar)
		copy(dAtA[i:], m.FirstFrameSidecar)
		i = encodeVarintDef(dAtA, i, uint64(len(m.FirstFrameSidecar)))
		i--
		dAtA[i] = 0x62
	}
	if m.FirstFrameLength != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.FirstFrameLength))
		i--
		dAtA[i] = 0x58
	}
	if m.MediaKeyTimestamp != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.MediaKeyTimestamp))
		i--
		dAtA[i] = 0x50
	}
	if m.FileLength != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.FileLength))
		i--
		dAtA[i] = 0x48
	}
	if m.DirectPath != nil {
		i -= len(*m.DirectPath)
		copy(dAtA[i:], *m.DirectPath)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.DirectPath)))
		i--
		dAtA[i] = 0x42
	}
	if m.Width != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.Width))
		i--
		dAtA[i] = 0x38
	}
	if m.Height != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.Height))
		i--
		dAtA[i] = 0x30
	}
	if m.Mimetype != nil {
		i -= len(*m.Mimetype)
		copy(dAtA[i:], *m.Mimetype)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Mimetype)))
		i--
		dAtA[i] = 0x2a
	}
	if m.MediaKey != nil {
		i -= len(m.MediaKey)
		copy(dAtA[i:], m.MediaKey)
		i = encodeVarintDef(dAtA, i, uint64(len(m.MediaKey)))
		i--
		dAtA[i] = 0x22
	}
	if m.FileEncSha256 != nil {
		i -= len(m.FileEncSha256)
		copy(dAtA[i:], m.FileEncSha256)
		i = encodeVarintDef(dAtA, i, uint64(len(m.FileEncSha256)))
		i--
		dAtA[i] = 0x1a
	}
	if m.FileSha256 != nil {
		i -= len(m.FileSha256)
		copy(dAtA[i:], m.FileSha256)
		i = encodeVarintDef(dAtA, i, uint64(len(m.FileSha256)))
		i--
		dAtA[i] = 0x12
	}
	if m.Url != nil {
		i -= len(*m.Url)
		copy(dAtA[i:], *m.Url)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Url)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *FourRowTemplate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *FourRowTemplate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FourRowTemplate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Buttons) > 0 {
		for iNdEx := len(m.Buttons) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Buttons[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDef(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x42
		}
	}
	if m.Footer != nil {
		{
			size, err := m.Footer.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.Content != nil {
		{
			size, err := m.Content.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.Title != nil {
		{
			size := m.Title.Size()
			i -= size
			if _, err := m.Title.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *FourRowTemplate_DocumentMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FourRowTemplate_DocumentMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DocumentMessage != nil {
		{
			size, err := m.DocumentMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}
func (m *FourRowTemplate_HighlyStructuredMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FourRowTemplate_HighlyStructuredMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.HighlyStructuredMessage != nil {
		{
			size, err := m.HighlyStructuredMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *FourRowTemplate_ImageMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FourRowTemplate_ImageMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ImageMessage != nil {
		{
			size, err := m.ImageMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *FourRowTemplate_VideoMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FourRowTemplate_VideoMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.VideoMessage != nil {
		{
			size, err := m.VideoMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	return len(dAtA) - i, nil
}
func (m *FourRowTemplate_LocationMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *FourRowTemplate_LocationMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.LocationMessage != nil {
		{
			size, err := m.LocationMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	return len(dAtA) - i, nil
}
func (m *HydratedFourRowTemplate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *HydratedFourRowTemplate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HydratedFourRowTemplate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TemplateId != nil {
		i -= len(*m.TemplateId)
		copy(dAtA[i:], *m.TemplateId)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.TemplateId)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.HydratedButtons) > 0 {
		for iNdEx := len(m.HydratedButtons) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.HydratedButtons[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDef(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x42
		}
	}
	if m.HydratedFooterText != nil {
		i -= len(*m.HydratedFooterText)
		copy(dAtA[i:], *m.HydratedFooterText)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.HydratedFooterText)))
		i--
		dAtA[i] = 0x3a
	}
	if m.HydratedContentText != nil {
		i -= len(*m.HydratedContentText)
		copy(dAtA[i:], *m.HydratedContentText)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.HydratedContentText)))
		i--
		dAtA[i] = 0x32
	}
	if m.Title != nil {
		{
			size := m.Title.Size()
			i -= size
			if _, err := m.Title.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *HydratedFourRowTemplate_DocumentMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HydratedFourRowTemplate_DocumentMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.DocumentMessage != nil {
		{
			size, err := m.DocumentMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}
func (m *HydratedFourRowTemplate_HydratedTitleText) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HydratedFourRowTemplate_HydratedTitleText) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i -= len(m.HydratedTitleText)
	copy(dAtA[i:], m.HydratedTitleText)
	i = encodeVarintDef(dAtA, i, uint64(len(m.HydratedTitleText)))
	i--
	dAtA[i] = 0x12
	return len(dAtA) - i, nil
}
func (m *HydratedFourRowTemplate_ImageMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HydratedFourRowTemplate_ImageMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.ImageMessage != nil {
		{
			size, err := m.ImageMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	return len(dAtA) - i, nil
}
func (m *HydratedFourRowTemplate_VideoMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HydratedFourRowTemplate_VideoMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.VideoMessage != nil {
		{
			size, err := m.VideoMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	return len(dAtA) - i, nil
}
func (m *HydratedFourRowTemplate_LocationMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *HydratedFourRowTemplate_LocationMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.LocationMessage != nil {
		{
			size, err := m.LocationMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	return len(dAtA) - i, nil
}
func (m *TemplateMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TemplateMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TemplateMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.HydratedTemplate != nil {
		{
			size, err := m.HydratedTemplate.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.ContextInfo != nil {
		{
			size, err := m.ContextInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.Format != nil {
		{
			size := m.Format.Size()
			i -= size
			if _, err := m.Format.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	return len(dAtA) - i, nil
}

func (m *TemplateMessage_FourRowTemplate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TemplateMessage_FourRowTemplate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.FourRowTemplate != nil {
		{
			size, err := m.FourRowTemplate.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}
func (m *TemplateMessage_HydratedFourRowTemplate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TemplateMessage_HydratedFourRowTemplate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	if m.HydratedFourRowTemplate != nil {
		{
			size, err := m.HydratedFourRowTemplate.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}
func (m *TemplateButtonReplyMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TemplateButtonReplyMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TemplateButtonReplyMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SelectedIndex != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.SelectedIndex))
		i--
		dAtA[i] = 0x20
	}
	if m.ContextInfo != nil {
		{
			size, err := m.ContextInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.SelectedDisplayText != nil {
		i -= len(*m.SelectedDisplayText)
		copy(dAtA[i:], *m.SelectedDisplayText)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.SelectedDisplayText)))
		i--
		dAtA[i] = 0x12
	}
	if m.SelectedId != nil {
		i -= len(*m.SelectedId)
		copy(dAtA[i:], *m.SelectedId)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.SelectedId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CatalogSnapshot) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CatalogSnapshot) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CatalogSnapshot) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Description != nil {
		i -= len(*m.Description)
		copy(dAtA[i:], *m.Description)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Description)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Title != nil {
		i -= len(*m.Title)
		copy(dAtA[i:], *m.Title)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if m.CatalogImage != nil {
		{
			size, err := m.CatalogImage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ProductSnapshot) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProductSnapshot) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProductSnapshot) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.FirstImageId != nil {
		i -= len(*m.FirstImageId)
		copy(dAtA[i:], *m.FirstImageId)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.FirstImageId)))
		i--
		dAtA[i] = 0x5a
	}
	if m.ProductImageCount != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.ProductImageCount))
		i--
		dAtA[i] = 0x48
	}
	if m.Url != nil {
		i -= len(*m.Url)
		copy(dAtA[i:], *m.Url)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Url)))
		i--
		dAtA[i] = 0x42
	}
	if m.RetailerId != nil {
		i -= len(*m.RetailerId)
		copy(dAtA[i:], *m.RetailerId)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.RetailerId)))
		i--
		dAtA[i] = 0x3a
	}
	if m.PriceAmount1000 != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.PriceAmount1000))
		i--
		dAtA[i] = 0x30
	}
	if m.CurrencyCode != nil {
		i -= len(*m.CurrencyCode)
		copy(dAtA[i:], *m.CurrencyCode)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.CurrencyCode)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Description != nil {
		i -= len(*m.Description)
		copy(dAtA[i:], *m.Description)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Description)))
		i--
		dAtA[i] = 0x22
	}
	if m.Title != nil {
		i -= len(*m.Title)
		copy(dAtA[i:], *m.Title)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Title)))
		i--
		dAtA[i] = 0x1a
	}
	if m.ProductId != nil {
		i -= len(*m.ProductId)
		copy(dAtA[i:], *m.ProductId)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.ProductId)))
		i--
		dAtA[i] = 0x12
	}
	if m.ProductImage != nil {
		{
			size, err := m.ProductImage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ProductMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProductMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ProductMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ContextInfo != nil {
		{
			size, err := m.ContextInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x8a
	}
	if m.Catalog != nil {
		{
			size, err := m.Catalog.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.BusinessOwnerJid != nil {
		i -= len(*m.BusinessOwnerJid)
		copy(dAtA[i:], *m.BusinessOwnerJid)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.BusinessOwnerJid)))
		i--
		dAtA[i] = 0x12
	}
	if m.Product != nil {
		{
			size, err := m.Product.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GroupInviteMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GroupInviteMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GroupInviteMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ContextInfo != nil {
		{
			size, err := m.ContextInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.Caption != nil {
		i -= len(*m.Caption)
		copy(dAtA[i:], *m.Caption)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Caption)))
		i--
		dAtA[i] = 0x32
	}
	if m.JpegThumbnail != nil {
		i -= len(m.JpegThumbnail)
		copy(dAtA[i:], m.JpegThumbnail)
		i = encodeVarintDef(dAtA, i, uint64(len(m.JpegThumbnail)))
		i--
		dAtA[i] = 0x2a
	}
	if m.GroupName != nil {
		i -= len(*m.GroupName)
		copy(dAtA[i:], *m.GroupName)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.GroupName)))
		i--
		dAtA[i] = 0x22
	}
	if m.InviteExpiration != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.InviteExpiration))
		i--
		dAtA[i] = 0x18
	}
	if m.InviteCode != nil {
		i -= len(*m.InviteCode)
		copy(dAtA[i:], *m.InviteCode)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.InviteCode)))
		i--
		dAtA[i] = 0x12
	}
	if m.GroupJid != nil {
		i -= len(*m.GroupJid)
		copy(dAtA[i:], *m.GroupJid)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.GroupJid)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DeviceSentMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeviceSentMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeviceSentMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Message != nil {
		{
			size, err := m.Message.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.DestinationJid != nil {
		i -= len(*m.DestinationJid)
		copy(dAtA[i:], *m.DestinationJid)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.DestinationJid)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *DeviceSyncMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeviceSyncMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeviceSyncMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.SerializedXmlBytes != nil {
		i -= len(m.SerializedXmlBytes)
		copy(dAtA[i:], m.SerializedXmlBytes)
		i = encodeVarintDef(dAtA, i, uint64(len(m.SerializedXmlBytes)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Message) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Message) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Message) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.DeviceSyncMessage != nil {
		{
			size, err := m.DeviceSyncMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0x82
	}
	if m.DeviceSentMessage != nil {
		{
			size, err := m.DeviceSentMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xfa
	}
	if m.ProductMessage != nil {
		{
			size, err := m.ProductMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xf2
	}
	if m.TemplateButtonReplyMessage != nil {
		{
			size, err := m.TemplateButtonReplyMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xea
	}
	if m.GroupInviteMessage != nil {
		{
			size, err := m.GroupInviteMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xe2
	}
	if m.StickerMessage != nil {
		{
			size, err := m.StickerMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xd2
	}
	if m.TemplateMessage != nil {
		{
			size, err := m.TemplateMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xca
	}
	if m.CancelPaymentRequestMessage != nil {
		{
			size, err := m.CancelPaymentRequestMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xc2
	}
	if m.DeclinePaymentRequestMessage != nil {
		{
			size, err := m.DeclinePaymentRequestMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xba
	}
	if m.RequestPaymentMessage != nil {
		{
			size, err := m.RequestPaymentMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xb2
	}
	if m.LiveLocationMessage != nil {
		{
			size, err := m.LiveLocationMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x92
	}
	if m.SendPaymentMessage != nil {
		{
			size, err := m.SendPaymentMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if m.FastRatchetKeySenderKeyDistributionMessage != nil {
		{
			size, err := m.FastRatchetKeySenderKeyDistributionMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x7a
	}
	if m.HighlyStructuredMessage != nil {
		{
			size, err := m.HighlyStructuredMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x72
	}
	if m.ContactsArrayMessage != nil {
		{
			size, err := m.ContactsArrayMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x6a
	}
	if m.ProtocolMessage != nil {
		{
			size, err := m.ProtocolMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x62
	}
	if m.Chat != nil {
		{
			size, err := m.Chat.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x5a
	}
	if m.Call != nil {
		{
			size, err := m.Call.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	if m.VideoMessage != nil {
		{
			size, err := m.VideoMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x4a
	}
	if m.AudioMessage != nil {
		{
			size, err := m.AudioMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x42
	}
	if m.DocumentMessage != nil {
		{
			size, err := m.DocumentMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x3a
	}
	if m.ExtendedTextMessage != nil {
		{
			size, err := m.ExtendedTextMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.LocationMessage != nil {
		{
			size, err := m.LocationMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x2a
	}
	if m.ContactMessage != nil {
		{
			size, err := m.ContactMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.ImageMessage != nil {
		{
			size, err := m.ImageMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if m.SenderKeyDistributionMessage != nil {
		{
			size, err := m.SenderKeyDistributionMessage.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Conversation != nil {
		i -= len(*m.Conversation)
		copy(dAtA[i:], *m.Conversation)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Conversation)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MessageKey) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MessageKey) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MessageKey) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Participant != nil {
		i -= len(*m.Participant)
		copy(dAtA[i:], *m.Participant)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Participant)))
		i--
		dAtA[i] = 0x22
	}
	if m.Id != nil {
		i -= len(*m.Id)
		copy(dAtA[i:], *m.Id)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Id)))
		i--
		dAtA[i] = 0x1a
	}
	if m.FromMe != nil {
		i--
		if *m.FromMe {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if m.RemoteJid != nil {
		i -= len(*m.RemoteJid)
		copy(dAtA[i:], *m.RemoteJid)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.RemoteJid)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *WebFeatures) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WebFeatures) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WebFeatures) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.RecentStickersV2 != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.RecentStickersV2))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0x90
	}
	if m.E2ENotificationSync != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.E2ENotificationSync))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0x88
	}
	if m.EphemeralMessages != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.EphemeralMessages))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0x80
	}
	if m.TemplateMessageInteractivity != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.TemplateMessageInteractivity))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xf8
	}
	if m.TemplateMessage != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.TemplateMessage))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xf0
	}
	if m.VoipGroupCall != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.VoipGroupCall))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xe8
	}
	if m.StarredStickers != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.StarredStickers))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xe0
	}
	if m.Catalog != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.Catalog))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xd8
	}
	if m.RecentStickers != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.RecentStickers))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xd0
	}
	if m.GroupsV4JoinPermission != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.GroupsV4JoinPermission))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xc8
	}
	if m.FrequentlyForwardedSetting != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.FrequentlyForwardedSetting))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xc0
	}
	if m.ThirdPartyStickers != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.ThirdPartyStickers))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xb8
	}
	if m.VoipIndividualVideo != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.VoipIndividualVideo))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xb0
	}
	if m.StatusRanking != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.StatusRanking))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa8
	}
	if m.VideoPlaybackUrl != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.VideoPlaybackUrl))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa0
	}
	if m.VnameV2 != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.VnameV2))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x98
	}
	if m.MediaUploadRichQuickReplies != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.MediaUploadRichQuickReplies))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x90
	}
	if m.MediaUpload != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.MediaUpload))
		i--
		dAtA[i] = 0x78
	}
	if m.LabelsEdit != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.LabelsEdit))
		i--
		dAtA[i] = 0x70
	}
	if m.LiveLocationsFinal != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.LiveLocationsFinal))
		i--
		dAtA[i] = 0x68
	}
	if m.StickerPackQuery != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.StickerPackQuery))
		i--
		dAtA[i] = 0x60
	}
	if m.Payments != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.Payments))
		i--
		dAtA[i] = 0x58
	}
	if m.QuickRepliesQuery != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.QuickRepliesQuery))
		i--
		dAtA[i] = 0x50
	}
	if m.VoipIndividualIncoming != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.VoipIndividualIncoming))
		i--
		dAtA[i] = 0x48
	}
	if m.QueryVname != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.QueryVname))
		i--
		dAtA[i] = 0x40
	}
	if m.LiveLocations != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.LiveLocations))
		i--
		dAtA[i] = 0x38
	}
	if m.QueryStatusV3Thumbnail != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.QueryStatusV3Thumbnail))
		i--
		dAtA[i] = 0x30
	}
	if m.ChangeNumberV2 != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.ChangeNumberV2))
		i--
		dAtA[i] = 0x28
	}
	if m.GroupsV3Create != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.GroupsV3Create))
		i--
		dAtA[i] = 0x20
	}
	if m.GroupsV3 != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.GroupsV3))
		i--
		dAtA[i] = 0x18
	}
	if m.VoipIndividualOutgoing != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.VoipIndividualOutgoing))
		i--
		dAtA[i] = 0x10
	}
	if m.LabelsDisplay != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.LabelsDisplay))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TabletNotificationsInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TabletNotificationsInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TabletNotificationsInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.NotifyMessage) > 0 {
		for iNdEx := len(m.NotifyMessage) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.NotifyMessage[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDef(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if m.NotifyMessageCount != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.NotifyMessageCount))
		i--
		dAtA[i] = 0x20
	}
	if m.UnreadChats != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.UnreadChats))
		i--
		dAtA[i] = 0x18
	}
	if m.Timestamp != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.Timestamp))
		i--
		dAtA[i] = 0x10
	}
	return len(dAtA) - i, nil
}

func (m *NotificationMessageInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *NotificationMessageInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *NotificationMessageInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Participant != nil {
		i -= len(*m.Participant)
		copy(dAtA[i:], *m.Participant)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Participant)))
		i--
		dAtA[i] = 0x22
	}
	if m.MessageTimestamp != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.MessageTimestamp))
		i--
		dAtA[i] = 0x18
	}
	if m.Message != nil {
		{
			size, err := m.Message.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Key != nil {
		{
			size, err := m.Key.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *WebNotificationsInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WebNotificationsInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WebNotificationsInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.NotifyMessages) > 0 {
		for iNdEx := len(m.NotifyMessages) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.NotifyMessages[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintDef(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x2a
		}
	}
	if m.NotifyMessageCount != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.NotifyMessageCount))
		i--
		dAtA[i] = 0x20
	}
	if m.UnreadChats != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.UnreadChats))
		i--
		dAtA[i] = 0x18
	}
	if m.Timestamp != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.Timestamp))
		i--
		dAtA[i] = 0x10
	}
	return len(dAtA) - i, nil
}

func (m *PaymentInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PaymentInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PaymentInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TxnStatus != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.TxnStatus))
		i--
		dAtA[i] = 0x50
	}
	if m.Currency != nil {
		i -= len(*m.Currency)
		copy(dAtA[i:], *m.Currency)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Currency)))
		i--
		dAtA[i] = 0x4a
	}
	if m.Futureproofed != nil {
		i--
		if *m.Futureproofed {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	if m.ExpiryTimestamp != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.ExpiryTimestamp))
		i--
		dAtA[i] = 0x38
	}
	if m.RequestMessageKey != nil {
		{
			size, err := m.RequestMessageKey.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x32
	}
	if m.TransactionTimestamp != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.TransactionTimestamp))
		i--
		dAtA[i] = 0x28
	}
	if m.Status != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.Status))
		i--
		dAtA[i] = 0x20
	}
	if m.ReceiverJid != nil {
		i -= len(*m.ReceiverJid)
		copy(dAtA[i:], *m.ReceiverJid)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.ReceiverJid)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Amount1000 != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.Amount1000))
		i--
		dAtA[i] = 0x10
	}
	if m.CurrencyDeprecated != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.CurrencyDeprecated))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *WebMessageInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *WebMessageInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *WebMessageInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.EphemeralDuration != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.EphemeralDuration))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0x88
	}
	if m.EphemeralStartTimestamp != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.EphemeralStartTimestamp))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0x80
	}
	if m.QuotedPaymentInfo != nil {
		{
			size, err := m.QuotedPaymentInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xfa
	}
	if m.FinalLiveLocation != nil {
		{
			size, err := m.FinalLiveLocation.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xf2
	}
	if m.PaymentInfo != nil {
		{
			size, err := m.PaymentInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xea
	}
	if len(m.Labels) > 0 {
		for iNdEx := len(m.Labels) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Labels[iNdEx])
			copy(dAtA[i:], m.Labels[iNdEx])
			i = encodeVarintDef(dAtA, i, uint64(len(m.Labels[iNdEx])))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xe2
		}
	}
	if m.Duration != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.Duration))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xd8
	}
	if len(m.MessageStubParameters) > 0 {
		for iNdEx := len(m.MessageStubParameters) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.MessageStubParameters[iNdEx])
			copy(dAtA[i:], m.MessageStubParameters[iNdEx])
			i = encodeVarintDef(dAtA, i, uint64(len(m.MessageStubParameters[iNdEx])))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xd2
		}
	}
	if m.ClearMedia != nil {
		i--
		if *m.ClearMedia {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xc8
	}
	if m.MessageStubType != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.MessageStubType))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xc0
	}
	if m.UrlNumber != nil {
		i--
		if *m.UrlNumber {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xb8
	}
	if m.UrlText != nil {
		i--
		if *m.UrlText {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xb0
	}
	if m.Multicast != nil {
		i--
		if *m.Multicast {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa8
	}
	if m.MediaCiphertextSha256 != nil {
		i -= len(m.MediaCiphertextSha256)
		copy(dAtA[i:], m.MediaCiphertextSha256)
		i = encodeVarintDef(dAtA, i, uint64(len(m.MediaCiphertextSha256)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa2
	}
	if m.PushName != nil {
		i -= len(*m.PushName)
		copy(dAtA[i:], *m.PushName)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.PushName)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x9a
	}
	if m.Broadcast != nil {
		i--
		if *m.Broadcast {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x90
	}
	if m.Starred != nil {
		i--
		if *m.Starred {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x88
	}
	if m.Ignore != nil {
		i--
		if *m.Ignore {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x80
	}
	if m.Participant != nil {
		i -= len(*m.Participant)
		copy(dAtA[i:], *m.Participant)
		i = encodeVarintDef(dAtA, i, uint64(len(*m.Participant)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Status != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.Status))
		i--
		dAtA[i] = 0x20
	}
	if m.MessageTimestamp != nil {
		i = encodeVarintDef(dAtA, i, uint64(*m.MessageTimestamp))
		i--
		dAtA[i] = 0x18
	}
	if m.Message != nil {
		{
			size, err := m.Message.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x12
	}
	if m.Key == nil {
		return 0, new(github_com_golang_protobuf_proto.RequiredNotSetError)
	} else {
		{
			size, err := m.Key.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintDef(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintDef(dAtA []byte, offset int, v uint64) int {
	offset -= sovDef(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *HydratedQuickReplyButton) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DisplayText != nil {
		l = len(*m.DisplayText)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Id != nil {
		l = len(*m.Id)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *HydratedURLButton) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DisplayText != nil {
		l = len(*m.DisplayText)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Url != nil {
		l = len(*m.Url)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *HydratedCallButton) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DisplayText != nil {
		l = len(*m.DisplayText)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.PhoneNumber != nil {
		l = len(*m.PhoneNumber)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *HydratedTemplateButton) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HydratedButton != nil {
		n += m.HydratedButton.Size()
	}
	if m.Index != nil {
		n += 1 + sovDef(uint64(*m.Index))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *HydratedTemplateButton_QuickReplyButton) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.QuickReplyButton != nil {
		l = m.QuickReplyButton.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	return n
}
func (m *HydratedTemplateButton_UrlButton) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UrlButton != nil {
		l = m.UrlButton.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	return n
}
func (m *HydratedTemplateButton_CallButton) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CallButton != nil {
		l = m.CallButton.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	return n
}
func (m *QuickReplyButton) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DisplayText != nil {
		l = m.DisplayText.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Id != nil {
		l = len(*m.Id)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *URLButton) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DisplayText != nil {
		l = m.DisplayText.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Url != nil {
		l = m.Url.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CallButton) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DisplayText != nil {
		l = m.DisplayText.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.PhoneNumber != nil {
		l = m.PhoneNumber.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TemplateButton) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Button != nil {
		n += m.Button.Size()
	}
	if m.Index != nil {
		n += 1 + sovDef(uint64(*m.Index))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TemplateButton_QuickReplyButton) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.QuickReplyButton != nil {
		l = m.QuickReplyButton.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	return n
}
func (m *TemplateButton_UrlButton) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UrlButton != nil {
		l = m.UrlButton.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	return n
}
func (m *TemplateButton_CallButton) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CallButton != nil {
		l = m.CallButton.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	return n
}
func (m *Location) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DegreesLatitude != nil {
		n += 9
	}
	if m.DegreesLongitude != nil {
		n += 9
	}
	if m.Name != nil {
		l = len(*m.Name)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Point) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XDeprecated != nil {
		n += 1 + sovDef(uint64(*m.XDeprecated))
	}
	if m.YDeprecated != nil {
		n += 1 + sovDef(uint64(*m.YDeprecated))
	}
	if m.X != nil {
		n += 9
	}
	if m.Y != nil {
		n += 9
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *InteractiveAnnotation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.PolygonVertices) > 0 {
		for _, e := range m.PolygonVertices {
			l = e.Size()
			n += 1 + l + sovDef(uint64(l))
		}
	}
	if m.Action != nil {
		n += m.Action.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *InteractiveAnnotation_Location) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Location != nil {
		l = m.Location.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	return n
}
func (m *AdReplyInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AdvertiserName != nil {
		l = len(*m.AdvertiserName)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.MediaType != nil {
		n += 1 + sovDef(uint64(*m.MediaType))
	}
	if m.JpegThumbnail != nil {
		l = len(m.JpegThumbnail)
		n += 2 + l + sovDef(uint64(l))
	}
	if m.Caption != nil {
		l = len(*m.Caption)
		n += 2 + l + sovDef(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ContextInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.StanzaId != nil {
		l = len(*m.StanzaId)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Participant != nil {
		l = len(*m.Participant)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.QuotedMessage != nil {
		l = m.QuotedMessage.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.RemoteJid != nil {
		l = len(*m.RemoteJid)
		n += 1 + l + sovDef(uint64(l))
	}
	if len(m.MentionedJid) > 0 {
		for _, s := range m.MentionedJid {
			l = len(s)
			n += 1 + l + sovDef(uint64(l))
		}
	}
	if m.ConversionSource != nil {
		l = len(*m.ConversionSource)
		n += 2 + l + sovDef(uint64(l))
	}
	if m.ConversionData != nil {
		l = len(m.ConversionData)
		n += 2 + l + sovDef(uint64(l))
	}
	if m.ConversionDelaySeconds != nil {
		n += 2 + sovDef(uint64(*m.ConversionDelaySeconds))
	}
	if m.ForwardingScore != nil {
		n += 2 + sovDef(uint64(*m.ForwardingScore))
	}
	if m.IsForwarded != nil {
		n += 3
	}
	if m.QuotedAd != nil {
		l = m.QuotedAd.Size()
		n += 2 + l + sovDef(uint64(l))
	}
	if m.PlaceholderKey != nil {
		l = m.PlaceholderKey.Size()
		n += 2 + l + sovDef(uint64(l))
	}
	if m.Expiration != nil {
		n += 2 + sovDef(uint64(*m.Expiration))
	}
	if m.EphemeralSettingTimestamp != nil {
		n += 2 + sovDef(uint64(*m.EphemeralSettingTimestamp))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SenderKeyDistributionMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.GroupId != nil {
		l = len(*m.GroupId)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.AxolotlSenderKeyDistributionMessage != nil {
		l = len(m.AxolotlSenderKeyDistributionMessage)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ImageMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Url != nil {
		l = len(*m.Url)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Mimetype != nil {
		l = len(*m.Mimetype)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Caption != nil {
		l = len(*m.Caption)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.FileSha256 != nil {
		l = len(m.FileSha256)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.FileLength != nil {
		n += 1 + sovDef(uint64(*m.FileLength))
	}
	if m.Height != nil {
		n += 1 + sovDef(uint64(*m.Height))
	}
	if m.Width != nil {
		n += 1 + sovDef(uint64(*m.Width))
	}
	if m.MediaKey != nil {
		l = len(m.MediaKey)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.FileEncSha256 != nil {
		l = len(m.FileEncSha256)
		n += 1 + l + sovDef(uint64(l))
	}
	if len(m.InteractiveAnnotations) > 0 {
		for _, e := range m.InteractiveAnnotations {
			l = e.Size()
			n += 1 + l + sovDef(uint64(l))
		}
	}
	if m.DirectPath != nil {
		l = len(*m.DirectPath)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.MediaKeyTimestamp != nil {
		n += 1 + sovDef(uint64(*m.MediaKeyTimestamp))
	}
	if m.JpegThumbnail != nil {
		l = len(m.JpegThumbnail)
		n += 2 + l + sovDef(uint64(l))
	}
	if m.ContextInfo != nil {
		l = m.ContextInfo.Size()
		n += 2 + l + sovDef(uint64(l))
	}
	if m.FirstScanSidecar != nil {
		l = len(m.FirstScanSidecar)
		n += 2 + l + sovDef(uint64(l))
	}
	if m.FirstScanLength != nil {
		n += 2 + sovDef(uint64(*m.FirstScanLength))
	}
	if m.ExperimentGroupId != nil {
		n += 2 + sovDef(uint64(*m.ExperimentGroupId))
	}
	if m.ScansSidecar != nil {
		l = len(m.ScansSidecar)
		n += 2 + l + sovDef(uint64(l))
	}
	if len(m.ScanLengths) > 0 {
		for _, e := range m.ScanLengths {
			n += 2 + sovDef(uint64(e))
		}
	}
	if m.MidQualityFileSha256 != nil {
		l = len(m.MidQualityFileSha256)
		n += 2 + l + sovDef(uint64(l))
	}
	if m.MidQualityFileEncSha256 != nil {
		l = len(m.MidQualityFileEncSha256)
		n += 2 + l + sovDef(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ContactMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DisplayName != nil {
		l = len(*m.DisplayName)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Vcard != nil {
		l = len(*m.Vcard)
		n += 2 + l + sovDef(uint64(l))
	}
	if m.ContextInfo != nil {
		l = m.ContextInfo.Size()
		n += 2 + l + sovDef(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LocationMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DegreesLatitude != nil {
		n += 9
	}
	if m.DegreesLongitude != nil {
		n += 9
	}
	if m.Name != nil {
		l = len(*m.Name)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Address != nil {
		l = len(*m.Address)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Url != nil {
		l = len(*m.Url)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.IsLive != nil {
		n += 2
	}
	if m.AccuracyInMeters != nil {
		n += 1 + sovDef(uint64(*m.AccuracyInMeters))
	}
	if m.SpeedInMps != nil {
		n += 5
	}
	if m.DegreesClockwiseFromMagneticNorth != nil {
		n += 1 + sovDef(uint64(*m.DegreesClockwiseFromMagneticNorth))
	}
	if m.Comment != nil {
		l = len(*m.Comment)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.JpegThumbnail != nil {
		l = len(m.JpegThumbnail)
		n += 2 + l + sovDef(uint64(l))
	}
	if m.ContextInfo != nil {
		l = m.ContextInfo.Size()
		n += 2 + l + sovDef(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ExtendedTextMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Text != nil {
		l = len(*m.Text)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.MatchedText != nil {
		l = len(*m.MatchedText)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.CanonicalUrl != nil {
		l = len(*m.CanonicalUrl)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Description != nil {
		l = len(*m.Description)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Title != nil {
		l = len(*m.Title)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.TextArgb != nil {
		n += 5
	}
	if m.BackgroundArgb != nil {
		n += 5
	}
	if m.Font != nil {
		n += 1 + sovDef(uint64(*m.Font))
	}
	if m.PreviewType != nil {
		n += 1 + sovDef(uint64(*m.PreviewType))
	}
	if m.JpegThumbnail != nil {
		l = len(m.JpegThumbnail)
		n += 2 + l + sovDef(uint64(l))
	}
	if m.ContextInfo != nil {
		l = m.ContextInfo.Size()
		n += 2 + l + sovDef(uint64(l))
	}
	if m.DoNotPlayInline != nil {
		n += 3
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DocumentMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Url != nil {
		l = len(*m.Url)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Mimetype != nil {
		l = len(*m.Mimetype)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Title != nil {
		l = len(*m.Title)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.FileSha256 != nil {
		l = len(m.FileSha256)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.FileLength != nil {
		n += 1 + sovDef(uint64(*m.FileLength))
	}
	if m.PageCount != nil {
		n += 1 + sovDef(uint64(*m.PageCount))
	}
	if m.MediaKey != nil {
		l = len(m.MediaKey)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.FileName != nil {
		l = len(*m.FileName)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.FileEncSha256 != nil {
		l = len(m.FileEncSha256)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.DirectPath != nil {
		l = len(*m.DirectPath)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.MediaKeyTimestamp != nil {
		n += 1 + sovDef(uint64(*m.MediaKeyTimestamp))
	}
	if m.JpegThumbnail != nil {
		l = len(m.JpegThumbnail)
		n += 2 + l + sovDef(uint64(l))
	}
	if m.ContextInfo != nil {
		l = m.ContextInfo.Size()
		n += 2 + l + sovDef(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AudioMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Url != nil {
		l = len(*m.Url)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Mimetype != nil {
		l = len(*m.Mimetype)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.FileSha256 != nil {
		l = len(m.FileSha256)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.FileLength != nil {
		n += 1 + sovDef(uint64(*m.FileLength))
	}
	if m.Seconds != nil {
		n += 1 + sovDef(uint64(*m.Seconds))
	}
	if m.Ptt != nil {
		n += 2
	}
	if m.MediaKey != nil {
		l = len(m.MediaKey)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.FileEncSha256 != nil {
		l = len(m.FileEncSha256)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.DirectPath != nil {
		l = len(*m.DirectPath)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.MediaKeyTimestamp != nil {
		n += 1 + sovDef(uint64(*m.MediaKeyTimestamp))
	}
	if m.ContextInfo != nil {
		l = m.ContextInfo.Size()
		n += 2 + l + sovDef(uint64(l))
	}
	if m.StreamingSidecar != nil {
		l = len(m.StreamingSidecar)
		n += 2 + l + sovDef(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *VideoMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Url != nil {
		l = len(*m.Url)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Mimetype != nil {
		l = len(*m.Mimetype)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.FileSha256 != nil {
		l = len(m.FileSha256)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.FileLength != nil {
		n += 1 + sovDef(uint64(*m.FileLength))
	}
	if m.Seconds != nil {
		n += 1 + sovDef(uint64(*m.Seconds))
	}
	if m.MediaKey != nil {
		l = len(m.MediaKey)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Caption != nil {
		l = len(*m.Caption)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.GifPlayback != nil {
		n += 2
	}
	if m.Height != nil {
		n += 1 + sovDef(uint64(*m.Height))
	}
	if m.Width != nil {
		n += 1 + sovDef(uint64(*m.Width))
	}
	if m.FileEncSha256 != nil {
		l = len(m.FileEncSha256)
		n += 1 + l + sovDef(uint64(l))
	}
	if len(m.InteractiveAnnotations) > 0 {
		for _, e := range m.InteractiveAnnotations {
			l = e.Size()
			n += 1 + l + sovDef(uint64(l))
		}
	}
	if m.DirectPath != nil {
		l = len(*m.DirectPath)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.MediaKeyTimestamp != nil {
		n += 1 + sovDef(uint64(*m.MediaKeyTimestamp))
	}
	if m.JpegThumbnail != nil {
		l = len(m.JpegThumbnail)
		n += 2 + l + sovDef(uint64(l))
	}
	if m.ContextInfo != nil {
		l = m.ContextInfo.Size()
		n += 2 + l + sovDef(uint64(l))
	}
	if m.StreamingSidecar != nil {
		l = len(m.StreamingSidecar)
		n += 2 + l + sovDef(uint64(l))
	}
	if m.GifAttribution != nil {
		n += 2 + sovDef(uint64(*m.GifAttribution))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Call) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CallKey != nil {
		l = len(m.CallKey)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Chat) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DisplayName != nil {
		l = len(*m.DisplayName)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Id != nil {
		l = len(*m.Id)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProtocolMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Key != nil {
		l = m.Key.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Type != nil {
		n += 1 + sovDef(uint64(*m.Type))
	}
	if m.EphemeralExpiration != nil {
		n += 1 + sovDef(uint64(*m.EphemeralExpiration))
	}
	if m.EphemeralSettingTimestamp != nil {
		n += 1 + sovDef(uint64(*m.EphemeralSettingTimestamp))
	}
	if m.HistorySyncNotification != nil {
		l = m.HistorySyncNotification.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *HistorySyncNotification) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FileSha256 != nil {
		l = len(m.FileSha256)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.FileLength != nil {
		n += 1 + sovDef(uint64(*m.FileLength))
	}
	if m.MediaKey != nil {
		l = len(m.MediaKey)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.FileEncSha256 != nil {
		l = len(m.FileEncSha256)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.DirectPath != nil {
		l = len(*m.DirectPath)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.SyncType != nil {
		n += 1 + sovDef(uint64(*m.SyncType))
	}
	if m.ChunkOrder != nil {
		n += 1 + sovDef(uint64(*m.ChunkOrder))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ContactsArrayMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DisplayName != nil {
		l = len(*m.DisplayName)
		n += 1 + l + sovDef(uint64(l))
	}
	if len(m.Contacts) > 0 {
		for _, e := range m.Contacts {
			l = e.Size()
			n += 1 + l + sovDef(uint64(l))
		}
	}
	if m.ContextInfo != nil {
		l = m.ContextInfo.Size()
		n += 2 + l + sovDef(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *HSMCurrency) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CurrencyCode != nil {
		l = len(*m.CurrencyCode)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Amount1000 != nil {
		n += 1 + sovDef(uint64(*m.Amount1000))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *HSMDateTimeComponent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DayOfWeek != nil {
		n += 1 + sovDef(uint64(*m.DayOfWeek))
	}
	if m.Year != nil {
		n += 1 + sovDef(uint64(*m.Year))
	}
	if m.Month != nil {
		n += 1 + sovDef(uint64(*m.Month))
	}
	if m.DayOfMonth != nil {
		n += 1 + sovDef(uint64(*m.DayOfMonth))
	}
	if m.Hour != nil {
		n += 1 + sovDef(uint64(*m.Hour))
	}
	if m.Minute != nil {
		n += 1 + sovDef(uint64(*m.Minute))
	}
	if m.Calendar != nil {
		n += 1 + sovDef(uint64(*m.Calendar))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *HSMDateTimeUnixEpoch) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Timestamp != nil {
		n += 1 + sovDef(uint64(*m.Timestamp))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *HSMDateTime) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DatetimeOneof != nil {
		n += m.DatetimeOneof.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *HSMDateTime_Component) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Component != nil {
		l = m.Component.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	return n
}
func (m *HSMDateTime_UnixEpoch) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UnixEpoch != nil {
		l = m.UnixEpoch.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	return n
}
func (m *HSMLocalizableParameter) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Default != nil {
		l = len(*m.Default)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.ParamOneof != nil {
		n += m.ParamOneof.Size()
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *HSMLocalizableParameter_Currency) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Currency != nil {
		l = m.Currency.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	return n
}
func (m *HSMLocalizableParameter_DateTime) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DateTime != nil {
		l = m.DateTime.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	return n
}
func (m *HighlyStructuredMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Namespace != nil {
		l = len(*m.Namespace)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.ElementName != nil {
		l = len(*m.ElementName)
		n += 1 + l + sovDef(uint64(l))
	}
	if len(m.Params) > 0 {
		for _, s := range m.Params {
			l = len(s)
			n += 1 + l + sovDef(uint64(l))
		}
	}
	if m.FallbackLg != nil {
		l = len(*m.FallbackLg)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.FallbackLc != nil {
		l = len(*m.FallbackLc)
		n += 1 + l + sovDef(uint64(l))
	}
	if len(m.LocalizableParams) > 0 {
		for _, e := range m.LocalizableParams {
			l = e.Size()
			n += 1 + l + sovDef(uint64(l))
		}
	}
	if m.DeterministicLg != nil {
		l = len(*m.DeterministicLg)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.DeterministicLc != nil {
		l = len(*m.DeterministicLc)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.HydratedHsm != nil {
		l = m.HydratedHsm.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SendPaymentMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.NoteMessage != nil {
		l = m.NoteMessage.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.RequestMessageKey != nil {
		l = m.RequestMessageKey.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RequestPaymentMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CurrencyCodeIso4217 != nil {
		l = len(*m.CurrencyCodeIso4217)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Amount1000 != nil {
		n += 1 + sovDef(uint64(*m.Amount1000))
	}
	if m.RequestFrom != nil {
		l = len(*m.RequestFrom)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.NoteMessage != nil {
		l = m.NoteMessage.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.ExpiryTimestamp != nil {
		n += 1 + sovDef(uint64(*m.ExpiryTimestamp))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeclinePaymentRequestMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Key != nil {
		l = m.Key.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CancelPaymentRequestMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Key != nil {
		l = m.Key.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LiveLocationMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DegreesLatitude != nil {
		n += 9
	}
	if m.DegreesLongitude != nil {
		n += 9
	}
	if m.AccuracyInMeters != nil {
		n += 1 + sovDef(uint64(*m.AccuracyInMeters))
	}
	if m.SpeedInMps != nil {
		n += 5
	}
	if m.DegreesClockwiseFromMagneticNorth != nil {
		n += 1 + sovDef(uint64(*m.DegreesClockwiseFromMagneticNorth))
	}
	if m.Caption != nil {
		l = len(*m.Caption)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.SequenceNumber != nil {
		n += 1 + sovDef(uint64(*m.SequenceNumber))
	}
	if m.TimeOffset != nil {
		n += 1 + sovDef(uint64(*m.TimeOffset))
	}
	if m.JpegThumbnail != nil {
		l = len(m.JpegThumbnail)
		n += 2 + l + sovDef(uint64(l))
	}
	if m.ContextInfo != nil {
		l = m.ContextInfo.Size()
		n += 2 + l + sovDef(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *StickerMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Url != nil {
		l = len(*m.Url)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.FileSha256 != nil {
		l = len(m.FileSha256)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.FileEncSha256 != nil {
		l = len(m.FileEncSha256)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.MediaKey != nil {
		l = len(m.MediaKey)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Mimetype != nil {
		l = len(*m.Mimetype)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Height != nil {
		n += 1 + sovDef(uint64(*m.Height))
	}
	if m.Width != nil {
		n += 1 + sovDef(uint64(*m.Width))
	}
	if m.DirectPath != nil {
		l = len(*m.DirectPath)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.FileLength != nil {
		n += 1 + sovDef(uint64(*m.FileLength))
	}
	if m.MediaKeyTimestamp != nil {
		n += 1 + sovDef(uint64(*m.MediaKeyTimestamp))
	}
	if m.FirstFrameLength != nil {
		n += 1 + sovDef(uint64(*m.FirstFrameLength))
	}
	if m.FirstFrameSidecar != nil {
		l = len(m.FirstFrameSidecar)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.IsAnimated != nil {
		n += 2
	}
	if m.PngThumbnail != nil {
		l = len(m.PngThumbnail)
		n += 2 + l + sovDef(uint64(l))
	}
	if m.ContextInfo != nil {
		l = m.ContextInfo.Size()
		n += 2 + l + sovDef(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *FourRowTemplate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Title != nil {
		n += m.Title.Size()
	}
	if m.Content != nil {
		l = m.Content.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Footer != nil {
		l = m.Footer.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if len(m.Buttons) > 0 {
		for _, e := range m.Buttons {
			l = e.Size()
			n += 1 + l + sovDef(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *FourRowTemplate_DocumentMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DocumentMessage != nil {
		l = m.DocumentMessage.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	return n
}
func (m *FourRowTemplate_HighlyStructuredMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HighlyStructuredMessage != nil {
		l = m.HighlyStructuredMessage.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	return n
}
func (m *FourRowTemplate_ImageMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ImageMessage != nil {
		l = m.ImageMessage.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	return n
}
func (m *FourRowTemplate_VideoMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.VideoMessage != nil {
		l = m.VideoMessage.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	return n
}
func (m *FourRowTemplate_LocationMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LocationMessage != nil {
		l = m.LocationMessage.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	return n
}
func (m *HydratedFourRowTemplate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Title != nil {
		n += m.Title.Size()
	}
	if m.HydratedContentText != nil {
		l = len(*m.HydratedContentText)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.HydratedFooterText != nil {
		l = len(*m.HydratedFooterText)
		n += 1 + l + sovDef(uint64(l))
	}
	if len(m.HydratedButtons) > 0 {
		for _, e := range m.HydratedButtons {
			l = e.Size()
			n += 1 + l + sovDef(uint64(l))
		}
	}
	if m.TemplateId != nil {
		l = len(*m.TemplateId)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *HydratedFourRowTemplate_DocumentMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DocumentMessage != nil {
		l = m.DocumentMessage.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	return n
}
func (m *HydratedFourRowTemplate_HydratedTitleText) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.HydratedTitleText)
	n += 1 + l + sovDef(uint64(l))
	return n
}
func (m *HydratedFourRowTemplate_ImageMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ImageMessage != nil {
		l = m.ImageMessage.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	return n
}
func (m *HydratedFourRowTemplate_VideoMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.VideoMessage != nil {
		l = m.VideoMessage.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	return n
}
func (m *HydratedFourRowTemplate_LocationMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LocationMessage != nil {
		l = m.LocationMessage.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	return n
}
func (m *TemplateMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Format != nil {
		n += m.Format.Size()
	}
	if m.ContextInfo != nil {
		l = m.ContextInfo.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.HydratedTemplate != nil {
		l = m.HydratedTemplate.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TemplateMessage_FourRowTemplate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.FourRowTemplate != nil {
		l = m.FourRowTemplate.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	return n
}
func (m *TemplateMessage_HydratedFourRowTemplate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.HydratedFourRowTemplate != nil {
		l = m.HydratedFourRowTemplate.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	return n
}
func (m *TemplateButtonReplyMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SelectedId != nil {
		l = len(*m.SelectedId)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.SelectedDisplayText != nil {
		l = len(*m.SelectedDisplayText)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.ContextInfo != nil {
		l = m.ContextInfo.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.SelectedIndex != nil {
		n += 1 + sovDef(uint64(*m.SelectedIndex))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CatalogSnapshot) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CatalogImage != nil {
		l = m.CatalogImage.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Title != nil {
		l = len(*m.Title)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Description != nil {
		l = len(*m.Description)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProductSnapshot) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ProductImage != nil {
		l = m.ProductImage.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.ProductId != nil {
		l = len(*m.ProductId)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Title != nil {
		l = len(*m.Title)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Description != nil {
		l = len(*m.Description)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.CurrencyCode != nil {
		l = len(*m.CurrencyCode)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.PriceAmount1000 != nil {
		n += 1 + sovDef(uint64(*m.PriceAmount1000))
	}
	if m.RetailerId != nil {
		l = len(*m.RetailerId)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Url != nil {
		l = len(*m.Url)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.ProductImageCount != nil {
		n += 1 + sovDef(uint64(*m.ProductImageCount))
	}
	if m.FirstImageId != nil {
		l = len(*m.FirstImageId)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ProductMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Product != nil {
		l = m.Product.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.BusinessOwnerJid != nil {
		l = len(*m.BusinessOwnerJid)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Catalog != nil {
		l = m.Catalog.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.ContextInfo != nil {
		l = m.ContextInfo.Size()
		n += 2 + l + sovDef(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GroupInviteMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.GroupJid != nil {
		l = len(*m.GroupJid)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.InviteCode != nil {
		l = len(*m.InviteCode)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.InviteExpiration != nil {
		n += 1 + sovDef(uint64(*m.InviteExpiration))
	}
	if m.GroupName != nil {
		l = len(*m.GroupName)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.JpegThumbnail != nil {
		l = len(m.JpegThumbnail)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Caption != nil {
		l = len(*m.Caption)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.ContextInfo != nil {
		l = m.ContextInfo.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeviceSentMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DestinationJid != nil {
		l = len(*m.DestinationJid)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Message != nil {
		l = m.Message.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeviceSyncMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SerializedXmlBytes != nil {
		l = len(m.SerializedXmlBytes)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Message) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Conversation != nil {
		l = len(*m.Conversation)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.SenderKeyDistributionMessage != nil {
		l = m.SenderKeyDistributionMessage.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.ImageMessage != nil {
		l = m.ImageMessage.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.ContactMessage != nil {
		l = m.ContactMessage.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.LocationMessage != nil {
		l = m.LocationMessage.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.ExtendedTextMessage != nil {
		l = m.ExtendedTextMessage.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.DocumentMessage != nil {
		l = m.DocumentMessage.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.AudioMessage != nil {
		l = m.AudioMessage.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.VideoMessage != nil {
		l = m.VideoMessage.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Call != nil {
		l = m.Call.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Chat != nil {
		l = m.Chat.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.ProtocolMessage != nil {
		l = m.ProtocolMessage.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.ContactsArrayMessage != nil {
		l = m.ContactsArrayMessage.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.HighlyStructuredMessage != nil {
		l = m.HighlyStructuredMessage.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.FastRatchetKeySenderKeyDistributionMessage != nil {
		l = m.FastRatchetKeySenderKeyDistributionMessage.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.SendPaymentMessage != nil {
		l = m.SendPaymentMessage.Size()
		n += 2 + l + sovDef(uint64(l))
	}
	if m.LiveLocationMessage != nil {
		l = m.LiveLocationMessage.Size()
		n += 2 + l + sovDef(uint64(l))
	}
	if m.RequestPaymentMessage != nil {
		l = m.RequestPaymentMessage.Size()
		n += 2 + l + sovDef(uint64(l))
	}
	if m.DeclinePaymentRequestMessage != nil {
		l = m.DeclinePaymentRequestMessage.Size()
		n += 2 + l + sovDef(uint64(l))
	}
	if m.CancelPaymentRequestMessage != nil {
		l = m.CancelPaymentRequestMessage.Size()
		n += 2 + l + sovDef(uint64(l))
	}
	if m.TemplateMessage != nil {
		l = m.TemplateMessage.Size()
		n += 2 + l + sovDef(uint64(l))
	}
	if m.StickerMessage != nil {
		l = m.StickerMessage.Size()
		n += 2 + l + sovDef(uint64(l))
	}
	if m.GroupInviteMessage != nil {
		l = m.GroupInviteMessage.Size()
		n += 2 + l + sovDef(uint64(l))
	}
	if m.TemplateButtonReplyMessage != nil {
		l = m.TemplateButtonReplyMessage.Size()
		n += 2 + l + sovDef(uint64(l))
	}
	if m.ProductMessage != nil {
		l = m.ProductMessage.Size()
		n += 2 + l + sovDef(uint64(l))
	}
	if m.DeviceSentMessage != nil {
		l = m.DeviceSentMessage.Size()
		n += 2 + l + sovDef(uint64(l))
	}
	if m.DeviceSyncMessage != nil {
		l = m.DeviceSyncMessage.Size()
		n += 2 + l + sovDef(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MessageKey) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RemoteJid != nil {
		l = len(*m.RemoteJid)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.FromMe != nil {
		n += 2
	}
	if m.Id != nil {
		l = len(*m.Id)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Participant != nil {
		l = len(*m.Participant)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WebFeatures) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LabelsDisplay != nil {
		n += 1 + sovDef(uint64(*m.LabelsDisplay))
	}
	if m.VoipIndividualOutgoing != nil {
		n += 1 + sovDef(uint64(*m.VoipIndividualOutgoing))
	}
	if m.GroupsV3 != nil {
		n += 1 + sovDef(uint64(*m.GroupsV3))
	}
	if m.GroupsV3Create != nil {
		n += 1 + sovDef(uint64(*m.GroupsV3Create))
	}
	if m.ChangeNumberV2 != nil {
		n += 1 + sovDef(uint64(*m.ChangeNumberV2))
	}
	if m.QueryStatusV3Thumbnail != nil {
		n += 1 + sovDef(uint64(*m.QueryStatusV3Thumbnail))
	}
	if m.LiveLocations != nil {
		n += 1 + sovDef(uint64(*m.LiveLocations))
	}
	if m.QueryVname != nil {
		n += 1 + sovDef(uint64(*m.QueryVname))
	}
	if m.VoipIndividualIncoming != nil {
		n += 1 + sovDef(uint64(*m.VoipIndividualIncoming))
	}
	if m.QuickRepliesQuery != nil {
		n += 1 + sovDef(uint64(*m.QuickRepliesQuery))
	}
	if m.Payments != nil {
		n += 1 + sovDef(uint64(*m.Payments))
	}
	if m.StickerPackQuery != nil {
		n += 1 + sovDef(uint64(*m.StickerPackQuery))
	}
	if m.LiveLocationsFinal != nil {
		n += 1 + sovDef(uint64(*m.LiveLocationsFinal))
	}
	if m.LabelsEdit != nil {
		n += 1 + sovDef(uint64(*m.LabelsEdit))
	}
	if m.MediaUpload != nil {
		n += 1 + sovDef(uint64(*m.MediaUpload))
	}
	if m.MediaUploadRichQuickReplies != nil {
		n += 2 + sovDef(uint64(*m.MediaUploadRichQuickReplies))
	}
	if m.VnameV2 != nil {
		n += 2 + sovDef(uint64(*m.VnameV2))
	}
	if m.VideoPlaybackUrl != nil {
		n += 2 + sovDef(uint64(*m.VideoPlaybackUrl))
	}
	if m.StatusRanking != nil {
		n += 2 + sovDef(uint64(*m.StatusRanking))
	}
	if m.VoipIndividualVideo != nil {
		n += 2 + sovDef(uint64(*m.VoipIndividualVideo))
	}
	if m.ThirdPartyStickers != nil {
		n += 2 + sovDef(uint64(*m.ThirdPartyStickers))
	}
	if m.FrequentlyForwardedSetting != nil {
		n += 2 + sovDef(uint64(*m.FrequentlyForwardedSetting))
	}
	if m.GroupsV4JoinPermission != nil {
		n += 2 + sovDef(uint64(*m.GroupsV4JoinPermission))
	}
	if m.RecentStickers != nil {
		n += 2 + sovDef(uint64(*m.RecentStickers))
	}
	if m.Catalog != nil {
		n += 2 + sovDef(uint64(*m.Catalog))
	}
	if m.StarredStickers != nil {
		n += 2 + sovDef(uint64(*m.StarredStickers))
	}
	if m.VoipGroupCall != nil {
		n += 2 + sovDef(uint64(*m.VoipGroupCall))
	}
	if m.TemplateMessage != nil {
		n += 2 + sovDef(uint64(*m.TemplateMessage))
	}
	if m.TemplateMessageInteractivity != nil {
		n += 2 + sovDef(uint64(*m.TemplateMessageInteractivity))
	}
	if m.EphemeralMessages != nil {
		n += 2 + sovDef(uint64(*m.EphemeralMessages))
	}
	if m.E2ENotificationSync != nil {
		n += 2 + sovDef(uint64(*m.E2ENotificationSync))
	}
	if m.RecentStickersV2 != nil {
		n += 2 + sovDef(uint64(*m.RecentStickersV2))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TabletNotificationsInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Timestamp != nil {
		n += 1 + sovDef(uint64(*m.Timestamp))
	}
	if m.UnreadChats != nil {
		n += 1 + sovDef(uint64(*m.UnreadChats))
	}
	if m.NotifyMessageCount != nil {
		n += 1 + sovDef(uint64(*m.NotifyMessageCount))
	}
	if len(m.NotifyMessage) > 0 {
		for _, e := range m.NotifyMessage {
			l = e.Size()
			n += 1 + l + sovDef(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *NotificationMessageInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Key != nil {
		l = m.Key.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Message != nil {
		l = m.Message.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.MessageTimestamp != nil {
		n += 1 + sovDef(uint64(*m.MessageTimestamp))
	}
	if m.Participant != nil {
		l = len(*m.Participant)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WebNotificationsInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Timestamp != nil {
		n += 1 + sovDef(uint64(*m.Timestamp))
	}
	if m.UnreadChats != nil {
		n += 1 + sovDef(uint64(*m.UnreadChats))
	}
	if m.NotifyMessageCount != nil {
		n += 1 + sovDef(uint64(*m.NotifyMessageCount))
	}
	if len(m.NotifyMessages) > 0 {
		for _, e := range m.NotifyMessages {
			l = e.Size()
			n += 1 + l + sovDef(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PaymentInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CurrencyDeprecated != nil {
		n += 1 + sovDef(uint64(*m.CurrencyDeprecated))
	}
	if m.Amount1000 != nil {
		n += 1 + sovDef(uint64(*m.Amount1000))
	}
	if m.ReceiverJid != nil {
		l = len(*m.ReceiverJid)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Status != nil {
		n += 1 + sovDef(uint64(*m.Status))
	}
	if m.TransactionTimestamp != nil {
		n += 1 + sovDef(uint64(*m.TransactionTimestamp))
	}
	if m.RequestMessageKey != nil {
		l = m.RequestMessageKey.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.ExpiryTimestamp != nil {
		n += 1 + sovDef(uint64(*m.ExpiryTimestamp))
	}
	if m.Futureproofed != nil {
		n += 2
	}
	if m.Currency != nil {
		l = len(*m.Currency)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.TxnStatus != nil {
		n += 1 + sovDef(uint64(*m.TxnStatus))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *WebMessageInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Key != nil {
		l = m.Key.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Message != nil {
		l = m.Message.Size()
		n += 1 + l + sovDef(uint64(l))
	}
	if m.MessageTimestamp != nil {
		n += 1 + sovDef(uint64(*m.MessageTimestamp))
	}
	if m.Status != nil {
		n += 1 + sovDef(uint64(*m.Status))
	}
	if m.Participant != nil {
		l = len(*m.Participant)
		n += 1 + l + sovDef(uint64(l))
	}
	if m.Ignore != nil {
		n += 3
	}
	if m.Starred != nil {
		n += 3
	}
	if m.Broadcast != nil {
		n += 3
	}
	if m.PushName != nil {
		l = len(*m.PushName)
		n += 2 + l + sovDef(uint64(l))
	}
	if m.MediaCiphertextSha256 != nil {
		l = len(m.MediaCiphertextSha256)
		n += 2 + l + sovDef(uint64(l))
	}
	if m.Multicast != nil {
		n += 3
	}
	if m.UrlText != nil {
		n += 3
	}
	if m.UrlNumber != nil {
		n += 3
	}
	if m.MessageStubType != nil {
		n += 2 + sovDef(uint64(*m.MessageStubType))
	}
	if m.ClearMedia != nil {
		n += 3
	}
	if len(m.MessageStubParameters) > 0 {
		for _, s := range m.MessageStubParameters {
			l = len(s)
			n += 2 + l + sovDef(uint64(l))
		}
	}
	if m.Duration != nil {
		n += 2 + sovDef(uint64(*m.Duration))
	}
	if len(m.Labels) > 0 {
		for _, s := range m.Labels {
			l = len(s)
			n += 2 + l + sovDef(uint64(l))
		}
	}
	if m.PaymentInfo != nil {
		l = m.PaymentInfo.Size()
		n += 2 + l + sovDef(uint64(l))
	}
	if m.FinalLiveLocation != nil {
		l = m.FinalLiveLocation.Size()
		n += 2 + l + sovDef(uint64(l))
	}
	if m.QuotedPaymentInfo != nil {
		l = m.QuotedPaymentInfo.Size()
		n += 2 + l + sovDef(uint64(l))
	}
	if m.EphemeralStartTimestamp != nil {
		n += 2 + sovDef(uint64(*m.EphemeralStartTimestamp))
	}
	if m.EphemeralDuration != nil {
		n += 2 + sovDef(uint64(*m.EphemeralDuration))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovDef(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozDef(x uint64) (n int) {
	return sovDef(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *HydratedQuickReplyButton) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HydratedQuickReplyButton: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HydratedQuickReplyButton: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplayText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.DisplayText = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Id = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HydratedURLButton) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HydratedURLButton: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HydratedURLButton: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplayText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.DisplayText = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Url = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HydratedCallButton) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HydratedCallButton: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HydratedCallButton: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplayText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.DisplayText = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.PhoneNumber = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HydratedTemplateButton) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HydratedTemplateButton: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HydratedTemplateButton: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field QuickReplyButton", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &HydratedQuickReplyButton{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.HydratedButton = &HydratedTemplateButton_QuickReplyButton{v}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UrlButton", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &HydratedURLButton{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.HydratedButton = &HydratedTemplateButton_UrlButton{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallButton", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &HydratedCallButton{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.HydratedButton = &HydratedTemplateButton_CallButton{v}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Index = &v
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *QuickReplyButton) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QuickReplyButton: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QuickReplyButton: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplayText", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DisplayText == nil {
				m.DisplayText = &HighlyStructuredMessage{}
			}
			if err := m.DisplayText.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Id = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *URLButton) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: URLButton: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: URLButton: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplayText", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DisplayText == nil {
				m.DisplayText = &HighlyStructuredMessage{}
			}
			if err := m.DisplayText.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Url == nil {
				m.Url = &HighlyStructuredMessage{}
			}
			if err := m.Url.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CallButton) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CallButton: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CallButton: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplayText", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DisplayText == nil {
				m.DisplayText = &HighlyStructuredMessage{}
			}
			if err := m.DisplayText.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhoneNumber", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PhoneNumber == nil {
				m.PhoneNumber = &HighlyStructuredMessage{}
			}
			if err := m.PhoneNumber.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TemplateButton) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TemplateButton: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TemplateButton: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field QuickReplyButton", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &QuickReplyButton{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Button = &TemplateButton_QuickReplyButton{v}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UrlButton", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &URLButton{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Button = &TemplateButton_UrlButton{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallButton", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &CallButton{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Button = &TemplateButton_CallButton{v}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Index = &v
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Location) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Location: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Location: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field DegreesLatitude", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			v2 := float64(math.Float64frombits(v))
			m.DegreesLatitude = &v2
		case 2:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field DegreesLongitude", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			v2 := float64(math.Float64frombits(v))
			m.DegreesLongitude = &v2
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Point) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Point: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Point: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field XDeprecated", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.XDeprecated = &v
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field YDeprecated", wireType)
			}
			var v int32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.YDeprecated = &v
		case 3:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field X", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			v2 := float64(math.Float64frombits(v))
			m.X = &v2
		case 4:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Y", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			v2 := float64(math.Float64frombits(v))
			m.Y = &v2
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *InteractiveAnnotation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: InteractiveAnnotation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: InteractiveAnnotation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PolygonVertices", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PolygonVertices = append(m.PolygonVertices, &Point{})
			if err := m.PolygonVertices[len(m.PolygonVertices)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Location", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &Location{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Action = &InteractiveAnnotation_Location{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AdReplyInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AdReplyInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AdReplyInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AdvertiserName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.AdvertiserName = &s
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MediaType", wireType)
			}
			var v AdReplyInfo_AD_REPLY_INFO_MEDIATYPE
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= AdReplyInfo_AD_REPLY_INFO_MEDIATYPE(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MediaType = &v
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JpegThumbnail", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JpegThumbnail = append(m.JpegThumbnail[:0], dAtA[iNdEx:postIndex]...)
			if m.JpegThumbnail == nil {
				m.JpegThumbnail = []byte{}
			}
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Caption", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Caption = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ContextInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContextInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContextInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StanzaId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.StanzaId = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Participant", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Participant = &s
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field QuotedMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.QuotedMessage == nil {
				m.QuotedMessage = &Message{}
			}
			if err := m.QuotedMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemoteJid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.RemoteJid = &s
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MentionedJid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MentionedJid = append(m.MentionedJid, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConversionSource", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ConversionSource = &s
			iNdEx = postIndex
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConversionData", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ConversionData = append(m.ConversionData[:0], dAtA[iNdEx:postIndex]...)
			if m.ConversionData == nil {
				m.ConversionData = []byte{}
			}
			iNdEx = postIndex
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConversionDelaySeconds", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ConversionDelaySeconds = &v
		case 21:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForwardingScore", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ForwardingScore = &v
		case 22:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsForwarded", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.IsForwarded = &b
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field QuotedAd", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.QuotedAd == nil {
				m.QuotedAd = &AdReplyInfo{}
			}
			if err := m.QuotedAd.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 24:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PlaceholderKey", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PlaceholderKey == nil {
				m.PlaceholderKey = &MessageKey{}
			}
			if err := m.PlaceholderKey.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 25:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Expiration", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Expiration = &v
		case 26:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EphemeralSettingTimestamp", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EphemeralSettingTimestamp = &v
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SenderKeyDistributionMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SenderKeyDistributionMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SenderKeyDistributionMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GroupId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.GroupId = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AxolotlSenderKeyDistributionMessage", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AxolotlSenderKeyDistributionMessage = append(m.AxolotlSenderKeyDistributionMessage[:0], dAtA[iNdEx:postIndex]...)
			if m.AxolotlSenderKeyDistributionMessage == nil {
				m.AxolotlSenderKeyDistributionMessage = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ImageMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ImageMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ImageMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Url = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mimetype", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Mimetype = &s
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Caption", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Caption = &s
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileSha256", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileSha256 = append(m.FileSha256[:0], dAtA[iNdEx:postIndex]...)
			if m.FileSha256 == nil {
				m.FileSha256 = []byte{}
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileLength", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FileLength = &v
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Height = &v
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Width", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Width = &v
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MediaKey", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MediaKey = append(m.MediaKey[:0], dAtA[iNdEx:postIndex]...)
			if m.MediaKey == nil {
				m.MediaKey = []byte{}
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileEncSha256", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileEncSha256 = append(m.FileEncSha256[:0], dAtA[iNdEx:postIndex]...)
			if m.FileEncSha256 == nil {
				m.FileEncSha256 = []byte{}
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InteractiveAnnotations", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InteractiveAnnotations = append(m.InteractiveAnnotations, &InteractiveAnnotation{})
			if err := m.InteractiveAnnotations[len(m.InteractiveAnnotations)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DirectPath", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.DirectPath = &s
			iNdEx = postIndex
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MediaKeyTimestamp", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MediaKeyTimestamp = &v
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JpegThumbnail", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JpegThumbnail = append(m.JpegThumbnail[:0], dAtA[iNdEx:postIndex]...)
			if m.JpegThumbnail == nil {
				m.JpegThumbnail = []byte{}
			}
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContextInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ContextInfo == nil {
				m.ContextInfo = &ContextInfo{}
			}
			if err := m.ContextInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstScanSidecar", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FirstScanSidecar = append(m.FirstScanSidecar[:0], dAtA[iNdEx:postIndex]...)
			if m.FirstScanSidecar == nil {
				m.FirstScanSidecar = []byte{}
			}
			iNdEx = postIndex
		case 19:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstScanLength", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FirstScanLength = &v
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExperimentGroupId", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ExperimentGroupId = &v
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ScansSidecar", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ScansSidecar = append(m.ScansSidecar[:0], dAtA[iNdEx:postIndex]...)
			if m.ScansSidecar == nil {
				m.ScansSidecar = []byte{}
			}
			iNdEx = postIndex
		case 22:
			if wireType == 0 {
				var v uint32
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowDef
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.ScanLengths = append(m.ScanLengths, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowDef
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthDef
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthDef
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.ScanLengths) == 0 {
					m.ScanLengths = make([]uint32, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint32
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowDef
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint32(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.ScanLengths = append(m.ScanLengths, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field ScanLengths", wireType)
			}
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MidQualityFileSha256", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MidQualityFileSha256 = append(m.MidQualityFileSha256[:0], dAtA[iNdEx:postIndex]...)
			if m.MidQualityFileSha256 == nil {
				m.MidQualityFileSha256 = []byte{}
			}
			iNdEx = postIndex
		case 24:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MidQualityFileEncSha256", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MidQualityFileEncSha256 = append(m.MidQualityFileEncSha256[:0], dAtA[iNdEx:postIndex]...)
			if m.MidQualityFileEncSha256 == nil {
				m.MidQualityFileEncSha256 = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ContactMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContactMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContactMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplayName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.DisplayName = &s
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Vcard", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Vcard = &s
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContextInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ContextInfo == nil {
				m.ContextInfo = &ContextInfo{}
			}
			if err := m.ContextInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LocationMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LocationMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LocationMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field DegreesLatitude", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			v2 := float64(math.Float64frombits(v))
			m.DegreesLatitude = &v2
		case 2:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field DegreesLongitude", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			v2 := float64(math.Float64frombits(v))
			m.DegreesLongitude = &v2
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Name = &s
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Address = &s
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Url = &s
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsLive", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.IsLive = &b
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccuracyInMeters", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AccuracyInMeters = &v
		case 8:
			if wireType != 5 {
				return fmt.Errorf("proto: wrong wireType = %d for field SpeedInMps", wireType)
			}
			var v uint32
			if (iNdEx + 4) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint32(encoding_binary.LittleEndian.Uint32(dAtA[iNdEx:]))
			iNdEx += 4
			v2 := float32(math.Float32frombits(v))
			m.SpeedInMps = &v2
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DegreesClockwiseFromMagneticNorth", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DegreesClockwiseFromMagneticNorth = &v
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Comment", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Comment = &s
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JpegThumbnail", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JpegThumbnail = append(m.JpegThumbnail[:0], dAtA[iNdEx:postIndex]...)
			if m.JpegThumbnail == nil {
				m.JpegThumbnail = []byte{}
			}
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContextInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ContextInfo == nil {
				m.ContextInfo = &ContextInfo{}
			}
			if err := m.ContextInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ExtendedTextMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ExtendedTextMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ExtendedTextMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Text", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Text = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MatchedText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.MatchedText = &s
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CanonicalUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.CanonicalUrl = &s
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Description = &s
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Title = &s
			iNdEx = postIndex
		case 7:
			if wireType != 5 {
				return fmt.Errorf("proto: wrong wireType = %d for field TextArgb", wireType)
			}
			var v uint32
			if (iNdEx + 4) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint32(encoding_binary.LittleEndian.Uint32(dAtA[iNdEx:]))
			iNdEx += 4
			m.TextArgb = &v
		case 8:
			if wireType != 5 {
				return fmt.Errorf("proto: wrong wireType = %d for field BackgroundArgb", wireType)
			}
			var v uint32
			if (iNdEx + 4) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint32(encoding_binary.LittleEndian.Uint32(dAtA[iNdEx:]))
			iNdEx += 4
			m.BackgroundArgb = &v
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Font", wireType)
			}
			var v ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_FONTTYPE
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_FONTTYPE(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Font = &v
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PreviewType", wireType)
			}
			var v ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_PREVIEWTYPE
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= ExtendedTextMessage_EXTENDED_TEXT_MESSAGE_PREVIEWTYPE(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PreviewType = &v
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JpegThumbnail", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JpegThumbnail = append(m.JpegThumbnail[:0], dAtA[iNdEx:postIndex]...)
			if m.JpegThumbnail == nil {
				m.JpegThumbnail = []byte{}
			}
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContextInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ContextInfo == nil {
				m.ContextInfo = &ContextInfo{}
			}
			if err := m.ContextInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 18:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DoNotPlayInline", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.DoNotPlayInline = &b
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DocumentMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DocumentMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DocumentMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Url = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mimetype", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Mimetype = &s
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Title = &s
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileSha256", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileSha256 = append(m.FileSha256[:0], dAtA[iNdEx:postIndex]...)
			if m.FileSha256 == nil {
				m.FileSha256 = []byte{}
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileLength", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FileLength = &v
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PageCount = &v
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MediaKey", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MediaKey = append(m.MediaKey[:0], dAtA[iNdEx:postIndex]...)
			if m.MediaKey == nil {
				m.MediaKey = []byte{}
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.FileName = &s
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileEncSha256", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileEncSha256 = append(m.FileEncSha256[:0], dAtA[iNdEx:postIndex]...)
			if m.FileEncSha256 == nil {
				m.FileEncSha256 = []byte{}
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DirectPath", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.DirectPath = &s
			iNdEx = postIndex
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MediaKeyTimestamp", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MediaKeyTimestamp = &v
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JpegThumbnail", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JpegThumbnail = append(m.JpegThumbnail[:0], dAtA[iNdEx:postIndex]...)
			if m.JpegThumbnail == nil {
				m.JpegThumbnail = []byte{}
			}
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContextInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ContextInfo == nil {
				m.ContextInfo = &ContextInfo{}
			}
			if err := m.ContextInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AudioMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AudioMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AudioMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Url = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mimetype", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Mimetype = &s
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileSha256", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileSha256 = append(m.FileSha256[:0], dAtA[iNdEx:postIndex]...)
			if m.FileSha256 == nil {
				m.FileSha256 = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileLength", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FileLength = &v
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Seconds", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Seconds = &v
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ptt", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Ptt = &b
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MediaKey", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MediaKey = append(m.MediaKey[:0], dAtA[iNdEx:postIndex]...)
			if m.MediaKey == nil {
				m.MediaKey = []byte{}
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileEncSha256", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileEncSha256 = append(m.FileEncSha256[:0], dAtA[iNdEx:postIndex]...)
			if m.FileEncSha256 == nil {
				m.FileEncSha256 = []byte{}
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DirectPath", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.DirectPath = &s
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MediaKeyTimestamp", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MediaKeyTimestamp = &v
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContextInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ContextInfo == nil {
				m.ContextInfo = &ContextInfo{}
			}
			if err := m.ContextInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StreamingSidecar", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StreamingSidecar = append(m.StreamingSidecar[:0], dAtA[iNdEx:postIndex]...)
			if m.StreamingSidecar == nil {
				m.StreamingSidecar = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VideoMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: VideoMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: VideoMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Url = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mimetype", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Mimetype = &s
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileSha256", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileSha256 = append(m.FileSha256[:0], dAtA[iNdEx:postIndex]...)
			if m.FileSha256 == nil {
				m.FileSha256 = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileLength", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FileLength = &v
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Seconds", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Seconds = &v
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MediaKey", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MediaKey = append(m.MediaKey[:0], dAtA[iNdEx:postIndex]...)
			if m.MediaKey == nil {
				m.MediaKey = []byte{}
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Caption", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Caption = &s
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GifPlayback", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.GifPlayback = &b
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Height = &v
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Width", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Width = &v
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileEncSha256", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileEncSha256 = append(m.FileEncSha256[:0], dAtA[iNdEx:postIndex]...)
			if m.FileEncSha256 == nil {
				m.FileEncSha256 = []byte{}
			}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InteractiveAnnotations", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InteractiveAnnotations = append(m.InteractiveAnnotations, &InteractiveAnnotation{})
			if err := m.InteractiveAnnotations[len(m.InteractiveAnnotations)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DirectPath", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.DirectPath = &s
			iNdEx = postIndex
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MediaKeyTimestamp", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MediaKeyTimestamp = &v
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JpegThumbnail", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JpegThumbnail = append(m.JpegThumbnail[:0], dAtA[iNdEx:postIndex]...)
			if m.JpegThumbnail == nil {
				m.JpegThumbnail = []byte{}
			}
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContextInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ContextInfo == nil {
				m.ContextInfo = &ContextInfo{}
			}
			if err := m.ContextInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StreamingSidecar", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StreamingSidecar = append(m.StreamingSidecar[:0], dAtA[iNdEx:postIndex]...)
			if m.StreamingSidecar == nil {
				m.StreamingSidecar = []byte{}
			}
			iNdEx = postIndex
		case 19:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GifAttribution", wireType)
			}
			var v VideoMessage_VIDEO_MESSAGE_ATTRIBUTION
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= VideoMessage_VIDEO_MESSAGE_ATTRIBUTION(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.GifAttribution = &v
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Call) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Call: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Call: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallKey", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CallKey = append(m.CallKey[:0], dAtA[iNdEx:postIndex]...)
			if m.CallKey == nil {
				m.CallKey = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Chat) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Chat: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Chat: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplayName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.DisplayName = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Id = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProtocolMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProtocolMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProtocolMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Key == nil {
				m.Key = &MessageKey{}
			}
			if err := m.Key.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Type", wireType)
			}
			var v ProtocolMessage_PROTOCOL_MESSAGE_TYPE
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= ProtocolMessage_PROTOCOL_MESSAGE_TYPE(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Type = &v
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EphemeralExpiration", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EphemeralExpiration = &v
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EphemeralSettingTimestamp", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EphemeralSettingTimestamp = &v
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HistorySyncNotification", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.HistorySyncNotification == nil {
				m.HistorySyncNotification = &HistorySyncNotification{}
			}
			if err := m.HistorySyncNotification.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HistorySyncNotification) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HistorySyncNotification: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HistorySyncNotification: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileSha256", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileSha256 = append(m.FileSha256[:0], dAtA[iNdEx:postIndex]...)
			if m.FileSha256 == nil {
				m.FileSha256 = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileLength", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FileLength = &v
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MediaKey", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MediaKey = append(m.MediaKey[:0], dAtA[iNdEx:postIndex]...)
			if m.MediaKey == nil {
				m.MediaKey = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileEncSha256", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileEncSha256 = append(m.FileEncSha256[:0], dAtA[iNdEx:postIndex]...)
			if m.FileEncSha256 == nil {
				m.FileEncSha256 = []byte{}
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DirectPath", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.DirectPath = &s
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SyncType", wireType)
			}
			var v HistorySyncNotification_HISTORY_SYNC_NOTIFICATION_HISTORYSYNCTYPE
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= HistorySyncNotification_HISTORY_SYNC_NOTIFICATION_HISTORYSYNCTYPE(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SyncType = &v
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChunkOrder", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ChunkOrder = &v
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ContactsArrayMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ContactsArrayMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ContactsArrayMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplayName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.DisplayName = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Contacts", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Contacts = append(m.Contacts, &ContactMessage{})
			if err := m.Contacts[len(m.Contacts)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContextInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ContextInfo == nil {
				m.ContextInfo = &ContextInfo{}
			}
			if err := m.ContextInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HSMCurrency) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HSMCurrency: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HSMCurrency: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrencyCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.CurrencyCode = &s
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount1000", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Amount1000 = &v
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HSMDateTimeComponent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HSMDateTimeComponent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HSMDateTimeComponent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DayOfWeek", wireType)
			}
			var v HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_DAYOFWEEKTYPE
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_DAYOFWEEKTYPE(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DayOfWeek = &v
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Year", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Year = &v
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Month", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Month = &v
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DayOfMonth", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DayOfMonth = &v
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hour", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Hour = &v
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Minute", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Minute = &v
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Calendar", wireType)
			}
			var v HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_CALENDARTYPE
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= HSMDateTimeComponent_HSM_DATE_TIME_COMPONENT_CALENDARTYPE(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Calendar = &v
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HSMDateTimeUnixEpoch) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HSMDateTimeUnixEpoch: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HSMDateTimeUnixEpoch: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Timestamp = &v
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HSMDateTime) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HSMDateTime: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HSMDateTime: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Component", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &HSMDateTimeComponent{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.DatetimeOneof = &HSMDateTime_Component{v}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnixEpoch", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &HSMDateTimeUnixEpoch{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.DatetimeOneof = &HSMDateTime_UnixEpoch{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HSMLocalizableParameter) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HSMLocalizableParameter: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HSMLocalizableParameter: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Default", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Default = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Currency", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &HSMCurrency{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ParamOneof = &HSMLocalizableParameter_Currency{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DateTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &HSMDateTime{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.ParamOneof = &HSMLocalizableParameter_DateTime{v}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HighlyStructuredMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HighlyStructuredMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HighlyStructuredMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Namespace", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Namespace = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ElementName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ElementName = &s
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Params = append(m.Params, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FallbackLg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.FallbackLg = &s
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FallbackLc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.FallbackLc = &s
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalizableParams", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LocalizableParams = append(m.LocalizableParams, &HSMLocalizableParameter{})
			if err := m.LocalizableParams[len(m.LocalizableParams)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeterministicLg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.DeterministicLg = &s
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeterministicLc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.DeterministicLc = &s
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HydratedHsm", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.HydratedHsm == nil {
				m.HydratedHsm = &TemplateMessage{}
			}
			if err := m.HydratedHsm.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SendPaymentMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SendPaymentMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SendPaymentMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoteMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.NoteMessage == nil {
				m.NoteMessage = &Message{}
			}
			if err := m.NoteMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestMessageKey", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RequestMessageKey == nil {
				m.RequestMessageKey = &MessageKey{}
			}
			if err := m.RequestMessageKey.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RequestPaymentMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RequestPaymentMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RequestPaymentMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrencyCodeIso4217", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.CurrencyCodeIso4217 = &s
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount1000", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Amount1000 = &v
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestFrom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.RequestFrom = &s
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NoteMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.NoteMessage == nil {
				m.NoteMessage = &Message{}
			}
			if err := m.NoteMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpiryTimestamp", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ExpiryTimestamp = &v
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeclinePaymentRequestMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeclinePaymentRequestMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeclinePaymentRequestMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Key == nil {
				m.Key = &MessageKey{}
			}
			if err := m.Key.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CancelPaymentRequestMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CancelPaymentRequestMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CancelPaymentRequestMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Key == nil {
				m.Key = &MessageKey{}
			}
			if err := m.Key.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LiveLocationMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LiveLocationMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LiveLocationMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field DegreesLatitude", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			v2 := float64(math.Float64frombits(v))
			m.DegreesLatitude = &v2
		case 2:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field DegreesLongitude", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			v2 := float64(math.Float64frombits(v))
			m.DegreesLongitude = &v2
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccuracyInMeters", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AccuracyInMeters = &v
		case 4:
			if wireType != 5 {
				return fmt.Errorf("proto: wrong wireType = %d for field SpeedInMps", wireType)
			}
			var v uint32
			if (iNdEx + 4) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint32(encoding_binary.LittleEndian.Uint32(dAtA[iNdEx:]))
			iNdEx += 4
			v2 := float32(math.Float32frombits(v))
			m.SpeedInMps = &v2
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DegreesClockwiseFromMagneticNorth", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DegreesClockwiseFromMagneticNorth = &v
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Caption", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Caption = &s
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SequenceNumber", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SequenceNumber = &v
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TimeOffset", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TimeOffset = &v
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JpegThumbnail", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JpegThumbnail = append(m.JpegThumbnail[:0], dAtA[iNdEx:postIndex]...)
			if m.JpegThumbnail == nil {
				m.JpegThumbnail = []byte{}
			}
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContextInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ContextInfo == nil {
				m.ContextInfo = &ContextInfo{}
			}
			if err := m.ContextInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *StickerMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StickerMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StickerMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Url = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileSha256", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileSha256 = append(m.FileSha256[:0], dAtA[iNdEx:postIndex]...)
			if m.FileSha256 == nil {
				m.FileSha256 = []byte{}
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileEncSha256", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FileEncSha256 = append(m.FileEncSha256[:0], dAtA[iNdEx:postIndex]...)
			if m.FileEncSha256 == nil {
				m.FileEncSha256 = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MediaKey", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MediaKey = append(m.MediaKey[:0], dAtA[iNdEx:postIndex]...)
			if m.MediaKey == nil {
				m.MediaKey = []byte{}
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mimetype", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Mimetype = &s
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Height = &v
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Width", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Width = &v
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DirectPath", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.DirectPath = &s
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileLength", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FileLength = &v
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MediaKeyTimestamp", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MediaKeyTimestamp = &v
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstFrameLength", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FirstFrameLength = &v
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstFrameSidecar", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FirstFrameSidecar = append(m.FirstFrameSidecar[:0], dAtA[iNdEx:postIndex]...)
			if m.FirstFrameSidecar == nil {
				m.FirstFrameSidecar = []byte{}
			}
			iNdEx = postIndex
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsAnimated", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.IsAnimated = &b
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PngThumbnail", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PngThumbnail = append(m.PngThumbnail[:0], dAtA[iNdEx:postIndex]...)
			if m.PngThumbnail == nil {
				m.PngThumbnail = []byte{}
			}
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContextInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ContextInfo == nil {
				m.ContextInfo = &ContextInfo{}
			}
			if err := m.ContextInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *FourRowTemplate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: FourRowTemplate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: FourRowTemplate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DocumentMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &DocumentMessage{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Title = &FourRowTemplate_DocumentMessage{v}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HighlyStructuredMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &HighlyStructuredMessage{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Title = &FourRowTemplate_HighlyStructuredMessage{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImageMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ImageMessage{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Title = &FourRowTemplate_ImageMessage{v}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VideoMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &VideoMessage{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Title = &FourRowTemplate_VideoMessage{v}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocationMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &LocationMessage{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Title = &FourRowTemplate_LocationMessage{v}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Content", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Content == nil {
				m.Content = &HighlyStructuredMessage{}
			}
			if err := m.Content.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Footer", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Footer == nil {
				m.Footer = &HighlyStructuredMessage{}
			}
			if err := m.Footer.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Buttons", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Buttons = append(m.Buttons, &TemplateButton{})
			if err := m.Buttons[len(m.Buttons)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *HydratedFourRowTemplate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: HydratedFourRowTemplate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: HydratedFourRowTemplate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DocumentMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &DocumentMessage{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Title = &HydratedFourRowTemplate_DocumentMessage{v}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HydratedTitleText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = &HydratedFourRowTemplate_HydratedTitleText{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImageMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &ImageMessage{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Title = &HydratedFourRowTemplate_ImageMessage{v}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VideoMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &VideoMessage{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Title = &HydratedFourRowTemplate_VideoMessage{v}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocationMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &LocationMessage{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Title = &HydratedFourRowTemplate_LocationMessage{v}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HydratedContentText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.HydratedContentText = &s
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HydratedFooterText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.HydratedFooterText = &s
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HydratedButtons", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HydratedButtons = append(m.HydratedButtons, &HydratedTemplateButton{})
			if err := m.HydratedButtons[len(m.HydratedButtons)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TemplateId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.TemplateId = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TemplateMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TemplateMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TemplateMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FourRowTemplate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &FourRowTemplate{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Format = &TemplateMessage_FourRowTemplate{v}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HydratedFourRowTemplate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			v := &HydratedFourRowTemplate{}
			if err := v.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			m.Format = &TemplateMessage_HydratedFourRowTemplate{v}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContextInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ContextInfo == nil {
				m.ContextInfo = &ContextInfo{}
			}
			if err := m.ContextInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HydratedTemplate", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.HydratedTemplate == nil {
				m.HydratedTemplate = &HydratedFourRowTemplate{}
			}
			if err := m.HydratedTemplate.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TemplateButtonReplyMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TemplateButtonReplyMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TemplateButtonReplyMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SelectedId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.SelectedId = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SelectedDisplayText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.SelectedDisplayText = &s
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContextInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ContextInfo == nil {
				m.ContextInfo = &ContextInfo{}
			}
			if err := m.ContextInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field SelectedIndex", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.SelectedIndex = &v
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CatalogSnapshot) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CatalogSnapshot: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CatalogSnapshot: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CatalogImage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CatalogImage == nil {
				m.CatalogImage = &ImageMessage{}
			}
			if err := m.CatalogImage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Title = &s
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Description = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProductSnapshot) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProductSnapshot: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProductSnapshot: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProductImage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ProductImage == nil {
				m.ProductImage = &ImageMessage{}
			}
			if err := m.ProductImage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProductId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ProductId = &s
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Title = &s
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Description = &s
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrencyCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.CurrencyCode = &s
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PriceAmount1000", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PriceAmount1000 = &v
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RetailerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.RetailerId = &s
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Url = &s
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProductImageCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ProductImageCount = &v
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstImageId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.FirstImageId = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ProductMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProductMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProductMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Product", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Product == nil {
				m.Product = &ProductSnapshot{}
			}
			if err := m.Product.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BusinessOwnerJid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.BusinessOwnerJid = &s
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Catalog", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Catalog == nil {
				m.Catalog = &CatalogSnapshot{}
			}
			if err := m.Catalog.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContextInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ContextInfo == nil {
				m.ContextInfo = &ContextInfo{}
			}
			if err := m.ContextInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GroupInviteMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GroupInviteMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GroupInviteMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GroupJid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.GroupJid = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InviteCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.InviteCode = &s
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field InviteExpiration", wireType)
			}
			var v int64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.InviteExpiration = &v
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GroupName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.GroupName = &s
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JpegThumbnail", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JpegThumbnail = append(m.JpegThumbnail[:0], dAtA[iNdEx:postIndex]...)
			if m.JpegThumbnail == nil {
				m.JpegThumbnail = []byte{}
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Caption", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Caption = &s
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContextInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ContextInfo == nil {
				m.ContextInfo = &ContextInfo{}
			}
			if err := m.ContextInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeviceSentMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeviceSentMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeviceSentMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DestinationJid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.DestinationJid = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Message == nil {
				m.Message = &Message{}
			}
			if err := m.Message.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeviceSyncMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeviceSyncMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeviceSyncMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SerializedXmlBytes", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SerializedXmlBytes = append(m.SerializedXmlBytes[:0], dAtA[iNdEx:postIndex]...)
			if m.SerializedXmlBytes == nil {
				m.SerializedXmlBytes = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Message) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Message: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Message: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Conversation", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Conversation = &s
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SenderKeyDistributionMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SenderKeyDistributionMessage == nil {
				m.SenderKeyDistributionMessage = &SenderKeyDistributionMessage{}
			}
			if err := m.SenderKeyDistributionMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImageMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ImageMessage == nil {
				m.ImageMessage = &ImageMessage{}
			}
			if err := m.ImageMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContactMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ContactMessage == nil {
				m.ContactMessage = &ContactMessage{}
			}
			if err := m.ContactMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocationMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LocationMessage == nil {
				m.LocationMessage = &LocationMessage{}
			}
			if err := m.LocationMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExtendedTextMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ExtendedTextMessage == nil {
				m.ExtendedTextMessage = &ExtendedTextMessage{}
			}
			if err := m.ExtendedTextMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DocumentMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DocumentMessage == nil {
				m.DocumentMessage = &DocumentMessage{}
			}
			if err := m.DocumentMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AudioMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AudioMessage == nil {
				m.AudioMessage = &AudioMessage{}
			}
			if err := m.AudioMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VideoMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.VideoMessage == nil {
				m.VideoMessage = &VideoMessage{}
			}
			if err := m.VideoMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Call", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Call == nil {
				m.Call = &Call{}
			}
			if err := m.Call.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Chat", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Chat == nil {
				m.Chat = &Chat{}
			}
			if err := m.Chat.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProtocolMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ProtocolMessage == nil {
				m.ProtocolMessage = &ProtocolMessage{}
			}
			if err := m.ProtocolMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContactsArrayMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ContactsArrayMessage == nil {
				m.ContactsArrayMessage = &ContactsArrayMessage{}
			}
			if err := m.ContactsArrayMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HighlyStructuredMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.HighlyStructuredMessage == nil {
				m.HighlyStructuredMessage = &HighlyStructuredMessage{}
			}
			if err := m.HighlyStructuredMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FastRatchetKeySenderKeyDistributionMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FastRatchetKeySenderKeyDistributionMessage == nil {
				m.FastRatchetKeySenderKeyDistributionMessage = &SenderKeyDistributionMessage{}
			}
			if err := m.FastRatchetKeySenderKeyDistributionMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SendPaymentMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SendPaymentMessage == nil {
				m.SendPaymentMessage = &SendPaymentMessage{}
			}
			if err := m.SendPaymentMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LiveLocationMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.LiveLocationMessage == nil {
				m.LiveLocationMessage = &LiveLocationMessage{}
			}
			if err := m.LiveLocationMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestPaymentMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RequestPaymentMessage == nil {
				m.RequestPaymentMessage = &RequestPaymentMessage{}
			}
			if err := m.RequestPaymentMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeclinePaymentRequestMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DeclinePaymentRequestMessage == nil {
				m.DeclinePaymentRequestMessage = &DeclinePaymentRequestMessage{}
			}
			if err := m.DeclinePaymentRequestMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 24:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CancelPaymentRequestMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CancelPaymentRequestMessage == nil {
				m.CancelPaymentRequestMessage = &CancelPaymentRequestMessage{}
			}
			if err := m.CancelPaymentRequestMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TemplateMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TemplateMessage == nil {
				m.TemplateMessage = &TemplateMessage{}
			}
			if err := m.TemplateMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 26:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StickerMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.StickerMessage == nil {
				m.StickerMessage = &StickerMessage{}
			}
			if err := m.StickerMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 28:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GroupInviteMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.GroupInviteMessage == nil {
				m.GroupInviteMessage = &GroupInviteMessage{}
			}
			if err := m.GroupInviteMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 29:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TemplateButtonReplyMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.TemplateButtonReplyMessage == nil {
				m.TemplateButtonReplyMessage = &TemplateButtonReplyMessage{}
			}
			if err := m.TemplateButtonReplyMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 30:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProductMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ProductMessage == nil {
				m.ProductMessage = &ProductMessage{}
			}
			if err := m.ProductMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 31:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeviceSentMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DeviceSentMessage == nil {
				m.DeviceSentMessage = &DeviceSentMessage{}
			}
			if err := m.DeviceSentMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 32:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeviceSyncMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.DeviceSyncMessage == nil {
				m.DeviceSyncMessage = &DeviceSyncMessage{}
			}
			if err := m.DeviceSyncMessage.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MessageKey) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MessageKey: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MessageKey: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RemoteJid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.RemoteJid = &s
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromMe", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.FromMe = &b
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Id = &s
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Participant", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Participant = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WebFeatures) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WebFeatures: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WebFeatures: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LabelsDisplay", wireType)
			}
			var v WebFeatures_WEB_FEATURES_FLAG
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= WebFeatures_WEB_FEATURES_FLAG(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LabelsDisplay = &v
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoipIndividualOutgoing", wireType)
			}
			var v WebFeatures_WEB_FEATURES_FLAG
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= WebFeatures_WEB_FEATURES_FLAG(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.VoipIndividualOutgoing = &v
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GroupsV3", wireType)
			}
			var v WebFeatures_WEB_FEATURES_FLAG
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= WebFeatures_WEB_FEATURES_FLAG(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.GroupsV3 = &v
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GroupsV3Create", wireType)
			}
			var v WebFeatures_WEB_FEATURES_FLAG
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= WebFeatures_WEB_FEATURES_FLAG(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.GroupsV3Create = &v
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChangeNumberV2", wireType)
			}
			var v WebFeatures_WEB_FEATURES_FLAG
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= WebFeatures_WEB_FEATURES_FLAG(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ChangeNumberV2 = &v
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QueryStatusV3Thumbnail", wireType)
			}
			var v WebFeatures_WEB_FEATURES_FLAG
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= WebFeatures_WEB_FEATURES_FLAG(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.QueryStatusV3Thumbnail = &v
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LiveLocations", wireType)
			}
			var v WebFeatures_WEB_FEATURES_FLAG
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= WebFeatures_WEB_FEATURES_FLAG(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LiveLocations = &v
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QueryVname", wireType)
			}
			var v WebFeatures_WEB_FEATURES_FLAG
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= WebFeatures_WEB_FEATURES_FLAG(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.QueryVname = &v
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoipIndividualIncoming", wireType)
			}
			var v WebFeatures_WEB_FEATURES_FLAG
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= WebFeatures_WEB_FEATURES_FLAG(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.VoipIndividualIncoming = &v
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field QuickRepliesQuery", wireType)
			}
			var v WebFeatures_WEB_FEATURES_FLAG
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= WebFeatures_WEB_FEATURES_FLAG(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.QuickRepliesQuery = &v
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Payments", wireType)
			}
			var v WebFeatures_WEB_FEATURES_FLAG
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= WebFeatures_WEB_FEATURES_FLAG(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Payments = &v
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StickerPackQuery", wireType)
			}
			var v WebFeatures_WEB_FEATURES_FLAG
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= WebFeatures_WEB_FEATURES_FLAG(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.StickerPackQuery = &v
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LiveLocationsFinal", wireType)
			}
			var v WebFeatures_WEB_FEATURES_FLAG
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= WebFeatures_WEB_FEATURES_FLAG(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LiveLocationsFinal = &v
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LabelsEdit", wireType)
			}
			var v WebFeatures_WEB_FEATURES_FLAG
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= WebFeatures_WEB_FEATURES_FLAG(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.LabelsEdit = &v
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MediaUpload", wireType)
			}
			var v WebFeatures_WEB_FEATURES_FLAG
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= WebFeatures_WEB_FEATURES_FLAG(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MediaUpload = &v
		case 18:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MediaUploadRichQuickReplies", wireType)
			}
			var v WebFeatures_WEB_FEATURES_FLAG
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= WebFeatures_WEB_FEATURES_FLAG(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MediaUploadRichQuickReplies = &v
		case 19:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VnameV2", wireType)
			}
			var v WebFeatures_WEB_FEATURES_FLAG
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= WebFeatures_WEB_FEATURES_FLAG(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.VnameV2 = &v
		case 20:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VideoPlaybackUrl", wireType)
			}
			var v WebFeatures_WEB_FEATURES_FLAG
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= WebFeatures_WEB_FEATURES_FLAG(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.VideoPlaybackUrl = &v
		case 21:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StatusRanking", wireType)
			}
			var v WebFeatures_WEB_FEATURES_FLAG
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= WebFeatures_WEB_FEATURES_FLAG(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.StatusRanking = &v
		case 22:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoipIndividualVideo", wireType)
			}
			var v WebFeatures_WEB_FEATURES_FLAG
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= WebFeatures_WEB_FEATURES_FLAG(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.VoipIndividualVideo = &v
		case 23:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ThirdPartyStickers", wireType)
			}
			var v WebFeatures_WEB_FEATURES_FLAG
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= WebFeatures_WEB_FEATURES_FLAG(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ThirdPartyStickers = &v
		case 24:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FrequentlyForwardedSetting", wireType)
			}
			var v WebFeatures_WEB_FEATURES_FLAG
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= WebFeatures_WEB_FEATURES_FLAG(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.FrequentlyForwardedSetting = &v
		case 25:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GroupsV4JoinPermission", wireType)
			}
			var v WebFeatures_WEB_FEATURES_FLAG
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= WebFeatures_WEB_FEATURES_FLAG(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.GroupsV4JoinPermission = &v
		case 26:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecentStickers", wireType)
			}
			var v WebFeatures_WEB_FEATURES_FLAG
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= WebFeatures_WEB_FEATURES_FLAG(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RecentStickers = &v
		case 27:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Catalog", wireType)
			}
			var v WebFeatures_WEB_FEATURES_FLAG
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= WebFeatures_WEB_FEATURES_FLAG(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Catalog = &v
		case 28:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StarredStickers", wireType)
			}
			var v WebFeatures_WEB_FEATURES_FLAG
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= WebFeatures_WEB_FEATURES_FLAG(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.StarredStickers = &v
		case 29:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field VoipGroupCall", wireType)
			}
			var v WebFeatures_WEB_FEATURES_FLAG
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= WebFeatures_WEB_FEATURES_FLAG(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.VoipGroupCall = &v
		case 30:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TemplateMessage", wireType)
			}
			var v WebFeatures_WEB_FEATURES_FLAG
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= WebFeatures_WEB_FEATURES_FLAG(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TemplateMessage = &v
		case 31:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TemplateMessageInteractivity", wireType)
			}
			var v WebFeatures_WEB_FEATURES_FLAG
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= WebFeatures_WEB_FEATURES_FLAG(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TemplateMessageInteractivity = &v
		case 32:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EphemeralMessages", wireType)
			}
			var v WebFeatures_WEB_FEATURES_FLAG
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= WebFeatures_WEB_FEATURES_FLAG(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EphemeralMessages = &v
		case 33:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field E2ENotificationSync", wireType)
			}
			var v WebFeatures_WEB_FEATURES_FLAG
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= WebFeatures_WEB_FEATURES_FLAG(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.E2ENotificationSync = &v
		case 34:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecentStickersV2", wireType)
			}
			var v WebFeatures_WEB_FEATURES_FLAG
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= WebFeatures_WEB_FEATURES_FLAG(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.RecentStickersV2 = &v
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TabletNotificationsInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TabletNotificationsInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TabletNotificationsInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Timestamp = &v
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnreadChats", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UnreadChats = &v
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NotifyMessageCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.NotifyMessageCount = &v
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NotifyMessage", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NotifyMessage = append(m.NotifyMessage, &NotificationMessageInfo{})
			if err := m.NotifyMessage[len(m.NotifyMessage)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *NotificationMessageInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: NotificationMessageInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: NotificationMessageInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Key == nil {
				m.Key = &MessageKey{}
			}
			if err := m.Key.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Message == nil {
				m.Message = &Message{}
			}
			if err := m.Message.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageTimestamp", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MessageTimestamp = &v
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Participant", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Participant = &s
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WebNotificationsInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WebNotificationsInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WebNotificationsInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Timestamp = &v
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnreadChats", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.UnreadChats = &v
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NotifyMessageCount", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.NotifyMessageCount = &v
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NotifyMessages", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NotifyMessages = append(m.NotifyMessages, &WebMessageInfo{})
			if err := m.NotifyMessages[len(m.NotifyMessages)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PaymentInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PaymentInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PaymentInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CurrencyDeprecated", wireType)
			}
			var v PaymentInfo_PAYMENT_INFO_CURRENCY
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= PaymentInfo_PAYMENT_INFO_CURRENCY(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CurrencyDeprecated = &v
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount1000", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Amount1000 = &v
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReceiverJid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.ReceiverJid = &s
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var v PaymentInfo_PAYMENT_INFO_STATUS
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= PaymentInfo_PAYMENT_INFO_STATUS(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Status = &v
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TransactionTimestamp", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TransactionTimestamp = &v
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestMessageKey", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.RequestMessageKey == nil {
				m.RequestMessageKey = &MessageKey{}
			}
			if err := m.RequestMessageKey.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExpiryTimestamp", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ExpiryTimestamp = &v
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Futureproofed", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Futureproofed = &b
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Currency", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Currency = &s
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TxnStatus", wireType)
			}
			var v PaymentInfo_PAYMENT_INFO_TXNSTATUS
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= PaymentInfo_PAYMENT_INFO_TXNSTATUS(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.TxnStatus = &v
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *WebMessageInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDef
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: WebMessageInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: WebMessageInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Key == nil {
				m.Key = &MessageKey{}
			}
			if err := m.Key.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Message == nil {
				m.Message = &Message{}
			}
			if err := m.Message.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageTimestamp", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MessageTimestamp = &v
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Status", wireType)
			}
			var v WebMessageInfo_WEB_MESSAGE_INFO_STATUS
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= WebMessageInfo_WEB_MESSAGE_INFO_STATUS(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Status = &v
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Participant", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.Participant = &s
			iNdEx = postIndex
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ignore", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Ignore = &b
		case 17:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Starred", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Starred = &b
		case 18:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Broadcast", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Broadcast = &b
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PushName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			s := string(dAtA[iNdEx:postIndex])
			m.PushName = &s
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MediaCiphertextSha256", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MediaCiphertextSha256 = append(m.MediaCiphertextSha256[:0], dAtA[iNdEx:postIndex]...)
			if m.MediaCiphertextSha256 == nil {
				m.MediaCiphertextSha256 = []byte{}
			}
			iNdEx = postIndex
		case 21:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Multicast", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Multicast = &b
		case 22:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UrlText", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.UrlText = &b
		case 23:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UrlNumber", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.UrlNumber = &b
		case 24:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageStubType", wireType)
			}
			var v WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= WebMessageInfo_WEB_MESSAGE_INFO_STUBTYPE(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.MessageStubType = &v
		case 25:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClearMedia", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.ClearMedia = &b
		case 26:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageStubParameters", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MessageStubParameters = append(m.MessageStubParameters, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 27:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Duration", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Duration = &v
		case 28:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Labels", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Labels = append(m.Labels, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 29:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PaymentInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.PaymentInfo == nil {
				m.PaymentInfo = &PaymentInfo{}
			}
			if err := m.PaymentInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 30:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FinalLiveLocation", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.FinalLiveLocation == nil {
				m.FinalLiveLocation = &LiveLocationMessage{}
			}
			if err := m.FinalLiveLocation.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 31:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field QuotedPaymentInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthDef
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthDef
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.QuotedPaymentInfo == nil {
				m.QuotedPaymentInfo = &PaymentInfo{}
			}
			if err := m.QuotedPaymentInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 32:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EphemeralStartTimestamp", wireType)
			}
			var v uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EphemeralStartTimestamp = &v
		case 33:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EphemeralDuration", wireType)
			}
			var v uint32
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDef
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EphemeralDuration = &v
		default:
			iNdEx = preIndex
			skippy, err := skipDef(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDef
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return new(github_com_golang_protobuf_proto.RequiredNotSetError)
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipDef(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowDef
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDef
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDef
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthDef
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupDef
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthDef
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthDef        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowDef          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupDef = fmt.Errorf("proto: unexpected end of group")
)
