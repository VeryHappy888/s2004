package test

import (
	"encoding/base64"
	"encoding/hex"
	"fmt"
	"github.com/golang/protobuf/proto"
	"testing"
	"ws-go/protocol/waproto"
	"ws-go/protocol/xxmp"
	"ws-go/waver"
)

func TestSwitch(t *testing.T) {

	t.Log(uint32(0 & 255))
	t.Log([]byte("WA"))
}

func TestBaseToHex(t *testing.T) {
	str := "MwiCuL6gBxA2GiD3DzZUQp1AL5AGDFFz/Lpx1nSzzmNJu3hOpXp0HLJrkPBG9PJRVK7a/81nVZzNmNrwh/Y+62oggIrHP63vvhnm21Y7GW50EiEukV3/9ezuTkTTCftY1SIlH7UaLCxn7gs="
	baseData, err := base64.StdEncoding.DecodeString(str)
	if err != nil {
		t.Fatal(err)
	}
	var clientPayload waproto.ClientPayload
	err = proto.Unmarshal(baseData, &clientPayload)
	if err != nil {
		t.Fatal(err)
	}
	t.Log(hex.EncodeToString(baseData))
}

func TestXMMPEnAndDe(t *testing.T) {
	/*pic := "fd0009c2ffd8ffe000104a46494600010100000100010000ffed008450686f746f73686f7020332e30003842494d04040000000000681c0228006246424d443061303030613664303130303030323030323030303031333033303030303366303330303030373930333030303034373034303030306565303530303030333330363030303037303036303030306236303630303030633230393030303000ffdb00430006040506050406060506070706080a100a0a09090a140e0f0c1017141818171416161a1d251f1a1b231c1616202c20232627292a29191f2d302d283025282928ffdb0043010707070a080a130a0a13281a161a2828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828282828ffc20011080060006003012200021101031101ffc4001b00000202030100000000000000000000000203000104050607ffc40017010101010100000000000000000000000000020103ffda000c03010002100310000001e9e9ca8d2b90825408588984bcd20ad133aeb09aa86058aaf3484858bb2c530bcfb334f71eca41736cb5596968e681a0c9c46df87a85aa1d47b208b79f558b14dbb50b723579bc3eceb758c5df2be9f57dccd6d80a65952e114dc434dc765ea2a2391d79b4d8c91d33eaab72c6d45f21b8e1b6549a2a8cfed313691d5999879195ffc400221000010304020301010000000000000000010003110204103112210513413214ffda0008010100010502fa81944e0a2538254e2ac10884352b58f8aa8a8890b6bc95d7aa9051ef12a707b5ac4abe785bb4ed649073552b4815b52a13ce0a1bba7cbd593818955690242daaba5e46e7dd5d6650da0a78ad8442ec205794b9e34b9562912631fa53c4f252b6af1dfe76de709477f3c65b40c42328853d72029beb8f73b5992ac58f7b94885d15d85cbada3d63c93dc53d5ce1ba2a72bb767d0d8532bf38da90ae1c0d34fb864ad0f14c71a469420713234bc8dc7b1caea92159305f76910a92a9d4afb2aa57f71c1a76ac77368c7a1aa7b415257fffc40017110101010100000000000000000000000001201000ffda0008010301013f0195a59597021e217033ffc40017110101010100000000000000000000000001203010ffda0008010201013f01cc92d7379fffc4002910000005020503040300000000000000000001021021113112132032614142512230339181a1c1ffda0008010100063f026a8e5bc18a2a04109d123c90a8914e82adc68cb47c877e344b40f06dc8a2862ba8f683528eaa3d32f2c6a5d886357e0b47224488781853f1a7f7ec40911f432907ea3bf028d84a4cfd8357d103354a8df39573b0979969b0ad601abb4a12f556c48812f221b293d6e284c484dcc1252d238102194b3e80d4adca7cd56e3b3c340f06d84b621e9da57142791fd143bb50b728509a8408bbba8f53ff00ffc400261000020202020201040301000000000000000111213151416171819110a1c1f0b1d1e1f1ffda0008010100013f21ce15a2270dcae1f04cdba38b022ecbbcc9a307b822183a22aa37cff66169b212b8261af9838127b47ea58b32479e5106e96351e4161e486e24ed314ac5846a2a1684ed9d89a4873289fc0db53919457b1aba731f22f325d0a187e876e3fec7903f9f28694a49c3647fab2595809cbff07b2bedb10ea30636e450d46443545e86479b9d109afc8e0ea885b6335854b1f64855a11311235f62c4cc6c49d53b1bf00fb25d32921431d1724ba345cb1f79b1ed9a1242af6611cb2546a49fa13ac131d9195d9b9ec70ebbe84b4b8c0ec62ed70346e54263ccac21bc26c4dd05b193453d8f871d89e41d6c6387b2dbfa0ea43549d17c2d92d523f274348b2051014560926f920b0793478273f24f31152dd7dbd0a0963739e09ec441c9a26128552c4eaa73d8c49dcacdf084370177620d97409b3256e365a07557ca2f2b0d57242724f32ce67c8d821252db1b6964b1a55e49e427d3a1d0b92b2d398a43d10ff92c697c0dc5fba1a720370b592c96fef32799c8a9b943aa3ae087298ab0c89e23d068124c1e4339ac12d7d4968897cc2ba5424c8896ea8458ceda08b48afd3fffda000c030100020003000000105d24e9acb3a75af9fcd61a6f7bdaf3f18f6feb344ce3c628701db8ffc4001a110003010101010000000000000000000000011011214120ffda0008010301013f108a2661da95db952199722146c433d3e1f58ba246cf21194fffc400191101000301010000000000000000000000010010112120ffda0008010201013f10bda0db5b19162d1079209395e40c8b91ecd8b03696d7ffc40024100100020202030002030101000000000001001121314151617181a1d191b1c1e1f0ffda0008010100013f10c3080ed163e460037b2299f48ce1ba55ff0044876355c95a66ea556e8c2c058d314f2f17cc0bdc67a2452a21b1555ea6da11b7e412c26d5e1d89d44ea5675cbe6345a36b58cb390de1fe676d964a6bf94c0160c5ebc092c3c62cc3f6210399ecfdca28c6583b259862e2b4711f15b29c9fb8f8c562f084d25298187d4df84b9730953c22ed37e1495585279dc166cf0e63d3c00b43d3cfd95bab34e57e605f1ab859fcfee714394b80a74e29e65b2c1b269388a6aeb17f84e61da217a6ecf222aa1995939bf0ee259154cff303b201a485e46475922a44066a58017db152b24d9ffb314962cde87c8975c8e530682f0eb3107859b770b4b09c9e0ede221c2e564e308c68fcf12814a39de2294aae14d8c5696070dfbee50d3d534c4c06396c7f4ca53c8e5dfa61e5c0d3b3d4159c179751537baecffb2e6f1ca34773c1c4741815315897d75e6f889c2acb0378995ade0c91206be9312f60d9cc17575df4c14792c9858e85b6034f9d440bcd5ab3f194a731ad2ecf0b00181f0420598c5e39a87aa4e2655d129650ac69f92e2bf452c0586d8aaa0f93201caaef0fc995a275bc41e2a74737eba803607a47862af91fec6da854e6273336e17994a021c5f708cd4d3cd19f661bb1cad91407b17f209a9b748eba9a24734ecf92a01b45b8a4f5310583d0438a455e29cdc751a64b8bff00a9c335c9afb3532539f9171c22dd518814d4400ad1e262809488ec9cb9770b08a6cbd4a3dde91c9e206f65bd5d7ea676956031f84f1820bc7f659d438a3fdf33210a8c0461149c60f7e2731591b5b662178b01213190d362fa4e2598671bebdcaeeaf2dce26a45e9b3fb3fd973301c6973c75827803ec0e0a177f08a961d94e3d442ecaeaa3f012d84ff00b8a1b95d53c12eb4bb9abfe62889265bc90c825985f11ae0d6f45c7895347fb3797478f6cc8dbdde39df91d85793a21b6c80f882f19595d71ed89025c17c7a88abf008f6e3d6080d5948c89fb9854b61e4faf5002974e9f51d6366f2417542f6c72c0c055de56af7703b16e5d4552f001cac0b5b872daee24ee0c3fb86cae7a6594065c2cfffd9"
	picData, err := hex.DecodeString(pic[8:])
	if err != nil {
		t.Fatal(err)
	}
	fmt.Println(base64.StdEncoding.EncodeToString(picData))
	ioutil.WriteFile("1.jpg", picData, os.ModeDir)

	xxmp.SetWAXXMPVersion(waver.NewWA41())*/
	str := "f80a0b08fb0a3af6c9fd8655b0d1fc7f04260efaff0b84794651386a163551534213ec12fc0a323a3435774f4a483579f802f8021bf806f8040e0ffaff876283826990500f03f801f8061636330460fd00010a3308dea6c904122105ec1bb69a192a3a2361d59cca2ee8f75680b56b84759e530fb4783c6df81510461a210531330be1aba2c270d4f86843b8a718ae08ce4a261e6511ff8bb4ea76bb2ac90e22b301330a21059bb39fe29122201e2e9ed978bcc3df5a19b690c354e8fe1f9c1938e30e5cf36010001800228001909c421683d3a4db4af97e33324aad1f82d821c31f45b5cae6208392556f2a7fadc865a8eca3eaded3ab2a711e47287702fb3fcebb51c2c7e185d3c22730d4054131fd06c0517174557c08dbefdc2eef7a88f94ffb8cbdd8fc5559761946fc406571ce4771067b48baf3478ca88e3a9ae6deed63f8b8eeb16645c1f8de39a2519b615277f5a346ff28858aedc7023001f8040e0ffaff8684794651386f03f801f8061636330442fcb3330a2105fae6e8716af81e9debed74a56fe54d507527df766b2fcffbd7ee3130b1720f3b10001800228001a2480d38aab43f7a1816496f8a74bdac4eb729b60d4a69989b7edb7fa9fe666c7c6d25ce9ef6a86958c511dad3ccaaec405256f3a7ad390316d08c4be173ae2cbea90b1750dac3d50601806569b46552a9de256499d5052f94bb0933934bd6b3810b30653c46b92cfed1f4fab101b6b4e19f7b3eb28a49d9c693b0fb8233af5a9bc737a2ceac43d4f8040e0ffaff0663961463235103f801f8061636330460fd00010a3308909ce804122105df13cd93fded09eb6e8b1c9e3983ea40697a09f55b5c4016e1fa926fd9524c361a210531330be1aba2c270d4f86843b8a718ae08ce4a261e6511ff8bb4ea76bb2ac90e22b301330a2105922c0111f0dfada68c8244e2b92f10acc5a987f899e243f1d8e98a20216f236310001800228001a4b5430485b387c8bd71dd704ec6473d482c95793c6378a213a72188476be1352b71e2deb0fb6421bb2c78c43cc8cfe4b02e6d88072f698c6322965016b31887571a14ccfdde029071109630152e69553c05cb821d568147463a50c361e65693e56ff11f77c205a0ec6e05d143b0fd25234c45fa088d67a0480b863b4c4c010b9ea65f89a3446cae28858aedc7023000f8040e0ffaff8616314809861f03f801f8061636330460fd00010a3308ade5e602122105f2cd25a26594fe50f118f2dab0032757f13e39902dd6d571ea4f8852a1159c3a1a210531330be1aba2c270d4f86843b8a718ae08ce4a261e6511ff8bb4ea76bb2ac90e22b301330a21055c7e8ab3e1e4f39650ceaa3197d7de4b36eccd71a059ead9fbf3ca548f15bf5e10001800228001adc99b2f7563937a11cbf4ebd8305cad64e7d614deb46fb4318b4c0f51b98b5a083cd0980f7e84a2e59e347f052d88fb077f185129abdb9fbba71849929a16a14031f116a695c1b51cdd2674644fe0ff420a163c5d03db7e3a5c7428bef13578e62f1589cffb0ef8fbd4238c92479b114d7aa9140da3ca24d54dd87812c1b7bb7db6c57382a2126f28858aedc7023000f8040e0ffaff8660108908990f03f801f8061636330460fd00010a33089ed0c603122105298b9c4b553873137fa620797cf0753b308d73c75c742bfdc881abd25c68d9501a210531330be1aba2c270d4f86843b8a718ae08ce4a261e6511ff8bb4ea76bb2ac90e22b301330a2105250488ce7d01a349300c2e4df521fffe1b040cf12af738c13ed2b15112b2551b100018002280013c0ba7b297bd3ba23c921b4d519bc9f9f654ba4cc0796d330fe836f30b5b836b3f0fc67de270b42fbec3f9601a899f6ade32d128826f18833028c7a2b0b1e9eac2335f9c66056612a92f34b8a4a95a9ba1c767ab6631134a0578677938caac9ef53ec1ca7f87d25067ed4c4e74ab54a012007047c2cabedd297cad6402ac332d6224efe1fe6980c728858aedc7023000f8040e0ffaff0644787157771103f801f8061636330460fd00010a330886b7e0051221052121ec16c586f1b6371ec38331f99048200be04531d2fc7deca7e1f399382b7f1a210531330be1aba2c270d4f86843b8a718ae08ce4a261e6511ff8bb4ea76bb2ac90e22b301330a21053cf8f8effe0804e3093a5111db96b3af966af972ff0c17fcb0641820dc534c1210001800228001c1e90eaa579fcbfb7d0dc1d3b4905905c2dce4e8107b00902d1b55642d58cbbddcae32b1ef9e777246fbf3783b462e550643421d1b532a860785e1af76fd89a261fe00732d7bc939ad9b0ac0407006ca9ef3278bc115df86f144760a318f622313ce7842d11a322514959150b7247fffa4eed9a1d1c185afd7dafbf5ba4ae47542f02cf35e19a68228858aedc7023000f8061636330417fc8b3308a0e2d8ef0610001a40cdd25755d0752c18ce3501099a49484df062d77546263a7b27e111dd12b634fb125998fb55a6dc113d44effd8cbd7c0c88c824a02dfe734cd5aab77456a24f68e20015933b940ae986a4ef93f4d1fff5c75df6fa3dff36892049df4d9b5d0591a19bb951e49b04bf7aa92b1d40e8db044c5c3ee9dafdc3e926b8f37b4b89bb89"
	data, err := hex.DecodeString(str)
	if err != nil {
		t.Fatal(err)
	}
	t.Log(len(data))
	node, err := xxmp.Decoder(data)
	if err != nil {
		t.Fatal(err)
	}
	fmt.Println(node.GetString())
}

func TestXMMP(t *testing.T) {
	xxmp.SetWAXXMPVersion(waver.NewWA41())

	str := "fca73308e5cbd00112210588af9fb5515a4df22d5c9b904363d42e5926e8b933b11c6ee49b4d754455236e1a2105e15b1b33b2b3fa564293730fd5f1ba194bee1480bb34fb20a9e3e623722725202252330a2105c2ad200b6a7d5da512aa55f775b9b95bc85dae1266db6feddc9c15270e4fe246100118002220068b12afce666dcca349b6a1bfde9a836617d5b922805ddf562ed35ea6c2455e8eb6a79c1a37c5cc28b281d0233002"
	data, err := hex.DecodeString(str)
	if err != nil {
		t.Fatal(err)
	}
	/*	token := ixxmp.XMMPToken{}
		a, err := token.From(bytes.NewBuffer(data))
		if err != nil {
			t.Fatal(err)
		}

		t.Log(a.(ixxmp.AbstractListInterface).GetItems())
		n := &ixxmp.Node{}
		nn := n.From(a.(ixxmp.AbstractListInterface))

		t.Log(nn.GetString())*/

	node := xxmp.NewNode("message", []xxmp.Attribute{
		xxmp.NewAttribute("to", "44791605783@s.whatsapp.net"),
		xxmp.NewAttribute("type", "text"),
		xxmp.NewAttribute("id", "02B5D09DD92276D1D41158F51E31704"),
	}, []*xxmp.Node{
		xxmp.NewNode("enc", []xxmp.Attribute{
			xxmp.NewAttribute("v", "2"),
			xxmp.NewAttribute("type", "pkmsg"),
		}, nil, data),
	}, nil)
	t.Log(hex.EncodeToString(node.GetToken().GetBytes()))
}
